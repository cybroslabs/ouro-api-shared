# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from acquisition import internal_pb2 as acquisition_dot_internal__pb2
from acquisition import main_pb2 as acquisition_dot_main__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from system import main_pb2 as system_dot_main__pb2


class OuroOperatorServiceStub(object):
    """The Ouro Operator service definition.
    Those are the gRPC services that the Ouro Operator provides for other components.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListDrivers = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/ListDrivers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=acquisition_dot_main__pb2.ListOfDriver.FromString,
                _registered_method=True)
        self.SetDriver = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/SetDriver',
                request_serializer=acquisition_dot_main__pb2.Driver.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetDriver = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/GetDriver',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                response_deserializer=acquisition_dot_main__pb2.Driver.FromString,
                _registered_method=True)
        self.SetDriverScale = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/SetDriverScale',
                request_serializer=acquisition_dot_internal__pb2.SetDriverScaleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetDriverScale = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/GetDriverScale',
                request_serializer=acquisition_dot_internal__pb2.GetDriverScaleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.UInt32Value.FromString,
                _registered_method=True)
        self.GetApplicationConfig = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/GetApplicationConfig',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=system_dot_main__pb2.ApplicationConfigDescriptor.FromString,
                _registered_method=True)
        self.UpdateApplicationConfig = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/UpdateApplicationConfig',
                request_serializer=system_dot_main__pb2.ApplicationConfig.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SynchronizeComponentConfig = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/SynchronizeComponentConfig',
                request_serializer=system_dot_main__pb2.ComponentConfigDescriptor.SerializeToString,
                response_deserializer=system_dot_main__pb2.ComponentConfig.FromString,
                _registered_method=True)
        self.StartUpgrade = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/StartUpgrade',
                request_serializer=acquisition_dot_internal__pb2.StartUpgradeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetLicense = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/GetLicense',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=system_dot_main__pb2.License.FromString,
                _registered_method=True)
        self.GetLicenseRequestCode = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/GetLicenseRequestCode',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                _registered_method=True)
        self.SetLicense = channel.unary_unary(
                '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/SetLicense',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class OuroOperatorServiceServicer(object):
    """The Ouro Operator service definition.
    Those are the gRPC services that the Ouro Operator provides for other components.
    """

    def ListDrivers(self, request, context):
        """Retrieves a paginated list of drivers based on the specified criteria. The page size and page number (zero-based) can be defined in the request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDriver(self, request, context):
        """The method called by the Driver to set the driver templates. The parameter contains the driver templates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDriver(self, request, context):
        """Retrieves the details of the specified driver.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDriverScale(self, request, context):
        """The method called by the Taskmaster to set the driver scale.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDriverScale(self, request, context):
        """The method called by the Taskmaster to get the driver scale.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetApplicationConfig(self, request, context):
        """Retrieves the current application configuration settings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateApplicationConfig(self, request, context):
        """Updates the details of an existing application configuration. Fields that are omitted from the request will be left unchanged.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SynchronizeComponentConfig(self, request, context):
        """Synchronizes the application configuration. The input value shall contain all default values and all known keys (even with null values).
        The output value will contain currently set values, including details that are not set.
        Values missing from the defaults will be deleted if they were previously set in the application configuration.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartUpgrade(self, request, context):
        """The method called by the DeviceRegistry to start the driver in upgrade mode. It will provide structure upgrade between the driver versions.
        The driver is started as Kubernetes job and ends when all the structures are upgraded; which is controlled by the DeviceRegistry.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLicense(self, request, context):
        """The method returns the current license key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLicenseRequestCode(self, request, context):
        """The method returns the license request code if the license is not set. Otherwise it returns empty string.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLicense(self, request, context):
        """The method stored a new license key. Used only and only for air-gapped installations.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OuroOperatorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListDrivers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDrivers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=acquisition_dot_main__pb2.ListOfDriver.SerializeToString,
            ),
            'SetDriver': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDriver,
                    request_deserializer=acquisition_dot_main__pb2.Driver.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetDriver': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDriver,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                    response_serializer=acquisition_dot_main__pb2.Driver.SerializeToString,
            ),
            'SetDriverScale': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDriverScale,
                    request_deserializer=acquisition_dot_internal__pb2.SetDriverScaleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetDriverScale': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDriverScale,
                    request_deserializer=acquisition_dot_internal__pb2.GetDriverScaleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.UInt32Value.SerializeToString,
            ),
            'GetApplicationConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetApplicationConfig,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=system_dot_main__pb2.ApplicationConfigDescriptor.SerializeToString,
            ),
            'UpdateApplicationConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateApplicationConfig,
                    request_deserializer=system_dot_main__pb2.ApplicationConfig.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SynchronizeComponentConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SynchronizeComponentConfig,
                    request_deserializer=system_dot_main__pb2.ComponentConfigDescriptor.FromString,
                    response_serializer=system_dot_main__pb2.ComponentConfig.SerializeToString,
            ),
            'StartUpgrade': grpc.unary_unary_rpc_method_handler(
                    servicer.StartUpgrade,
                    request_deserializer=acquisition_dot_internal__pb2.StartUpgradeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetLicense': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLicense,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=system_dot_main__pb2.License.SerializeToString,
            ),
            'GetLicenseRequestCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLicenseRequestCode,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            ),
            'SetLicense': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLicense,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'io.clbs.openhes.services.svcourooperator.OuroOperatorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('io.clbs.openhes.services.svcourooperator.OuroOperatorService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OuroOperatorService(object):
    """The Ouro Operator service definition.
    Those are the gRPC services that the Ouro Operator provides for other components.
    """

    @staticmethod
    def ListDrivers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/ListDrivers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            acquisition_dot_main__pb2.ListOfDriver.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDriver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/SetDriver',
            acquisition_dot_main__pb2.Driver.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDriver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/GetDriver',
            google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            acquisition_dot_main__pb2.Driver.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDriverScale(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/SetDriverScale',
            acquisition_dot_internal__pb2.SetDriverScaleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDriverScale(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/GetDriverScale',
            acquisition_dot_internal__pb2.GetDriverScaleRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.UInt32Value.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetApplicationConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/GetApplicationConfig',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            system_dot_main__pb2.ApplicationConfigDescriptor.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateApplicationConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/UpdateApplicationConfig',
            system_dot_main__pb2.ApplicationConfig.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SynchronizeComponentConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/SynchronizeComponentConfig',
            system_dot_main__pb2.ComponentConfigDescriptor.SerializeToString,
            system_dot_main__pb2.ComponentConfig.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartUpgrade(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/StartUpgrade',
            acquisition_dot_internal__pb2.StartUpgradeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLicense(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/GetLicense',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            system_dot_main__pb2.License.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLicenseRequestCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/GetLicenseRequestCode',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetLicense(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svcourooperator.OuroOperatorService/SetLicense',
            google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
