# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from acquisition import internal_pb2 as acquisition_dot_internal__pb2
from acquisition import main_pb2 as acquisition_dot_main__pb2
from acquisition import shared_pb2 as acquisition_dot_shared__pb2
from common import fields_pb2 as common_dot_fields__pb2
from common import internal_pb2 as common_dot_internal__pb2
from common import types_pb2 as common_dot_types__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


class TaskmasterServiceStub(object):
    """The Taskmaster service definition.
    Those are the gRPC services that the Taskmaster provides for other components.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueueJobs = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/QueueJobs',
                request_serializer=acquisition_dot_internal__pb2.QueueJobsRequest.SerializeToString,
                response_deserializer=acquisition_dot_internal__pb2.QueueJobsResponse.FromString,
                _registered_method=True)
        self.GetJob = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetJob',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                response_deserializer=acquisition_dot_internal__pb2.GetJobResponse.FromString,
                _registered_method=True)
        self.CancelJobs = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/CancelJobs',
                request_serializer=common_dot_types__pb2.ListOfUInt64.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetDriver = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetDriver',
                request_serializer=acquisition_dot_main__pb2.SetDriver.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetCache = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetCache',
                request_serializer=acquisition_dot_internal__pb2.SetCacheRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetCache = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetCache',
                request_serializer=acquisition_dot_internal__pb2.GetCacheRequest.SerializeToString,
                response_deserializer=acquisition_dot_internal__pb2.GetCacheResponse.FromString,
                _registered_method=True)
        self.SetDriverConfigDefaults = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetDriverConfigDefaults',
                request_serializer=acquisition_dot_internal__pb2.SetConfigDefaultsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetDriverConfig = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetDriverConfig',
                request_serializer=acquisition_dot_internal__pb2.GetDriverConfigRequest.SerializeToString,
                response_deserializer=common_dot_fields__pb2.FieldValues.FromString,
                _registered_method=True)
        self.SetManagedFields = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetManagedFields',
                request_serializer=common_dot_internal__pb2.SetManagedFieldsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetMapDeviceKeyXId = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetMapDeviceKeyXId',
                request_serializer=common_dot_internal__pb2.ListOfDeviceKey.SerializeToString,
                response_deserializer=common_dot_internal__pb2.MapDeviceKeyXId.FromString,
                _registered_method=True)
        self.AddCommunicationUnitLogs = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/AddCommunicationUnitLogs',
                request_serializer=acquisition_dot_internal__pb2.AddCommunicationUnitLogsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetUnknownDevices = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetUnknownDevices',
                request_serializer=acquisition_dot_internal__pb2.SetUnknownDevicesRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ListDevicesByAttributes = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/ListDevicesByAttributes',
                request_serializer=acquisition_dot_shared__pb2.DeviceAttributeSelector.SerializeToString,
                response_deserializer=acquisition_dot_main__pb2.ListOfDevice.FromString,
                _registered_method=True)
        self.ListCommunicationUnitsByAttributes = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/ListCommunicationUnitsByAttributes',
                request_serializer=acquisition_dot_shared__pb2.CommunicationUnitAttributeSelector.SerializeToString,
                response_deserializer=acquisition_dot_main__pb2.ListOfCommunicationUnit.FromString,
                _registered_method=True)
        self.SetNeightbours = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetNeightbours',
                request_serializer=acquisition_dot_internal__pb2.SetNeighboursRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetCurrentDeviceCommunicationUnit = channel.unary_unary(
                '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetCurrentDeviceCommunicationUnit',
                request_serializer=acquisition_dot_internal__pb2.SetCurrentDeviceCommunicationUnitRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class TaskmasterServiceServicer(object):
    """The Taskmaster service definition.
    Those are the gRPC services that the Taskmaster provides for other components.
    """

    def QueueJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJob(self, request, context):
        """The method called by the RestApi to get the job status. The parameter contains the job identifier.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelJobs(self, request, context):
        """The method called by the RestApi to cancel the job.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDriver(self, request, context):
        """@group: Drivers
        The method called by the driver to inform Taskmaster about the instance existence. The parameter contains the driver version, the listening port, the meter type, the maximum number of concurrent jobs, the typical memory usage, the connection attributes template, and the job action templates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCache(self, request, context):
        """@group: Drivers
        The method called by the driver to store the cache entry. The parameter contains the cache key and the cache value. The key is unique within the driver type.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCache(self, request, context):
        """@group: Drivers
        The method called by the driver to retrieve the cache entry. The parameter contains the cache key. The key is unique within the driver type.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDriverConfigDefaults(self, request, context):
        """@group: Drivers
        SetDriverConfigDefaults sets the default configuration values for the driver type. It also resets the configuration caches.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDriverConfig(self, request, context):
        """@group: Drivers
        GetDriverConfig returns the driver configuration for the given driver type.
        The parameter contains the driver type.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetManagedFields(self, request, context):
        """@group: Drivers
        The method sets the managed fields for entities.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMapDeviceKeyXId(self, request, context):
        """@group: Drivers
        The method returns the list of x-device-identifiers that match the given device-type specific key.
        The key can be any byte-array like unique physical identifier of the device (e.g. system-title, MAC address, etc.) which must be unique for give driver type.
        If the key is not yet registered, the method creates a new entry in the database. It always returns the list of all x-device-identifiers that match the given key or error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCommunicationUnitLogs(self, request, context):
        """@group: Drivers
        Adds a new log records to the communication unit. Duplicit records are ignored.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUnknownDevices(self, request, context):
        """@group: Drivers
        The method sets currently known unknown devices visible by the communication unit.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDevicesByAttributes(self, request, context):
        """@group: Drivers
        The method returns the list of device identifiers that match the given attributes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCommunicationUnitsByAttributes(self, request, context):
        """@group: Drivers
        The method returns the list of communication unit identifiers that match the given attributes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNeightbours(self, request, context):
        """@group: Drivers
        The method sets the communication unit neighbours. The parameter contains the communication unit identifier and the list of neighbour identifiers which can be either communication units or devices.
        If there were other neighbours not listed within the request, they are removed from the neighbours list.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCurrentDeviceCommunicationUnit(self, request, context):
        """@group: Drivers
        The method sets the current device communication unit. The parameter contains the device selector and the communication unit selector.
        The device selector is used to select the device for which the communication unit is being set. Be ware that all matching devices are updated, from none up to many.
        The communication unit selector is used to select the communication unit for the device. Be ware that the first matching communication unit is used. If none is found, the method silently ignores the request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TaskmasterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QueueJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.QueueJobs,
                    request_deserializer=acquisition_dot_internal__pb2.QueueJobsRequest.FromString,
                    response_serializer=acquisition_dot_internal__pb2.QueueJobsResponse.SerializeToString,
            ),
            'GetJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJob,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                    response_serializer=acquisition_dot_internal__pb2.GetJobResponse.SerializeToString,
            ),
            'CancelJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelJobs,
                    request_deserializer=common_dot_types__pb2.ListOfUInt64.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetDriver': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDriver,
                    request_deserializer=acquisition_dot_main__pb2.SetDriver.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetCache': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCache,
                    request_deserializer=acquisition_dot_internal__pb2.SetCacheRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetCache': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCache,
                    request_deserializer=acquisition_dot_internal__pb2.GetCacheRequest.FromString,
                    response_serializer=acquisition_dot_internal__pb2.GetCacheResponse.SerializeToString,
            ),
            'SetDriverConfigDefaults': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDriverConfigDefaults,
                    request_deserializer=acquisition_dot_internal__pb2.SetConfigDefaultsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetDriverConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDriverConfig,
                    request_deserializer=acquisition_dot_internal__pb2.GetDriverConfigRequest.FromString,
                    response_serializer=common_dot_fields__pb2.FieldValues.SerializeToString,
            ),
            'SetManagedFields': grpc.unary_unary_rpc_method_handler(
                    servicer.SetManagedFields,
                    request_deserializer=common_dot_internal__pb2.SetManagedFieldsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetMapDeviceKeyXId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMapDeviceKeyXId,
                    request_deserializer=common_dot_internal__pb2.ListOfDeviceKey.FromString,
                    response_serializer=common_dot_internal__pb2.MapDeviceKeyXId.SerializeToString,
            ),
            'AddCommunicationUnitLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCommunicationUnitLogs,
                    request_deserializer=acquisition_dot_internal__pb2.AddCommunicationUnitLogsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetUnknownDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUnknownDevices,
                    request_deserializer=acquisition_dot_internal__pb2.SetUnknownDevicesRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListDevicesByAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDevicesByAttributes,
                    request_deserializer=acquisition_dot_shared__pb2.DeviceAttributeSelector.FromString,
                    response_serializer=acquisition_dot_main__pb2.ListOfDevice.SerializeToString,
            ),
            'ListCommunicationUnitsByAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCommunicationUnitsByAttributes,
                    request_deserializer=acquisition_dot_shared__pb2.CommunicationUnitAttributeSelector.FromString,
                    response_serializer=acquisition_dot_main__pb2.ListOfCommunicationUnit.SerializeToString,
            ),
            'SetNeightbours': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNeightbours,
                    request_deserializer=acquisition_dot_internal__pb2.SetNeighboursRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetCurrentDeviceCommunicationUnit': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCurrentDeviceCommunicationUnit,
                    request_deserializer=acquisition_dot_internal__pb2.SetCurrentDeviceCommunicationUnitRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'io.clbs.openhes.services.svctaskmaster.TaskmasterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('io.clbs.openhes.services.svctaskmaster.TaskmasterService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TaskmasterService(object):
    """The Taskmaster service definition.
    Those are the gRPC services that the Taskmaster provides for other components.
    """

    @staticmethod
    def QueueJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/QueueJobs',
            acquisition_dot_internal__pb2.QueueJobsRequest.SerializeToString,
            acquisition_dot_internal__pb2.QueueJobsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetJob',
            google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            acquisition_dot_internal__pb2.GetJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/CancelJobs',
            common_dot_types__pb2.ListOfUInt64.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDriver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetDriver',
            acquisition_dot_main__pb2.SetDriver.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetCache',
            acquisition_dot_internal__pb2.SetCacheRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetCache',
            acquisition_dot_internal__pb2.GetCacheRequest.SerializeToString,
            acquisition_dot_internal__pb2.GetCacheResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDriverConfigDefaults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetDriverConfigDefaults',
            acquisition_dot_internal__pb2.SetConfigDefaultsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDriverConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetDriverConfig',
            acquisition_dot_internal__pb2.GetDriverConfigRequest.SerializeToString,
            common_dot_fields__pb2.FieldValues.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetManagedFields(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetManagedFields',
            common_dot_internal__pb2.SetManagedFieldsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMapDeviceKeyXId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/GetMapDeviceKeyXId',
            common_dot_internal__pb2.ListOfDeviceKey.SerializeToString,
            common_dot_internal__pb2.MapDeviceKeyXId.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddCommunicationUnitLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/AddCommunicationUnitLogs',
            acquisition_dot_internal__pb2.AddCommunicationUnitLogsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetUnknownDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetUnknownDevices',
            acquisition_dot_internal__pb2.SetUnknownDevicesRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDevicesByAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/ListDevicesByAttributes',
            acquisition_dot_shared__pb2.DeviceAttributeSelector.SerializeToString,
            acquisition_dot_main__pb2.ListOfDevice.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListCommunicationUnitsByAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/ListCommunicationUnitsByAttributes',
            acquisition_dot_shared__pb2.CommunicationUnitAttributeSelector.SerializeToString,
            acquisition_dot_main__pb2.ListOfCommunicationUnit.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetNeightbours(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetNeightbours',
            acquisition_dot_internal__pb2.SetNeighboursRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetCurrentDeviceCommunicationUnit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/io.clbs.openhes.services.svctaskmaster.TaskmasterService/SetCurrentDeviceCommunicationUnit',
            acquisition_dot_internal__pb2.SetCurrentDeviceCommunicationUnitRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
