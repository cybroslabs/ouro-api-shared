// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: acquisition/shared.proto

package acquisition

import (
	timeofuse "github.com/cybroslabs/ouro-api-shared/gen/go/acquisition/timeofuse"
	common "github.com/cybroslabs/ouro-api-shared/gen/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines the available job priority levels.
type JobPriority int32

const (
	// Lowest priority.
	JobPriority_JOB_PRIORITY_0 JobPriority = 0
	// Priority 1.
	JobPriority_JOB_PRIORITY_1 JobPriority = 1
	// Priority 2.
	JobPriority_JOB_PRIORITY_2 JobPriority = 2
	// Priority 3.
	JobPriority_JOB_PRIORITY_3 JobPriority = 3
	// Priority 4.
	JobPriority_JOB_PRIORITY_4 JobPriority = 4
	// Priority 5.
	JobPriority_JOB_PRIORITY_5 JobPriority = 5
	// Priority 6.
	JobPriority_JOB_PRIORITY_6 JobPriority = 6
	// Priority 7.
	JobPriority_JOB_PRIORITY_7 JobPriority = 7
	// Highest priority.
	JobPriority_JOB_PRIORITY_8 JobPriority = 8
)

// Enum value maps for JobPriority.
var (
	JobPriority_name = map[int32]string{
		0: "JOB_PRIORITY_0",
		1: "JOB_PRIORITY_1",
		2: "JOB_PRIORITY_2",
		3: "JOB_PRIORITY_3",
		4: "JOB_PRIORITY_4",
		5: "JOB_PRIORITY_5",
		6: "JOB_PRIORITY_6",
		7: "JOB_PRIORITY_7",
		8: "JOB_PRIORITY_8",
	}
	JobPriority_value = map[string]int32{
		"JOB_PRIORITY_0": 0,
		"JOB_PRIORITY_1": 1,
		"JOB_PRIORITY_2": 2,
		"JOB_PRIORITY_3": 3,
		"JOB_PRIORITY_4": 4,
		"JOB_PRIORITY_5": 5,
		"JOB_PRIORITY_6": 6,
		"JOB_PRIORITY_7": 7,
		"JOB_PRIORITY_8": 8,
	}
)

func (x JobPriority) Enum() *JobPriority {
	p := new(JobPriority)
	*p = x
	return p
}

func (x JobPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[0].Descriptor()
}

func (JobPriority) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[0]
}

func (x JobPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Defines the read path policies for retrieving data from devices.
type ReadPathPolicy int32

const (
	ReadPathPolicy_READ_PATH_POLICY_UNSPECIFIED ReadPathPolicy = 0 // Keeps the current behavior (typically data-concentrator first).
	ReadPathPolicy_METER_FIRST                  ReadPathPolicy = 1 // Attempts to read directly from the meter and falls back to the data concentrator if needed and supported.
	ReadPathPolicy_DC_FIRST                     ReadPathPolicy = 2 // Attempts to read from the data concentrator first and falls back to the meter if needed and supported.
)

// Enum value maps for ReadPathPolicy.
var (
	ReadPathPolicy_name = map[int32]string{
		0: "READ_PATH_POLICY_UNSPECIFIED",
		1: "METER_FIRST",
		2: "DC_FIRST",
	}
	ReadPathPolicy_value = map[string]int32{
		"READ_PATH_POLICY_UNSPECIFIED": 0,
		"METER_FIRST":                  1,
		"DC_FIRST":                     2,
	}
)

func (x ReadPathPolicy) Enum() *ReadPathPolicy {
	p := new(ReadPathPolicy)
	*p = x
	return p
}

func (x ReadPathPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadPathPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[1].Descriptor()
}

func (ReadPathPolicy) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[1]
}

func (x ReadPathPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Parity types
type SerialConfigParity int32

const (
	// No parity.
	SerialConfigParity_PARITY_NONE SerialConfigParity = 0
	// Even parity.
	SerialConfigParity_PARITY_EVEN SerialConfigParity = 1
	// Odd parity.
	SerialConfigParity_PARITY_ODD SerialConfigParity = 2
	// Mark parity.
	SerialConfigParity_PARITY_MARK SerialConfigParity = 3
	// Space parity.
	SerialConfigParity_PARITY_SPACE SerialConfigParity = 4
)

// Enum value maps for SerialConfigParity.
var (
	SerialConfigParity_name = map[int32]string{
		0: "PARITY_NONE",
		1: "PARITY_EVEN",
		2: "PARITY_ODD",
		3: "PARITY_MARK",
		4: "PARITY_SPACE",
	}
	SerialConfigParity_value = map[string]int32{
		"PARITY_NONE":  0,
		"PARITY_EVEN":  1,
		"PARITY_ODD":   2,
		"PARITY_MARK":  3,
		"PARITY_SPACE": 4,
	}
)

func (x SerialConfigParity) Enum() *SerialConfigParity {
	p := new(SerialConfigParity)
	*p = x
	return p
}

func (x SerialConfigParity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SerialConfigParity) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[2].Descriptor()
}

func (SerialConfigParity) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[2]
}

func (x SerialConfigParity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Baud rate types
type SerialConfigBaudRate int32

const (
	// 110 baud
	SerialConfigBaudRate_BAUD_RATE_110 SerialConfigBaudRate = 0
	// 300 baud
	SerialConfigBaudRate_BAUD_RATE_300 SerialConfigBaudRate = 1
	// 600 baud
	SerialConfigBaudRate_BAUD_RATE_600 SerialConfigBaudRate = 2
	// 1200 baud
	SerialConfigBaudRate_BAUD_RATE_1200 SerialConfigBaudRate = 3
	// 2400 baud
	SerialConfigBaudRate_BAUD_RATE_2400 SerialConfigBaudRate = 4
	// 4800 baud
	SerialConfigBaudRate_BAUD_RATE_4800 SerialConfigBaudRate = 5
	// 9600 baud
	SerialConfigBaudRate_BAUD_RATE_9600 SerialConfigBaudRate = 6
	// 14400 baud
	SerialConfigBaudRate_BAUD_RATE_14400 SerialConfigBaudRate = 7
	// 19200 baud
	SerialConfigBaudRate_BAUD_RATE_19200 SerialConfigBaudRate = 8
	// 38400 baud
	SerialConfigBaudRate_BAUD_RATE_38400 SerialConfigBaudRate = 9
	// 57600 baud
	SerialConfigBaudRate_BAUD_RATE_57600 SerialConfigBaudRate = 10
	// 115200 baud
	SerialConfigBaudRate_BAUD_RATE_115200 SerialConfigBaudRate = 11
	// 230400 baud
	SerialConfigBaudRate_BAUD_RATE_230400 SerialConfigBaudRate = 12
	// 460800 baud
	SerialConfigBaudRate_BAUD_RATE_460800 SerialConfigBaudRate = 13
	// 921600 baud
	SerialConfigBaudRate_BAUD_RATE_921600 SerialConfigBaudRate = 14
)

// Enum value maps for SerialConfigBaudRate.
var (
	SerialConfigBaudRate_name = map[int32]string{
		0:  "BAUD_RATE_110",
		1:  "BAUD_RATE_300",
		2:  "BAUD_RATE_600",
		3:  "BAUD_RATE_1200",
		4:  "BAUD_RATE_2400",
		5:  "BAUD_RATE_4800",
		6:  "BAUD_RATE_9600",
		7:  "BAUD_RATE_14400",
		8:  "BAUD_RATE_19200",
		9:  "BAUD_RATE_38400",
		10: "BAUD_RATE_57600",
		11: "BAUD_RATE_115200",
		12: "BAUD_RATE_230400",
		13: "BAUD_RATE_460800",
		14: "BAUD_RATE_921600",
	}
	SerialConfigBaudRate_value = map[string]int32{
		"BAUD_RATE_110":    0,
		"BAUD_RATE_300":    1,
		"BAUD_RATE_600":    2,
		"BAUD_RATE_1200":   3,
		"BAUD_RATE_2400":   4,
		"BAUD_RATE_4800":   5,
		"BAUD_RATE_9600":   6,
		"BAUD_RATE_14400":  7,
		"BAUD_RATE_19200":  8,
		"BAUD_RATE_38400":  9,
		"BAUD_RATE_57600":  10,
		"BAUD_RATE_115200": 11,
		"BAUD_RATE_230400": 12,
		"BAUD_RATE_460800": 13,
		"BAUD_RATE_921600": 14,
	}
)

func (x SerialConfigBaudRate) Enum() *SerialConfigBaudRate {
	p := new(SerialConfigBaudRate)
	*p = x
	return p
}

func (x SerialConfigBaudRate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SerialConfigBaudRate) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[3].Descriptor()
}

func (SerialConfigBaudRate) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[3]
}

func (x SerialConfigBaudRate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Data bits types
type SerialConfigDataBits int32

const (
	// 5 data bits
	SerialConfigDataBits_DATA_BITS_5 SerialConfigDataBits = 0
	// 6 data bits
	SerialConfigDataBits_DATA_BITS_6 SerialConfigDataBits = 1
	// 7 data bits
	SerialConfigDataBits_DATA_BITS_7 SerialConfigDataBits = 2
	// 8 data bits
	SerialConfigDataBits_DATA_BITS_8 SerialConfigDataBits = 3
)

// Enum value maps for SerialConfigDataBits.
var (
	SerialConfigDataBits_name = map[int32]string{
		0: "DATA_BITS_5",
		1: "DATA_BITS_6",
		2: "DATA_BITS_7",
		3: "DATA_BITS_8",
	}
	SerialConfigDataBits_value = map[string]int32{
		"DATA_BITS_5": 0,
		"DATA_BITS_6": 1,
		"DATA_BITS_7": 2,
		"DATA_BITS_8": 3,
	}
)

func (x SerialConfigDataBits) Enum() *SerialConfigDataBits {
	p := new(SerialConfigDataBits)
	*p = x
	return p
}

func (x SerialConfigDataBits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SerialConfigDataBits) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[4].Descriptor()
}

func (SerialConfigDataBits) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[4]
}

func (x SerialConfigDataBits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Stop bits types
type SerialConfigStopBits int32

const (
	// 1 stop bit
	SerialConfigStopBits_STOP_BITS_1 SerialConfigStopBits = 0
	// 1.5 stop bits
	SerialConfigStopBits_STOP_BITS_1_5 SerialConfigStopBits = 1
	// 2 stop bits
	SerialConfigStopBits_STOP_BITS_2 SerialConfigStopBits = 2
)

// Enum value maps for SerialConfigStopBits.
var (
	SerialConfigStopBits_name = map[int32]string{
		0: "STOP_BITS_1",
		1: "STOP_BITS_1_5",
		2: "STOP_BITS_2",
	}
	SerialConfigStopBits_value = map[string]int32{
		"STOP_BITS_1":   0,
		"STOP_BITS_1_5": 1,
		"STOP_BITS_2":   2,
	}
)

func (x SerialConfigStopBits) Enum() *SerialConfigStopBits {
	p := new(SerialConfigStopBits)
	*p = x
	return p
}

func (x SerialConfigStopBits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SerialConfigStopBits) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[5].Descriptor()
}

func (SerialConfigStopBits) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[5]
}

func (x SerialConfigStopBits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Connection types
type CommunicationType int32

const (
	// The communication is done via direct TCP/IP.
	CommunicationType_COMMUNICATION_TYPE_TCPIP CommunicationType = 0
	// The communication is done via phone line (modem).
	CommunicationType_COMMUNICATION_TYPE_MODEM_POOL CommunicationType = 1
	// The communication is done via a direct serial line.
	CommunicationType_COMMUNICATION_TYPE_SERIAL_LINE_DIRECT CommunicationType = 2
	// The communication is done via a controlled  serial line (Moxa).
	CommunicationType_COMMUNICATION_TYPE_SERIAL_LINE_MOXA CommunicationType = 3
	// The communication is passive. The driver listens on a port (for example, DLMS devices in push mode) or subscribes to a message queue (for example, MQTT).
	CommunicationType_COMMUNICATION_TYPE_LISTENING CommunicationType = 99
)

// Enum value maps for CommunicationType.
var (
	CommunicationType_name = map[int32]string{
		0:  "COMMUNICATION_TYPE_TCPIP",
		1:  "COMMUNICATION_TYPE_MODEM_POOL",
		2:  "COMMUNICATION_TYPE_SERIAL_LINE_DIRECT",
		3:  "COMMUNICATION_TYPE_SERIAL_LINE_MOXA",
		99: "COMMUNICATION_TYPE_LISTENING",
	}
	CommunicationType_value = map[string]int32{
		"COMMUNICATION_TYPE_TCPIP":              0,
		"COMMUNICATION_TYPE_MODEM_POOL":         1,
		"COMMUNICATION_TYPE_SERIAL_LINE_DIRECT": 2,
		"COMMUNICATION_TYPE_SERIAL_LINE_MOXA":   3,
		"COMMUNICATION_TYPE_LISTENING":          99,
	}
)

func (x CommunicationType) Enum() *CommunicationType {
	p := new(CommunicationType)
	*p = x
	return p
}

func (x CommunicationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommunicationType) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[6].Descriptor()
}

func (CommunicationType) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[6]
}

func (x CommunicationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Data link protocols
type DataLinkProtocol int32

const (
	// The VDEW (IEC 62056-21, IEC-61107) protocol. When combined with the DLMS protocol, the driver initiates communication via IEC and switches to the mode E (HDLC+DLMS) protocol. Supports multiple devices on the same line.
	DataLinkProtocol_LINKPROTO_IEC_62056_21 DataLinkProtocol = 0
	// The HDLC (ISO/IEC-3309) framing. Used with various application protocols, such as DLMS or MODBUS. Supports client/server addressing for multiple devices on the same line.
	DataLinkProtocol_LINKPROTO_HDLC DataLinkProtocol = 1
	// The COSEM wrapper. Used with the DLMS application protocol. Supports client/server addressing for multiple devices on the same line.
	DataLinkProtocol_LINKPROTO_COSEM_WRAPPER DataLinkProtocol = 2
	// The Modbus protocol. Used with the Modbus application protocol where no other data link , such as HDLC is used.
	DataLinkProtocol_LINKPROTO_MODBUS DataLinkProtocol = 3
	// The M-Bus protocol. Used with the M-Bus application protocol.
	DataLinkProtocol_LINKPROTO_MBUS DataLinkProtocol = 4
	// The Viktor protocol. A proprietary protocol used by Viktor-based devices, such as DC450 Vitkor.
	DataLinkProtocol_LINKPROTO_VIKTOR DataLinkProtocol = 5
	// No data link protocol is applicable. Used with listening communication types.
	DataLinkProtocol_LINKPROTO_NOT_APPLICABLE DataLinkProtocol = 99
)

// Enum value maps for DataLinkProtocol.
var (
	DataLinkProtocol_name = map[int32]string{
		0:  "LINKPROTO_IEC_62056_21",
		1:  "LINKPROTO_HDLC",
		2:  "LINKPROTO_COSEM_WRAPPER",
		3:  "LINKPROTO_MODBUS",
		4:  "LINKPROTO_MBUS",
		5:  "LINKPROTO_VIKTOR",
		99: "LINKPROTO_NOT_APPLICABLE",
	}
	DataLinkProtocol_value = map[string]int32{
		"LINKPROTO_IEC_62056_21":   0,
		"LINKPROTO_HDLC":           1,
		"LINKPROTO_COSEM_WRAPPER":  2,
		"LINKPROTO_MODBUS":         3,
		"LINKPROTO_MBUS":           4,
		"LINKPROTO_VIKTOR":         5,
		"LINKPROTO_NOT_APPLICABLE": 99,
	}
)

func (x DataLinkProtocol) Enum() *DataLinkProtocol {
	p := new(DataLinkProtocol)
	*p = x
	return p
}

func (x DataLinkProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataLinkProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[7].Descriptor()
}

func (DataLinkProtocol) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[7]
}

func (x DataLinkProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Application protocols
type ApplicationProtocol int32

const (
	// The IEC 62056-21 (IEC-61107, VDEW) protocol.
	ApplicationProtocol_APPPROTO_IEC_62056_21 ApplicationProtocol = 0
	// The DLMS short-name protocol.
	ApplicationProtocol_APPPROTO_DLMS_SN ApplicationProtocol = 1
	// The DLMS logical-name protocol.
	ApplicationProtocol_APPPROTO_DLMS_LN ApplicationProtocol = 2
	// The SCTM protocol.
	ApplicationProtocol_APPPROTO_SCTM ApplicationProtocol = 3
	// The LIS200 protocol.
	ApplicationProtocol_APPPROTO_LIS200 ApplicationProtocol = 4
	// The ANSI C12 protocol.
	ApplicationProtocol_APPPROTO_ANSI_C12 ApplicationProtocol = 5
	// The MQTT protocol.
	ApplicationProtocol_APPPROTO_MQTT ApplicationProtocol = 6
	// The MODBUS protocol.
	ApplicationProtocol_APPPROTO_MODBUS ApplicationProtocol = 7
	// The MBUS protocol.
	ApplicationProtocol_APPPROTO_MBUS ApplicationProtocol = 8
)

// Enum value maps for ApplicationProtocol.
var (
	ApplicationProtocol_name = map[int32]string{
		0: "APPPROTO_IEC_62056_21",
		1: "APPPROTO_DLMS_SN",
		2: "APPPROTO_DLMS_LN",
		3: "APPPROTO_SCTM",
		4: "APPPROTO_LIS200",
		5: "APPPROTO_ANSI_C12",
		6: "APPPROTO_MQTT",
		7: "APPPROTO_MODBUS",
		8: "APPPROTO_MBUS",
	}
	ApplicationProtocol_value = map[string]int32{
		"APPPROTO_IEC_62056_21": 0,
		"APPPROTO_DLMS_SN":      1,
		"APPPROTO_DLMS_LN":      2,
		"APPPROTO_SCTM":         3,
		"APPPROTO_LIS200":       4,
		"APPPROTO_ANSI_C12":     5,
		"APPPROTO_MQTT":         6,
		"APPPROTO_MODBUS":       7,
		"APPPROTO_MBUS":         8,
	}
)

func (x ApplicationProtocol) Enum() *ApplicationProtocol {
	p := new(ApplicationProtocol)
	*p = x
	return p
}

func (x ApplicationProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[8].Descriptor()
}

func (ApplicationProtocol) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[8]
}

func (x ApplicationProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Action types
type ActionType int32

const (
	// Get register value, for example instantaneous values. The action covers specific register.
	ActionType_ACTION_TYPE_GET_REGISTER ActionType = 0
	// Get periodical profile, for example load-profile. The action covers specific profile column.
	ActionType_ACTION_TYPE_GET_PERIODICAL_PROFILE ActionType = 1
	// Get non-periodical profile, for example daily profile or monthly billing registers. The action covers specific profile column and or specific billing register.
	ActionType_ACTION_TYPE_GET_IRREGULAR_PROFILE ActionType = 2
	// Get event log. The action covers specific event log.
	ActionType_ACTION_TYPE_GET_EVENTS ActionType = 3
	// Get device info. The action returns info data about remote device.
	ActionType_ACTION_TYPE_GET_DEVICE_INFO ActionType = 10
	// Synchronize clock. The action synchronizes the time in the device, it can forcefully set it if force attribute is set.
	ActionType_ACTION_TYPE_SYNC_CLOCK ActionType = 11
	// Set relay state. The action covers single relay.
	ActionType_ACTION_TYPE_SET_RELAY_STATE ActionType = 21
	// Get disconnector state. The action covers single disconnector if multiple disconnectors are present in the device.
	ActionType_ACTION_TYPE_GET_DISCONNECTOR_STATE ActionType = 22
	// Set disconnector state. The action covers single relay. The action covers single disconnector if multiple disconnectors are present in the device.
	ActionType_ACTION_TYPE_SET_DISCONNECTOR_STATE ActionType = 23
	// Get time-of-use table.
	ActionType_ACTION_TYPE_GET_TOU ActionType = 24
	// Set time-of-use table.
	ActionType_ACTION_TYPE_SET_TOU ActionType = 25
	// Set limiter settings. The action covers single limiter.
	ActionType_ACTION_TYPE_SET_LIMITER ActionType = 27
	// Reset billing period.
	ActionType_ACTION_TYPE_RESET_BILLING_PERIOD ActionType = 40
	// Start firmware update. The action updates starts FW upgrade procedure.
	ActionType_ACTION_TYPE_FW_UPDATE ActionType = 50
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0:  "ACTION_TYPE_GET_REGISTER",
		1:  "ACTION_TYPE_GET_PERIODICAL_PROFILE",
		2:  "ACTION_TYPE_GET_IRREGULAR_PROFILE",
		3:  "ACTION_TYPE_GET_EVENTS",
		10: "ACTION_TYPE_GET_DEVICE_INFO",
		11: "ACTION_TYPE_SYNC_CLOCK",
		21: "ACTION_TYPE_SET_RELAY_STATE",
		22: "ACTION_TYPE_GET_DISCONNECTOR_STATE",
		23: "ACTION_TYPE_SET_DISCONNECTOR_STATE",
		24: "ACTION_TYPE_GET_TOU",
		25: "ACTION_TYPE_SET_TOU",
		27: "ACTION_TYPE_SET_LIMITER",
		40: "ACTION_TYPE_RESET_BILLING_PERIOD",
		50: "ACTION_TYPE_FW_UPDATE",
	}
	ActionType_value = map[string]int32{
		"ACTION_TYPE_GET_REGISTER":           0,
		"ACTION_TYPE_GET_PERIODICAL_PROFILE": 1,
		"ACTION_TYPE_GET_IRREGULAR_PROFILE":  2,
		"ACTION_TYPE_GET_EVENTS":             3,
		"ACTION_TYPE_GET_DEVICE_INFO":        10,
		"ACTION_TYPE_SYNC_CLOCK":             11,
		"ACTION_TYPE_SET_RELAY_STATE":        21,
		"ACTION_TYPE_GET_DISCONNECTOR_STATE": 22,
		"ACTION_TYPE_SET_DISCONNECTOR_STATE": 23,
		"ACTION_TYPE_GET_TOU":                24,
		"ACTION_TYPE_SET_TOU":                25,
		"ACTION_TYPE_SET_LIMITER":            27,
		"ACTION_TYPE_RESET_BILLING_PERIOD":   40,
		"ACTION_TYPE_FW_UPDATE":              50,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[9].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[9]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Result codes related to job actions
type ActionResultCode int32

const (
	// The action has been completed successfully.
	ActionResultCode_ERROR_CODE_ACTION_OK ActionResultCode = 0
	// The action is not supported by the driver (or device).
	ActionResultCode_ERROR_CODE_ACTION_UNSUPPORTED ActionResultCode = 1
	// The action is pending.
	ActionResultCode_ERROR_CODE_ACTION_PENDING ActionResultCode = 3
	// The action failed.
	ActionResultCode_ERROR_CODE_ACTION_ERROR ActionResultCode = 5
)

// Enum value maps for ActionResultCode.
var (
	ActionResultCode_name = map[int32]string{
		0: "ERROR_CODE_ACTION_OK",
		1: "ERROR_CODE_ACTION_UNSUPPORTED",
		3: "ERROR_CODE_ACTION_PENDING",
		5: "ERROR_CODE_ACTION_ERROR",
	}
	ActionResultCode_value = map[string]int32{
		"ERROR_CODE_ACTION_OK":          0,
		"ERROR_CODE_ACTION_UNSUPPORTED": 1,
		"ERROR_CODE_ACTION_PENDING":     3,
		"ERROR_CODE_ACTION_ERROR":       5,
	}
)

func (x ActionResultCode) Enum() *ActionResultCode {
	p := new(ActionResultCode)
	*p = x
	return p
}

func (x ActionResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[10].Descriptor()
}

func (ActionResultCode) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[10]
}

func (x ActionResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Error codes related to jobs
type JobErrorCode int32

const (
	// The job has been completed successfully.
	JobErrorCode_JOB_ERROR_CODE_NONE JobErrorCode = 0
	// There is no free slot in the driver to handle the job; the job shall be send again later.
	JobErrorCode_JOB_ERROR_CODE_BUSY JobErrorCode = 1
	// The job failed, the retry will be attempted.
	JobErrorCode_JOB_ERROR_CODE_ERROR JobErrorCode = 5
	// This should never happen! It means that the same job is currently being processed by the driver and it was sent to the driver mutliple times which would mean that there is a bug.
	JobErrorCode_JOB_ERROR_CODE_ALREADY_EXISTS JobErrorCode = 8
	// The job failed, the retry will NOT be attempted.
	JobErrorCode_JOB_ERROR_CODE_FATAL JobErrorCode = 9
)

// Enum value maps for JobErrorCode.
var (
	JobErrorCode_name = map[int32]string{
		0: "JOB_ERROR_CODE_NONE",
		1: "JOB_ERROR_CODE_BUSY",
		5: "JOB_ERROR_CODE_ERROR",
		8: "JOB_ERROR_CODE_ALREADY_EXISTS",
		9: "JOB_ERROR_CODE_FATAL",
	}
	JobErrorCode_value = map[string]int32{
		"JOB_ERROR_CODE_NONE":           0,
		"JOB_ERROR_CODE_BUSY":           1,
		"JOB_ERROR_CODE_ERROR":          5,
		"JOB_ERROR_CODE_ALREADY_EXISTS": 8,
		"JOB_ERROR_CODE_FATAL":          9,
	}
)

func (x JobErrorCode) Enum() *JobErrorCode {
	p := new(JobErrorCode)
	*p = x
	return p
}

func (x JobErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[11].Descriptor()
}

func (JobErrorCode) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[11]
}

func (x JobErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Bulk statuses
type BulkStatusCode int32

const (
	// The job is waiting in the queue
	BulkStatusCode_BULK_STATUS_QUEUED BulkStatusCode = 0
	// The job is running
	BulkStatusCode_BULK_STATUS_RUNNING BulkStatusCode = 1
	// The job is completed
	BulkStatusCode_BULK_STATUS_COMPLETED BulkStatusCode = 2
	// The job is cancelled
	BulkStatusCode_BULK_STATUS_CANCELLED BulkStatusCode = 3
	// The job has expired
	BulkStatusCode_BULK_STATUS_EXPIRED BulkStatusCode = 4
)

// Enum value maps for BulkStatusCode.
var (
	BulkStatusCode_name = map[int32]string{
		0: "BULK_STATUS_QUEUED",
		1: "BULK_STATUS_RUNNING",
		2: "BULK_STATUS_COMPLETED",
		3: "BULK_STATUS_CANCELLED",
		4: "BULK_STATUS_EXPIRED",
	}
	BulkStatusCode_value = map[string]int32{
		"BULK_STATUS_QUEUED":    0,
		"BULK_STATUS_RUNNING":   1,
		"BULK_STATUS_COMPLETED": 2,
		"BULK_STATUS_CANCELLED": 3,
		"BULK_STATUS_EXPIRED":   4,
	}
)

func (x BulkStatusCode) Enum() *BulkStatusCode {
	p := new(BulkStatusCode)
	*p = x
	return p
}

func (x BulkStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BulkStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[12].Descriptor()
}

func (BulkStatusCode) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[12]
}

func (x BulkStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type DeviceConfigurationRegisterKind int32

const (
	// The object represents a generic register.
	DeviceConfigurationRegisterKind_Register DeviceConfigurationRegisterKind = 0
	// The object represents a periodical profile.
	DeviceConfigurationRegisterKind_PeriodicalProfile DeviceConfigurationRegisterKind = 1
	// The object represents an irregular profile.
	DeviceConfigurationRegisterKind_IrregularProfile DeviceConfigurationRegisterKind = 2
	// The object represents a synthetic register, not visible by drivers. It can be defined to store derived or external data.
	DeviceConfigurationRegisterKind_Synthetic DeviceConfigurationRegisterKind = 99
)

// Enum value maps for DeviceConfigurationRegisterKind.
var (
	DeviceConfigurationRegisterKind_name = map[int32]string{
		0:  "Register",
		1:  "PeriodicalProfile",
		2:  "IrregularProfile",
		99: "Synthetic",
	}
	DeviceConfigurationRegisterKind_value = map[string]int32{
		"Register":          0,
		"PeriodicalProfile": 1,
		"IrregularProfile":  2,
		"Synthetic":         99,
	}
)

func (x DeviceConfigurationRegisterKind) Enum() *DeviceConfigurationRegisterKind {
	p := new(DeviceConfigurationRegisterKind)
	*p = x
	return p
}

func (x DeviceConfigurationRegisterKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceConfigurationRegisterKind) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[13].Descriptor()
}

func (DeviceConfigurationRegisterKind) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[13]
}

func (x DeviceConfigurationRegisterKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Job statuses
type JobStatusCode int32

const (
	// The job is waiting in the queue
	JobStatusCode_JOB_STATUS_QUEUED JobStatusCode = 0
	// The job is running
	JobStatusCode_JOB_STATUS_RUNNING JobStatusCode = 1
	// The data has been fully acquired and is being processed
	JobStatusCode_JOB_STATUS_PROCESSING_DATA JobStatusCode = 2
	// The job is completed
	JobStatusCode_JOB_STATUS_COMPLETED JobStatusCode = 3
	// The job is failed
	JobStatusCode_JOB_STATUS_FAILED JobStatusCode = 4
	// The job is cancelled
	JobStatusCode_JOB_STATUS_CANCELLED JobStatusCode = 5
	// The job has expired
	JobStatusCode_JOB_STATUS_EXPIRED JobStatusCode = 6
)

// Enum value maps for JobStatusCode.
var (
	JobStatusCode_name = map[int32]string{
		0: "JOB_STATUS_QUEUED",
		1: "JOB_STATUS_RUNNING",
		2: "JOB_STATUS_PROCESSING_DATA",
		3: "JOB_STATUS_COMPLETED",
		4: "JOB_STATUS_FAILED",
		5: "JOB_STATUS_CANCELLED",
		6: "JOB_STATUS_EXPIRED",
	}
	JobStatusCode_value = map[string]int32{
		"JOB_STATUS_QUEUED":          0,
		"JOB_STATUS_RUNNING":         1,
		"JOB_STATUS_PROCESSING_DATA": 2,
		"JOB_STATUS_COMPLETED":       3,
		"JOB_STATUS_FAILED":          4,
		"JOB_STATUS_CANCELLED":       5,
		"JOB_STATUS_EXPIRED":         6,
	}
)

func (x JobStatusCode) Enum() *JobStatusCode {
	p := new(JobStatusCode)
	*p = x
	return p
}

func (x JobStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[14].Descriptor()
}

func (JobStatusCode) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[14]
}

func (x JobStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type TopologyNodeType int32

const (
	// The node is a device, such as an electricity meter.
	TopologyNodeType_TOPOLOGY_NODE_DEVICE TopologyNodeType = 0
	// The node is a communication unit, such as a modem or a data concentrator.
	TopologyNodeType_TOPOLOGY_NODE_COMMUNICATION_UNIT TopologyNodeType = 1
)

// Enum value maps for TopologyNodeType.
var (
	TopologyNodeType_name = map[int32]string{
		0: "TOPOLOGY_NODE_DEVICE",
		1: "TOPOLOGY_NODE_COMMUNICATION_UNIT",
	}
	TopologyNodeType_value = map[string]int32{
		"TOPOLOGY_NODE_DEVICE":             0,
		"TOPOLOGY_NODE_COMMUNICATION_UNIT": 1,
	}
)

func (x TopologyNodeType) Enum() *TopologyNodeType {
	p := new(TopologyNodeType)
	*p = x
	return p
}

func (x TopologyNodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopologyNodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[15].Descriptor()
}

func (TopologyNodeType) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[15]
}

func (x TopologyNodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type LogRecordLevel int32

const (
	LogRecordLevel_LOG_RECORD_LEVEL_DEBUG   LogRecordLevel = 0 // The log record level is debug.
	LogRecordLevel_LOG_RECORD_LEVEL_INFO    LogRecordLevel = 1 // The log record level is info.
	LogRecordLevel_LOG_RECORD_LEVEL_WARNING LogRecordLevel = 2 // The log record level is warning.
	LogRecordLevel_LOG_RECORD_LEVEL_ERROR   LogRecordLevel = 3 // The log record level is error.
	LogRecordLevel_LOG_RECORD_LEVEL_FATAL   LogRecordLevel = 4 // The log record level is fatal.
)

// Enum value maps for LogRecordLevel.
var (
	LogRecordLevel_name = map[int32]string{
		0: "LOG_RECORD_LEVEL_DEBUG",
		1: "LOG_RECORD_LEVEL_INFO",
		2: "LOG_RECORD_LEVEL_WARNING",
		3: "LOG_RECORD_LEVEL_ERROR",
		4: "LOG_RECORD_LEVEL_FATAL",
	}
	LogRecordLevel_value = map[string]int32{
		"LOG_RECORD_LEVEL_DEBUG":   0,
		"LOG_RECORD_LEVEL_INFO":    1,
		"LOG_RECORD_LEVEL_WARNING": 2,
		"LOG_RECORD_LEVEL_ERROR":   3,
		"LOG_RECORD_LEVEL_FATAL":   4,
	}
)

func (x LogRecordLevel) Enum() *LogRecordLevel {
	p := new(LogRecordLevel)
	*p = x
	return p
}

func (x LogRecordLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogRecordLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_acquisition_shared_proto_enumTypes[16].Descriptor()
}

func (LogRecordLevel) Type() protoreflect.EnumType {
	return &file_acquisition_shared_proto_enumTypes[16]
}

func (x LogRecordLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Defines the parameters and execution rules that control how a job is processed.
type JobSettings struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MaxDuration    *durationpb.Duration   `protobuf:"bytes,1,opt,name=max_duration,json=maxDuration"`
	xxx_hidden_Priority       JobPriority            `protobuf:"varint,2,opt,name=priority,enum=io.clbs.openhes.models.acquisition.JobPriority"`
	xxx_hidden_Attempts       []int32                `protobuf:"varint,3,rep,packed,name=attempts"`
	xxx_hidden_RetryDelay     *durationpb.Duration   `protobuf:"bytes,4,opt,name=retry_delay,json=retryDelay"`
	xxx_hidden_DeferStart     *durationpb.Duration   `protobuf:"bytes,5,opt,name=defer_start,json=deferStart"`
	xxx_hidden_ExpiresAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt"`
	xxx_hidden_ReadPathPolicy ReadPathPolicy         `protobuf:"varint,7,opt,name=read_path_policy,json=readPathPolicy,enum=io.clbs.openhes.models.acquisition.ReadPathPolicy"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *JobSettings) Reset() {
	*x = JobSettings{}
	mi := &file_acquisition_shared_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSettings) ProtoMessage() {}

func (x *JobSettings) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobSettings) GetMaxDuration() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_MaxDuration
	}
	return nil
}

func (x *JobSettings) GetPriority() JobPriority {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Priority
		}
	}
	return JobPriority_JOB_PRIORITY_0
}

func (x *JobSettings) GetAttempts() []int32 {
	if x != nil {
		return x.xxx_hidden_Attempts
	}
	return nil
}

func (x *JobSettings) GetRetryDelay() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_RetryDelay
	}
	return nil
}

func (x *JobSettings) GetDeferStart() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_DeferStart
	}
	return nil
}

func (x *JobSettings) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ExpiresAt
	}
	return nil
}

func (x *JobSettings) GetReadPathPolicy() ReadPathPolicy {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_ReadPathPolicy
		}
	}
	return ReadPathPolicy_READ_PATH_POLICY_UNSPECIFIED
}

func (x *JobSettings) SetMaxDuration(v *durationpb.Duration) {
	x.xxx_hidden_MaxDuration = v
}

func (x *JobSettings) SetPriority(v JobPriority) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *JobSettings) SetAttempts(v []int32) {
	x.xxx_hidden_Attempts = v
}

func (x *JobSettings) SetRetryDelay(v *durationpb.Duration) {
	x.xxx_hidden_RetryDelay = v
}

func (x *JobSettings) SetDeferStart(v *durationpb.Duration) {
	x.xxx_hidden_DeferStart = v
}

func (x *JobSettings) SetExpiresAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_ExpiresAt = v
}

func (x *JobSettings) SetReadPathPolicy(v ReadPathPolicy) {
	x.xxx_hidden_ReadPathPolicy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *JobSettings) HasMaxDuration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_MaxDuration != nil
}

func (x *JobSettings) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *JobSettings) HasRetryDelay() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RetryDelay != nil
}

func (x *JobSettings) HasDeferStart() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DeferStart != nil
}

func (x *JobSettings) HasExpiresAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ExpiresAt != nil
}

func (x *JobSettings) HasReadPathPolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *JobSettings) ClearMaxDuration() {
	x.xxx_hidden_MaxDuration = nil
}

func (x *JobSettings) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Priority = JobPriority_JOB_PRIORITY_0
}

func (x *JobSettings) ClearRetryDelay() {
	x.xxx_hidden_RetryDelay = nil
}

func (x *JobSettings) ClearDeferStart() {
	x.xxx_hidden_DeferStart = nil
}

func (x *JobSettings) ClearExpiresAt() {
	x.xxx_hidden_ExpiresAt = nil
}

func (x *JobSettings) ClearReadPathPolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ReadPathPolicy = ReadPathPolicy_READ_PATH_POLICY_UNSPECIFIED
}

type JobSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MaxDuration    *durationpb.Duration
	Priority       *JobPriority
	Attempts       []int32
	RetryDelay     *durationpb.Duration
	DeferStart     *durationpb.Duration
	ExpiresAt      *timestamppb.Timestamp
	ReadPathPolicy *ReadPathPolicy
}

func (b0 JobSettings_builder) Build() *JobSettings {
	m0 := &JobSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_MaxDuration = b.MaxDuration
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Priority = *b.Priority
	}
	x.xxx_hidden_Attempts = b.Attempts
	x.xxx_hidden_RetryDelay = b.RetryDelay
	x.xxx_hidden_DeferStart = b.DeferStart
	x.xxx_hidden_ExpiresAt = b.ExpiresAt
	if b.ReadPathPolicy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_ReadPathPolicy = *b.ReadPathPolicy
	}
	return m0
}

// Defines the job action specification.
// The `JobAction` represents a single action to be performed on a single device.
// For example, if the action is `ActionGetRegister`, it specifies a single register to be read from the devices.
type JobAction struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_ActionId    *string                       `protobuf:"bytes,1,opt,name=action_id,json=actionId"`
	xxx_hidden_Attributes  map[string]*common.FieldValue `protobuf:"bytes,2,rep,name=attributes" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Action      isJobAction_Action            `protobuf_oneof:"action"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *JobAction) Reset() {
	*x = JobAction{}
	mi := &file_acquisition_shared_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobAction) ProtoMessage() {}

func (x *JobAction) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobAction) GetActionId() string {
	if x != nil {
		if x.xxx_hidden_ActionId != nil {
			return *x.xxx_hidden_ActionId
		}
		return ""
	}
	return ""
}

func (x *JobAction) GetAttributes() map[string]*common.FieldValue {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *JobAction) GetGetRegister() *ActionGetRegister {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_GetRegister); ok {
			return x.GetRegister
		}
	}
	return nil
}

func (x *JobAction) GetGetPeriodicalProfile() *ActionGetPeriodicalProfile {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_GetPeriodicalProfile); ok {
			return x.GetPeriodicalProfile
		}
	}
	return nil
}

func (x *JobAction) GetGetIrregularProfile() *ActionGetIrregularProfile {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_GetIrregularProfile); ok {
			return x.GetIrregularProfile
		}
	}
	return nil
}

func (x *JobAction) GetGetEvents() *ActionGetEvents {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_GetEvents); ok {
			return x.GetEvents
		}
	}
	return nil
}

func (x *JobAction) GetGetDeviceInfo() *ActionGetDeviceInfo {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_GetDeviceInfo); ok {
			return x.GetDeviceInfo
		}
	}
	return nil
}

func (x *JobAction) GetSyncClock() *ActionSyncClock {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_SyncClock); ok {
			return x.SyncClock
		}
	}
	return nil
}

func (x *JobAction) GetSetRelayState() *ActionSetRelayState {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_SetRelayState); ok {
			return x.SetRelayState
		}
	}
	return nil
}

func (x *JobAction) GetSetDisconnectorState() *ActionSetDisconnectorState {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_SetDisconnectorState); ok {
			return x.SetDisconnectorState
		}
	}
	return nil
}

func (x *JobAction) GetGetTou() *ActionGetTou {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_GetTou); ok {
			return x.GetTou
		}
	}
	return nil
}

func (x *JobAction) GetSetTou() *ActionSetTou {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_SetTou); ok {
			return x.SetTou
		}
	}
	return nil
}

func (x *JobAction) GetSetLimiter() *ActionSetLimiter {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_SetLimiter); ok {
			return x.SetLimiter
		}
	}
	return nil
}

func (x *JobAction) GetResetBillingPeriod() *ActionResetBillingPeriod {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_ResetBillingPeriod); ok {
			return x.ResetBillingPeriod
		}
	}
	return nil
}

func (x *JobAction) GetFwUpdate() *ActionFwUpdate {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobAction_FwUpdate); ok {
			return x.FwUpdate
		}
	}
	return nil
}

func (x *JobAction) SetActionId(v string) {
	x.xxx_hidden_ActionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *JobAction) SetAttributes(v map[string]*common.FieldValue) {
	x.xxx_hidden_Attributes = v
}

func (x *JobAction) SetGetRegister(v *ActionGetRegister) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_GetRegister{v}
}

func (x *JobAction) SetGetPeriodicalProfile(v *ActionGetPeriodicalProfile) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_GetPeriodicalProfile{v}
}

func (x *JobAction) SetGetIrregularProfile(v *ActionGetIrregularProfile) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_GetIrregularProfile{v}
}

func (x *JobAction) SetGetEvents(v *ActionGetEvents) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_GetEvents{v}
}

func (x *JobAction) SetGetDeviceInfo(v *ActionGetDeviceInfo) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_GetDeviceInfo{v}
}

func (x *JobAction) SetSyncClock(v *ActionSyncClock) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_SyncClock{v}
}

func (x *JobAction) SetSetRelayState(v *ActionSetRelayState) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_SetRelayState{v}
}

func (x *JobAction) SetSetDisconnectorState(v *ActionSetDisconnectorState) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_SetDisconnectorState{v}
}

func (x *JobAction) SetGetTou(v *ActionGetTou) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_GetTou{v}
}

func (x *JobAction) SetSetTou(v *ActionSetTou) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_SetTou{v}
}

func (x *JobAction) SetSetLimiter(v *ActionSetLimiter) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_SetLimiter{v}
}

func (x *JobAction) SetResetBillingPeriod(v *ActionResetBillingPeriod) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_ResetBillingPeriod{v}
}

func (x *JobAction) SetFwUpdate(v *ActionFwUpdate) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobAction_FwUpdate{v}
}

func (x *JobAction) HasActionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobAction) HasAction() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Action != nil
}

func (x *JobAction) HasGetRegister() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_GetRegister)
	return ok
}

func (x *JobAction) HasGetPeriodicalProfile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_GetPeriodicalProfile)
	return ok
}

func (x *JobAction) HasGetIrregularProfile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_GetIrregularProfile)
	return ok
}

func (x *JobAction) HasGetEvents() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_GetEvents)
	return ok
}

func (x *JobAction) HasGetDeviceInfo() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_GetDeviceInfo)
	return ok
}

func (x *JobAction) HasSyncClock() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_SyncClock)
	return ok
}

func (x *JobAction) HasSetRelayState() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_SetRelayState)
	return ok
}

func (x *JobAction) HasSetDisconnectorState() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_SetDisconnectorState)
	return ok
}

func (x *JobAction) HasGetTou() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_GetTou)
	return ok
}

func (x *JobAction) HasSetTou() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_SetTou)
	return ok
}

func (x *JobAction) HasSetLimiter() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_SetLimiter)
	return ok
}

func (x *JobAction) HasResetBillingPeriod() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_ResetBillingPeriod)
	return ok
}

func (x *JobAction) HasFwUpdate() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobAction_FwUpdate)
	return ok
}

func (x *JobAction) ClearActionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ActionId = nil
}

func (x *JobAction) ClearAction() {
	x.xxx_hidden_Action = nil
}

func (x *JobAction) ClearGetRegister() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_GetRegister); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearGetPeriodicalProfile() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_GetPeriodicalProfile); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearGetIrregularProfile() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_GetIrregularProfile); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearGetEvents() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_GetEvents); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearGetDeviceInfo() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_GetDeviceInfo); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearSyncClock() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_SyncClock); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearSetRelayState() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_SetRelayState); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearSetDisconnectorState() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_SetDisconnectorState); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearGetTou() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_GetTou); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearSetTou() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_SetTou); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearSetLimiter() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_SetLimiter); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearResetBillingPeriod() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_ResetBillingPeriod); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobAction) ClearFwUpdate() {
	if _, ok := x.xxx_hidden_Action.(*jobAction_FwUpdate); ok {
		x.xxx_hidden_Action = nil
	}
}

const JobAction_Action_not_set_case case_JobAction_Action = 0
const JobAction_GetRegister_case case_JobAction_Action = 3
const JobAction_GetPeriodicalProfile_case case_JobAction_Action = 4
const JobAction_GetIrregularProfile_case case_JobAction_Action = 5
const JobAction_GetEvents_case case_JobAction_Action = 6
const JobAction_GetDeviceInfo_case case_JobAction_Action = 7
const JobAction_SyncClock_case case_JobAction_Action = 8
const JobAction_SetRelayState_case case_JobAction_Action = 10
const JobAction_SetDisconnectorState_case case_JobAction_Action = 12
const JobAction_GetTou_case case_JobAction_Action = 13
const JobAction_SetTou_case case_JobAction_Action = 14
const JobAction_SetLimiter_case case_JobAction_Action = 16
const JobAction_ResetBillingPeriod_case case_JobAction_Action = 17
const JobAction_FwUpdate_case case_JobAction_Action = 18

func (x *JobAction) WhichAction() case_JobAction_Action {
	if x == nil {
		return JobAction_Action_not_set_case
	}
	switch x.xxx_hidden_Action.(type) {
	case *jobAction_GetRegister:
		return JobAction_GetRegister_case
	case *jobAction_GetPeriodicalProfile:
		return JobAction_GetPeriodicalProfile_case
	case *jobAction_GetIrregularProfile:
		return JobAction_GetIrregularProfile_case
	case *jobAction_GetEvents:
		return JobAction_GetEvents_case
	case *jobAction_GetDeviceInfo:
		return JobAction_GetDeviceInfo_case
	case *jobAction_SyncClock:
		return JobAction_SyncClock_case
	case *jobAction_SetRelayState:
		return JobAction_SetRelayState_case
	case *jobAction_SetDisconnectorState:
		return JobAction_SetDisconnectorState_case
	case *jobAction_GetTou:
		return JobAction_GetTou_case
	case *jobAction_SetTou:
		return JobAction_SetTou_case
	case *jobAction_SetLimiter:
		return JobAction_SetLimiter_case
	case *jobAction_ResetBillingPeriod:
		return JobAction_ResetBillingPeriod_case
	case *jobAction_FwUpdate:
		return JobAction_FwUpdate_case
	default:
		return JobAction_Action_not_set_case
	}
}

type JobAction_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ActionId   *string
	Attributes map[string]*common.FieldValue
	// Fields of oneof xxx_hidden_Action:
	GetRegister          *ActionGetRegister
	GetPeriodicalProfile *ActionGetPeriodicalProfile
	GetIrregularProfile  *ActionGetIrregularProfile
	GetEvents            *ActionGetEvents
	GetDeviceInfo        *ActionGetDeviceInfo
	SyncClock            *ActionSyncClock
	SetRelayState        *ActionSetRelayState
	SetDisconnectorState *ActionSetDisconnectorState
	GetTou               *ActionGetTou
	SetTou               *ActionSetTou
	SetLimiter           *ActionSetLimiter
	ResetBillingPeriod   *ActionResetBillingPeriod
	FwUpdate             *ActionFwUpdate
	// -- end of xxx_hidden_Action
}

func (b0 JobAction_builder) Build() *JobAction {
	m0 := &JobAction{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ActionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ActionId = b.ActionId
	}
	x.xxx_hidden_Attributes = b.Attributes
	if b.GetRegister != nil {
		x.xxx_hidden_Action = &jobAction_GetRegister{b.GetRegister}
	}
	if b.GetPeriodicalProfile != nil {
		x.xxx_hidden_Action = &jobAction_GetPeriodicalProfile{b.GetPeriodicalProfile}
	}
	if b.GetIrregularProfile != nil {
		x.xxx_hidden_Action = &jobAction_GetIrregularProfile{b.GetIrregularProfile}
	}
	if b.GetEvents != nil {
		x.xxx_hidden_Action = &jobAction_GetEvents{b.GetEvents}
	}
	if b.GetDeviceInfo != nil {
		x.xxx_hidden_Action = &jobAction_GetDeviceInfo{b.GetDeviceInfo}
	}
	if b.SyncClock != nil {
		x.xxx_hidden_Action = &jobAction_SyncClock{b.SyncClock}
	}
	if b.SetRelayState != nil {
		x.xxx_hidden_Action = &jobAction_SetRelayState{b.SetRelayState}
	}
	if b.SetDisconnectorState != nil {
		x.xxx_hidden_Action = &jobAction_SetDisconnectorState{b.SetDisconnectorState}
	}
	if b.GetTou != nil {
		x.xxx_hidden_Action = &jobAction_GetTou{b.GetTou}
	}
	if b.SetTou != nil {
		x.xxx_hidden_Action = &jobAction_SetTou{b.SetTou}
	}
	if b.SetLimiter != nil {
		x.xxx_hidden_Action = &jobAction_SetLimiter{b.SetLimiter}
	}
	if b.ResetBillingPeriod != nil {
		x.xxx_hidden_Action = &jobAction_ResetBillingPeriod{b.ResetBillingPeriod}
	}
	if b.FwUpdate != nil {
		x.xxx_hidden_Action = &jobAction_FwUpdate{b.FwUpdate}
	}
	return m0
}

type case_JobAction_Action protoreflect.FieldNumber

func (x case_JobAction_Action) String() string {
	md := file_acquisition_shared_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isJobAction_Action interface {
	isJobAction_Action()
}

type jobAction_GetRegister struct {
	GetRegister *ActionGetRegister `protobuf:"bytes,3,opt,name=get_register,json=getRegister,oneof"` // Defines the GetRegister action.
}

type jobAction_GetPeriodicalProfile struct {
	GetPeriodicalProfile *ActionGetPeriodicalProfile `protobuf:"bytes,4,opt,name=get_periodical_profile,json=getPeriodicalProfile,oneof"` // Defines the GetPeriodicalProfile action.
}

type jobAction_GetIrregularProfile struct {
	GetIrregularProfile *ActionGetIrregularProfile `protobuf:"bytes,5,opt,name=get_irregular_profile,json=getIrregularProfile,oneof"` // Defines the GetIrregularProfile action.
}

type jobAction_GetEvents struct {
	GetEvents *ActionGetEvents `protobuf:"bytes,6,opt,name=get_events,json=getEvents,oneof"` // Defines the GetEvents action.
}

type jobAction_GetDeviceInfo struct {
	GetDeviceInfo *ActionGetDeviceInfo `protobuf:"bytes,7,opt,name=get_device_info,json=getDeviceInfo,oneof"` // Defines the GetDeviceInfo action.
}

type jobAction_SyncClock struct {
	SyncClock *ActionSyncClock `protobuf:"bytes,8,opt,name=sync_clock,json=syncClock,oneof"` // Defines the SyncClock action.
}

type jobAction_SetRelayState struct {
	SetRelayState *ActionSetRelayState `protobuf:"bytes,10,opt,name=set_relay_state,json=setRelayState,oneof"` // Defines the SetRelayState action.
}

type jobAction_SetDisconnectorState struct {
	SetDisconnectorState *ActionSetDisconnectorState `protobuf:"bytes,12,opt,name=set_disconnector_state,json=setDisconnectorState,oneof"` // Defines the SetDisconnectorState action.
}

type jobAction_GetTou struct {
	GetTou *ActionGetTou `protobuf:"bytes,13,opt,name=get_tou,json=getTou,oneof"` // Defines the GetTou action.
}

type jobAction_SetTou struct {
	SetTou *ActionSetTou `protobuf:"bytes,14,opt,name=set_tou,json=setTou,oneof"` // Defines the SetTou action..
}

type jobAction_SetLimiter struct {
	SetLimiter *ActionSetLimiter `protobuf:"bytes,16,opt,name=set_limiter,json=setLimiter,oneof"` // Defines the SetLimiter action.
}

type jobAction_ResetBillingPeriod struct {
	ResetBillingPeriod *ActionResetBillingPeriod `protobuf:"bytes,17,opt,name=reset_billing_period,json=resetBillingPeriod,oneof"` // Defines the ResetBillingPeriod action.
}

type jobAction_FwUpdate struct {
	FwUpdate *ActionFwUpdate `protobuf:"bytes,18,opt,name=fw_update,json=fwUpdate,oneof"` // Defines the firmware update action.
}

func (*jobAction_GetRegister) isJobAction_Action() {}

func (*jobAction_GetPeriodicalProfile) isJobAction_Action() {}

func (*jobAction_GetIrregularProfile) isJobAction_Action() {}

func (*jobAction_GetEvents) isJobAction_Action() {}

func (*jobAction_GetDeviceInfo) isJobAction_Action() {}

func (*jobAction_SyncClock) isJobAction_Action() {}

func (*jobAction_SetRelayState) isJobAction_Action() {}

func (*jobAction_SetDisconnectorState) isJobAction_Action() {}

func (*jobAction_GetTou) isJobAction_Action() {}

func (*jobAction_SetTou) isJobAction_Action() {}

func (*jobAction_SetLimiter) isJobAction_Action() {}

func (*jobAction_ResetBillingPeriod) isJobAction_Action() {}

func (*jobAction_FwUpdate) isJobAction_Action() {}

// Defines the job action set specification.
// Unlike a single `JobAction` that is used only once per bulk. `JobActionSet` may internally cover multiple `JobActions`.
// For example, if the action type is `GetRegister` and no variable filter is specified, the system automatically retrieves all registers defined in the active device configuration template.
type JobActionSet struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Variables []string               `protobuf:"bytes,2,rep,name=variables"`
	xxx_hidden_Action    isJobActionSet_Action  `protobuf_oneof:"action"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *JobActionSet) Reset() {
	*x = JobActionSet{}
	mi := &file_acquisition_shared_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobActionSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobActionSet) ProtoMessage() {}

func (x *JobActionSet) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobActionSet) GetVariables() []string {
	if x != nil {
		return x.xxx_hidden_Variables
	}
	return nil
}

func (x *JobActionSet) GetGetRegister() *ActionGetRegister {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_GetRegister); ok {
			return x.GetRegister
		}
	}
	return nil
}

func (x *JobActionSet) GetGetPeriodicalProfile() *ActionGetPeriodicalProfile {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_GetPeriodicalProfile); ok {
			return x.GetPeriodicalProfile
		}
	}
	return nil
}

func (x *JobActionSet) GetGetIrregularProfile() *ActionGetIrregularProfile {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_GetIrregularProfile); ok {
			return x.GetIrregularProfile
		}
	}
	return nil
}

func (x *JobActionSet) GetGetEvents() *ActionGetEvents {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_GetEvents); ok {
			return x.GetEvents
		}
	}
	return nil
}

func (x *JobActionSet) GetGetDeviceInfo() *ActionGetDeviceInfo {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_GetDeviceInfo); ok {
			return x.GetDeviceInfo
		}
	}
	return nil
}

func (x *JobActionSet) GetSyncClock() *ActionSyncClock {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_SyncClock); ok {
			return x.SyncClock
		}
	}
	return nil
}

func (x *JobActionSet) GetSetRelayState() *ActionSetRelayState {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_SetRelayState); ok {
			return x.SetRelayState
		}
	}
	return nil
}

func (x *JobActionSet) GetSetDisconnectorState() *ActionSetDisconnectorState {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_SetDisconnectorState); ok {
			return x.SetDisconnectorState
		}
	}
	return nil
}

func (x *JobActionSet) GetGetTou() *ActionGetTou {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_GetTou); ok {
			return x.GetTou
		}
	}
	return nil
}

func (x *JobActionSet) GetSetTou() *ActionSetTou {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_SetTou); ok {
			return x.SetTou
		}
	}
	return nil
}

func (x *JobActionSet) GetSetLimiter() *ActionSetLimiter {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_SetLimiter); ok {
			return x.SetLimiter
		}
	}
	return nil
}

func (x *JobActionSet) GetResetBillingPeriod() *ActionResetBillingPeriod {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_ResetBillingPeriod); ok {
			return x.ResetBillingPeriod
		}
	}
	return nil
}

func (x *JobActionSet) GetFwUpdate() *ActionFwUpdate {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*jobActionSet_FwUpdate); ok {
			return x.FwUpdate
		}
	}
	return nil
}

func (x *JobActionSet) SetVariables(v []string) {
	x.xxx_hidden_Variables = v
}

func (x *JobActionSet) SetGetRegister(v *ActionGetRegister) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_GetRegister{v}
}

func (x *JobActionSet) SetGetPeriodicalProfile(v *ActionGetPeriodicalProfile) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_GetPeriodicalProfile{v}
}

func (x *JobActionSet) SetGetIrregularProfile(v *ActionGetIrregularProfile) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_GetIrregularProfile{v}
}

func (x *JobActionSet) SetGetEvents(v *ActionGetEvents) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_GetEvents{v}
}

func (x *JobActionSet) SetGetDeviceInfo(v *ActionGetDeviceInfo) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_GetDeviceInfo{v}
}

func (x *JobActionSet) SetSyncClock(v *ActionSyncClock) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_SyncClock{v}
}

func (x *JobActionSet) SetSetRelayState(v *ActionSetRelayState) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_SetRelayState{v}
}

func (x *JobActionSet) SetSetDisconnectorState(v *ActionSetDisconnectorState) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_SetDisconnectorState{v}
}

func (x *JobActionSet) SetGetTou(v *ActionGetTou) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_GetTou{v}
}

func (x *JobActionSet) SetSetTou(v *ActionSetTou) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_SetTou{v}
}

func (x *JobActionSet) SetSetLimiter(v *ActionSetLimiter) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_SetLimiter{v}
}

func (x *JobActionSet) SetResetBillingPeriod(v *ActionResetBillingPeriod) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_ResetBillingPeriod{v}
}

func (x *JobActionSet) SetFwUpdate(v *ActionFwUpdate) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &jobActionSet_FwUpdate{v}
}

func (x *JobActionSet) HasAction() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Action != nil
}

func (x *JobActionSet) HasGetRegister() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_GetRegister)
	return ok
}

func (x *JobActionSet) HasGetPeriodicalProfile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_GetPeriodicalProfile)
	return ok
}

func (x *JobActionSet) HasGetIrregularProfile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_GetIrregularProfile)
	return ok
}

func (x *JobActionSet) HasGetEvents() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_GetEvents)
	return ok
}

func (x *JobActionSet) HasGetDeviceInfo() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_GetDeviceInfo)
	return ok
}

func (x *JobActionSet) HasSyncClock() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_SyncClock)
	return ok
}

func (x *JobActionSet) HasSetRelayState() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_SetRelayState)
	return ok
}

func (x *JobActionSet) HasSetDisconnectorState() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_SetDisconnectorState)
	return ok
}

func (x *JobActionSet) HasGetTou() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_GetTou)
	return ok
}

func (x *JobActionSet) HasSetTou() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_SetTou)
	return ok
}

func (x *JobActionSet) HasSetLimiter() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_SetLimiter)
	return ok
}

func (x *JobActionSet) HasResetBillingPeriod() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_ResetBillingPeriod)
	return ok
}

func (x *JobActionSet) HasFwUpdate() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*jobActionSet_FwUpdate)
	return ok
}

func (x *JobActionSet) ClearAction() {
	x.xxx_hidden_Action = nil
}

func (x *JobActionSet) ClearGetRegister() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_GetRegister); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearGetPeriodicalProfile() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_GetPeriodicalProfile); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearGetIrregularProfile() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_GetIrregularProfile); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearGetEvents() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_GetEvents); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearGetDeviceInfo() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_GetDeviceInfo); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearSyncClock() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_SyncClock); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearSetRelayState() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_SetRelayState); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearSetDisconnectorState() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_SetDisconnectorState); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearGetTou() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_GetTou); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearSetTou() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_SetTou); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearSetLimiter() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_SetLimiter); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearResetBillingPeriod() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_ResetBillingPeriod); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *JobActionSet) ClearFwUpdate() {
	if _, ok := x.xxx_hidden_Action.(*jobActionSet_FwUpdate); ok {
		x.xxx_hidden_Action = nil
	}
}

const JobActionSet_Action_not_set_case case_JobActionSet_Action = 0
const JobActionSet_GetRegister_case case_JobActionSet_Action = 3
const JobActionSet_GetPeriodicalProfile_case case_JobActionSet_Action = 4
const JobActionSet_GetIrregularProfile_case case_JobActionSet_Action = 5
const JobActionSet_GetEvents_case case_JobActionSet_Action = 6
const JobActionSet_GetDeviceInfo_case case_JobActionSet_Action = 7
const JobActionSet_SyncClock_case case_JobActionSet_Action = 8
const JobActionSet_SetRelayState_case case_JobActionSet_Action = 10
const JobActionSet_SetDisconnectorState_case case_JobActionSet_Action = 12
const JobActionSet_GetTou_case case_JobActionSet_Action = 13
const JobActionSet_SetTou_case case_JobActionSet_Action = 14
const JobActionSet_SetLimiter_case case_JobActionSet_Action = 16
const JobActionSet_ResetBillingPeriod_case case_JobActionSet_Action = 17
const JobActionSet_FwUpdate_case case_JobActionSet_Action = 18

func (x *JobActionSet) WhichAction() case_JobActionSet_Action {
	if x == nil {
		return JobActionSet_Action_not_set_case
	}
	switch x.xxx_hidden_Action.(type) {
	case *jobActionSet_GetRegister:
		return JobActionSet_GetRegister_case
	case *jobActionSet_GetPeriodicalProfile:
		return JobActionSet_GetPeriodicalProfile_case
	case *jobActionSet_GetIrregularProfile:
		return JobActionSet_GetIrregularProfile_case
	case *jobActionSet_GetEvents:
		return JobActionSet_GetEvents_case
	case *jobActionSet_GetDeviceInfo:
		return JobActionSet_GetDeviceInfo_case
	case *jobActionSet_SyncClock:
		return JobActionSet_SyncClock_case
	case *jobActionSet_SetRelayState:
		return JobActionSet_SetRelayState_case
	case *jobActionSet_SetDisconnectorState:
		return JobActionSet_SetDisconnectorState_case
	case *jobActionSet_GetTou:
		return JobActionSet_GetTou_case
	case *jobActionSet_SetTou:
		return JobActionSet_SetTou_case
	case *jobActionSet_SetLimiter:
		return JobActionSet_SetLimiter_case
	case *jobActionSet_ResetBillingPeriod:
		return JobActionSet_ResetBillingPeriod_case
	case *jobActionSet_FwUpdate:
		return JobActionSet_FwUpdate_case
	default:
		return JobActionSet_Action_not_set_case
	}
}

type JobActionSet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The variable filter. Meaning depends on the action type:
	//   - `GetRegister`, `GetPeriodicalProfile` and `GetIrregularProfile`: List of variable identifiers (for example, `"A+"`) defined in the system. If not set, all variables are read.
	//
	// - Others: Not applicable (ignored).
	Variables []string
	// Fields of oneof xxx_hidden_Action:
	GetRegister          *ActionGetRegister
	GetPeriodicalProfile *ActionGetPeriodicalProfile
	GetIrregularProfile  *ActionGetIrregularProfile
	GetEvents            *ActionGetEvents
	GetDeviceInfo        *ActionGetDeviceInfo
	SyncClock            *ActionSyncClock
	SetRelayState        *ActionSetRelayState
	SetDisconnectorState *ActionSetDisconnectorState
	GetTou               *ActionGetTou
	SetTou               *ActionSetTou
	SetLimiter           *ActionSetLimiter
	ResetBillingPeriod   *ActionResetBillingPeriod
	FwUpdate             *ActionFwUpdate
	// -- end of xxx_hidden_Action
}

func (b0 JobActionSet_builder) Build() *JobActionSet {
	m0 := &JobActionSet{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Variables = b.Variables
	if b.GetRegister != nil {
		x.xxx_hidden_Action = &jobActionSet_GetRegister{b.GetRegister}
	}
	if b.GetPeriodicalProfile != nil {
		x.xxx_hidden_Action = &jobActionSet_GetPeriodicalProfile{b.GetPeriodicalProfile}
	}
	if b.GetIrregularProfile != nil {
		x.xxx_hidden_Action = &jobActionSet_GetIrregularProfile{b.GetIrregularProfile}
	}
	if b.GetEvents != nil {
		x.xxx_hidden_Action = &jobActionSet_GetEvents{b.GetEvents}
	}
	if b.GetDeviceInfo != nil {
		x.xxx_hidden_Action = &jobActionSet_GetDeviceInfo{b.GetDeviceInfo}
	}
	if b.SyncClock != nil {
		x.xxx_hidden_Action = &jobActionSet_SyncClock{b.SyncClock}
	}
	if b.SetRelayState != nil {
		x.xxx_hidden_Action = &jobActionSet_SetRelayState{b.SetRelayState}
	}
	if b.SetDisconnectorState != nil {
		x.xxx_hidden_Action = &jobActionSet_SetDisconnectorState{b.SetDisconnectorState}
	}
	if b.GetTou != nil {
		x.xxx_hidden_Action = &jobActionSet_GetTou{b.GetTou}
	}
	if b.SetTou != nil {
		x.xxx_hidden_Action = &jobActionSet_SetTou{b.SetTou}
	}
	if b.SetLimiter != nil {
		x.xxx_hidden_Action = &jobActionSet_SetLimiter{b.SetLimiter}
	}
	if b.ResetBillingPeriod != nil {
		x.xxx_hidden_Action = &jobActionSet_ResetBillingPeriod{b.ResetBillingPeriod}
	}
	if b.FwUpdate != nil {
		x.xxx_hidden_Action = &jobActionSet_FwUpdate{b.FwUpdate}
	}
	return m0
}

type case_JobActionSet_Action protoreflect.FieldNumber

func (x case_JobActionSet_Action) String() string {
	md := file_acquisition_shared_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isJobActionSet_Action interface {
	isJobActionSet_Action()
}

type jobActionSet_GetRegister struct {
	GetRegister *ActionGetRegister `protobuf:"bytes,3,opt,name=get_register,json=getRegister,oneof"` // Defines the GetRegister action.
}

type jobActionSet_GetPeriodicalProfile struct {
	GetPeriodicalProfile *ActionGetPeriodicalProfile `protobuf:"bytes,4,opt,name=get_periodical_profile,json=getPeriodicalProfile,oneof"` // Defines the GetPeriodicalProfile action.
}

type jobActionSet_GetIrregularProfile struct {
	GetIrregularProfile *ActionGetIrregularProfile `protobuf:"bytes,5,opt,name=get_irregular_profile,json=getIrregularProfile,oneof"` // Defines the GetIrregularProfile action.
}

type jobActionSet_GetEvents struct {
	GetEvents *ActionGetEvents `protobuf:"bytes,6,opt,name=get_events,json=getEvents,oneof"` // Defines the GetEvents action.
}

type jobActionSet_GetDeviceInfo struct {
	GetDeviceInfo *ActionGetDeviceInfo `protobuf:"bytes,7,opt,name=get_device_info,json=getDeviceInfo,oneof"` // Defines the GetDeviceInfo action.
}

type jobActionSet_SyncClock struct {
	SyncClock *ActionSyncClock `protobuf:"bytes,8,opt,name=sync_clock,json=syncClock,oneof"` // Defines the SyncClock action.
}

type jobActionSet_SetRelayState struct {
	SetRelayState *ActionSetRelayState `protobuf:"bytes,10,opt,name=set_relay_state,json=setRelayState,oneof"` // Defines the SetRelayState action.
}

type jobActionSet_SetDisconnectorState struct {
	SetDisconnectorState *ActionSetDisconnectorState `protobuf:"bytes,12,opt,name=set_disconnector_state,json=setDisconnectorState,oneof"` // Defines the SetDisconnectorState action.
}

type jobActionSet_GetTou struct {
	GetTou *ActionGetTou `protobuf:"bytes,13,opt,name=get_tou,json=getTou,oneof"` // Defines the GetTou action.
}

type jobActionSet_SetTou struct {
	SetTou *ActionSetTou `protobuf:"bytes,14,opt,name=set_tou,json=setTou,oneof"` // Defines the SetTou action..
}

type jobActionSet_SetLimiter struct {
	SetLimiter *ActionSetLimiter `protobuf:"bytes,16,opt,name=set_limiter,json=setLimiter,oneof"` // Defines the SetLimiter action.
}

type jobActionSet_ResetBillingPeriod struct {
	ResetBillingPeriod *ActionResetBillingPeriod `protobuf:"bytes,17,opt,name=reset_billing_period,json=resetBillingPeriod,oneof"` // Defines the ResetBillingPeriod action.
}

type jobActionSet_FwUpdate struct {
	FwUpdate *ActionFwUpdate `protobuf:"bytes,18,opt,name=fw_update,json=fwUpdate,oneof"` // Defines the firmware update action.
}

func (*jobActionSet_GetRegister) isJobActionSet_Action() {}

func (*jobActionSet_GetPeriodicalProfile) isJobActionSet_Action() {}

func (*jobActionSet_GetIrregularProfile) isJobActionSet_Action() {}

func (*jobActionSet_GetEvents) isJobActionSet_Action() {}

func (*jobActionSet_GetDeviceInfo) isJobActionSet_Action() {}

func (*jobActionSet_SyncClock) isJobActionSet_Action() {}

func (*jobActionSet_SetRelayState) isJobActionSet_Action() {}

func (*jobActionSet_SetDisconnectorState) isJobActionSet_Action() {}

func (*jobActionSet_GetTou) isJobActionSet_Action() {}

func (*jobActionSet_SetTou) isJobActionSet_Action() {}

func (*jobActionSet_SetLimiter) isJobActionSet_Action() {}

func (*jobActionSet_ResetBillingPeriod) isJobActionSet_Action() {}

func (*jobActionSet_FwUpdate) isJobActionSet_Action() {}

type ListOfJobDevice struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_List        *[]*JobDevice          `protobuf:"bytes,1,rep,name=list"`
	xxx_hidden_TotalCount  int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListOfJobDevice) Reset() {
	*x = ListOfJobDevice{}
	mi := &file_acquisition_shared_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfJobDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfJobDevice) ProtoMessage() {}

func (x *ListOfJobDevice) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfJobDevice) GetList() []*JobDevice {
	if x != nil {
		if x.xxx_hidden_List != nil {
			return *x.xxx_hidden_List
		}
	}
	return nil
}

func (x *ListOfJobDevice) GetTotalCount() int32 {
	if x != nil {
		return x.xxx_hidden_TotalCount
	}
	return 0
}

func (x *ListOfJobDevice) SetList(v []*JobDevice) {
	x.xxx_hidden_List = &v
}

func (x *ListOfJobDevice) SetTotalCount(v int32) {
	x.xxx_hidden_TotalCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListOfJobDevice) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListOfJobDevice) ClearTotalCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalCount = 0
}

type ListOfJobDevice_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	List       []*JobDevice
	TotalCount *int32
}

func (b0 ListOfJobDevice_builder) Build() *ListOfJobDevice {
	m0 := &ListOfJobDevice{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_List = &b.List
	if b.TotalCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_TotalCount = *b.TotalCount
	}
	return m0
}

// Defines a list of device identifiers.
type ListOfJobDeviceId struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_List        *[]*JobDeviceId        `protobuf:"bytes,1,rep,name=list"`
	xxx_hidden_TotalCount  int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListOfJobDeviceId) Reset() {
	*x = ListOfJobDeviceId{}
	mi := &file_acquisition_shared_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfJobDeviceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfJobDeviceId) ProtoMessage() {}

func (x *ListOfJobDeviceId) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfJobDeviceId) GetList() []*JobDeviceId {
	if x != nil {
		if x.xxx_hidden_List != nil {
			return *x.xxx_hidden_List
		}
	}
	return nil
}

func (x *ListOfJobDeviceId) GetTotalCount() int32 {
	if x != nil {
		return x.xxx_hidden_TotalCount
	}
	return 0
}

func (x *ListOfJobDeviceId) SetList(v []*JobDeviceId) {
	x.xxx_hidden_List = &v
}

func (x *ListOfJobDeviceId) SetTotalCount(v int32) {
	x.xxx_hidden_TotalCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListOfJobDeviceId) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListOfJobDeviceId) ClearTotalCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalCount = 0
}

type ListOfJobDeviceId_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	List       []*JobDeviceId
	TotalCount *int32
}

func (b0 ListOfJobDeviceId_builder) Build() *ListOfJobDeviceId {
	m0 := &ListOfJobDeviceId{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_List = &b.List
	if b.TotalCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_TotalCount = *b.TotalCount
	}
	return m0
}

// Defines the association between bulk jobs and individual devices.
type JobDeviceId struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId       *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId"`
	xxx_hidden_DeviceId    *string                `protobuf:"bytes,2,opt,name=device_id,json=deviceId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *JobDeviceId) Reset() {
	*x = JobDeviceId{}
	mi := &file_acquisition_shared_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobDeviceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDeviceId) ProtoMessage() {}

func (x *JobDeviceId) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobDeviceId) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *JobDeviceId) GetDeviceId() string {
	if x != nil {
		if x.xxx_hidden_DeviceId != nil {
			return *x.xxx_hidden_DeviceId
		}
		return ""
	}
	return ""
}

func (x *JobDeviceId) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *JobDeviceId) SetDeviceId(v string) {
	x.xxx_hidden_DeviceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *JobDeviceId) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobDeviceId) HasDeviceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *JobDeviceId) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

func (x *JobDeviceId) ClearDeviceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DeviceId = nil
}

type JobDeviceId_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId    *string
	DeviceId *string
}

func (b0 JobDeviceId_builder) Build() *JobDeviceId {
	m0 := &JobDeviceId{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_JobId = b.JobId
	}
	if b.DeviceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_DeviceId = b.DeviceId
	}
	return m0
}

// Defines single job-device job-device information.
type JobDevice struct {
	state                       protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_JobId            *string                       `protobuf:"bytes,1,opt,name=job_id,json=jobId"`
	xxx_hidden_DeviceId         *string                       `protobuf:"bytes,2,opt,name=device_id,json=deviceId"`
	xxx_hidden_ExternalId       *string                       `protobuf:"bytes,3,opt,name=external_id,json=externalId"`
	xxx_hidden_DeviceAttributes map[string]*common.FieldValue `protobuf:"bytes,4,rep,name=device_attributes,json=deviceAttributes" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_ConnectionInfo   *[]*ConnectionInfo            `protobuf:"bytes,5,rep,name=connection_info,json=connectionInfo"`
	xxx_hidden_AppProtocol      ApplicationProtocol           `protobuf:"varint,6,opt,name=app_protocol,json=appProtocol,enum=io.clbs.openhes.models.acquisition.ApplicationProtocol"`
	xxx_hidden_Timezone         *string                       `protobuf:"bytes,7,opt,name=timezone"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *JobDevice) Reset() {
	*x = JobDevice{}
	mi := &file_acquisition_shared_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDevice) ProtoMessage() {}

func (x *JobDevice) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobDevice) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *JobDevice) GetDeviceId() string {
	if x != nil {
		if x.xxx_hidden_DeviceId != nil {
			return *x.xxx_hidden_DeviceId
		}
		return ""
	}
	return ""
}

func (x *JobDevice) GetExternalId() string {
	if x != nil {
		if x.xxx_hidden_ExternalId != nil {
			return *x.xxx_hidden_ExternalId
		}
		return ""
	}
	return ""
}

func (x *JobDevice) GetDeviceAttributes() map[string]*common.FieldValue {
	if x != nil {
		return x.xxx_hidden_DeviceAttributes
	}
	return nil
}

func (x *JobDevice) GetConnectionInfo() []*ConnectionInfo {
	if x != nil {
		if x.xxx_hidden_ConnectionInfo != nil {
			return *x.xxx_hidden_ConnectionInfo
		}
	}
	return nil
}

func (x *JobDevice) GetAppProtocol() ApplicationProtocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_AppProtocol
		}
	}
	return ApplicationProtocol_APPPROTO_IEC_62056_21
}

func (x *JobDevice) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *JobDevice) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *JobDevice) SetDeviceId(v string) {
	x.xxx_hidden_DeviceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *JobDevice) SetExternalId(v string) {
	x.xxx_hidden_ExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *JobDevice) SetDeviceAttributes(v map[string]*common.FieldValue) {
	x.xxx_hidden_DeviceAttributes = v
}

func (x *JobDevice) SetConnectionInfo(v []*ConnectionInfo) {
	x.xxx_hidden_ConnectionInfo = &v
}

func (x *JobDevice) SetAppProtocol(v ApplicationProtocol) {
	x.xxx_hidden_AppProtocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *JobDevice) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *JobDevice) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobDevice) HasDeviceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *JobDevice) HasExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *JobDevice) HasAppProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *JobDevice) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *JobDevice) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

func (x *JobDevice) ClearDeviceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DeviceId = nil
}

func (x *JobDevice) ClearExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ExternalId = nil
}

func (x *JobDevice) ClearAppProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_AppProtocol = ApplicationProtocol_APPPROTO_IEC_62056_21
}

func (x *JobDevice) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Timezone = nil
}

type JobDevice_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId            *string
	DeviceId         *string
	ExternalId       *string
	DeviceAttributes map[string]*common.FieldValue
	ConnectionInfo   []*ConnectionInfo
	AppProtocol      *ApplicationProtocol
	Timezone         *string
}

func (b0 JobDevice_builder) Build() *JobDevice {
	m0 := &JobDevice{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_JobId = b.JobId
	}
	if b.DeviceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_DeviceId = b.DeviceId
	}
	if b.ExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_ExternalId = b.ExternalId
	}
	x.xxx_hidden_DeviceAttributes = b.DeviceAttributes
	x.xxx_hidden_ConnectionInfo = &b.ConnectionInfo
	if b.AppProtocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_AppProtocol = *b.AppProtocol
	}
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_Timezone = b.Timezone
	}
	return m0
}

// Defines modem connection information.
type ModemInfo struct {
	state                      protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_ModemId         *string                     `protobuf:"bytes,1,opt,name=modem_id,json=modemId"`
	xxx_hidden_Name            *string                     `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_AtInit          *string                     `protobuf:"bytes,3,opt,name=at_init,json=atInit"`
	xxx_hidden_AtDial          *string                     `protobuf:"bytes,4,opt,name=at_dial,json=atDial"`
	xxx_hidden_AtHangup        *string                     `protobuf:"bytes,5,opt,name=at_hangup,json=atHangup"`
	xxx_hidden_AtEscape        *string                     `protobuf:"bytes,6,opt,name=at_escape,json=atEscape"`
	xxx_hidden_ConnectTimeout  *durationpb.Duration        `protobuf:"bytes,7,opt,name=connect_timeout,json=connectTimeout"`
	xxx_hidden_CommandTimeout  *durationpb.Duration        `protobuf:"bytes,8,opt,name=command_timeout,json=commandTimeout"`
	xxx_hidden_ModemConnection isModemInfo_ModemConnection `protobuf_oneof:"modem_connection"`
	xxx_hidden_SerialBaudRate  uint32                      `protobuf:"varint,11,opt,name=serial_baud_rate,json=serialBaudRate"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ModemInfo) Reset() {
	*x = ModemInfo{}
	mi := &file_acquisition_shared_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemInfo) ProtoMessage() {}

func (x *ModemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ModemInfo) GetModemId() string {
	if x != nil {
		if x.xxx_hidden_ModemId != nil {
			return *x.xxx_hidden_ModemId
		}
		return ""
	}
	return ""
}

func (x *ModemInfo) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ModemInfo) GetAtInit() string {
	if x != nil {
		if x.xxx_hidden_AtInit != nil {
			return *x.xxx_hidden_AtInit
		}
		return ""
	}
	return ""
}

func (x *ModemInfo) GetAtDial() string {
	if x != nil {
		if x.xxx_hidden_AtDial != nil {
			return *x.xxx_hidden_AtDial
		}
		return ""
	}
	return ""
}

func (x *ModemInfo) GetAtHangup() string {
	if x != nil {
		if x.xxx_hidden_AtHangup != nil {
			return *x.xxx_hidden_AtHangup
		}
		return ""
	}
	return ""
}

func (x *ModemInfo) GetAtEscape() string {
	if x != nil {
		if x.xxx_hidden_AtEscape != nil {
			return *x.xxx_hidden_AtEscape
		}
		return ""
	}
	return ""
}

func (x *ModemInfo) GetConnectTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_ConnectTimeout
	}
	return nil
}

func (x *ModemInfo) GetCommandTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_CommandTimeout
	}
	return nil
}

func (x *ModemInfo) GetTcpip() *ConnectionTypeDirectTcpIp {
	if x != nil {
		if x, ok := x.xxx_hidden_ModemConnection.(*modemInfo_Tcpip); ok {
			return x.Tcpip
		}
	}
	return nil
}

func (x *ModemInfo) GetSerialOverIp() *ConnectionTypeControlledSerial {
	if x != nil {
		if x, ok := x.xxx_hidden_ModemConnection.(*modemInfo_SerialOverIp); ok {
			return x.SerialOverIp
		}
	}
	return nil
}

func (x *ModemInfo) GetSerialBaudRate() uint32 {
	if x != nil {
		return x.xxx_hidden_SerialBaudRate
	}
	return 0
}

func (x *ModemInfo) SetModemId(v string) {
	x.xxx_hidden_ModemId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *ModemInfo) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *ModemInfo) SetAtInit(v string) {
	x.xxx_hidden_AtInit = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *ModemInfo) SetAtDial(v string) {
	x.xxx_hidden_AtDial = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *ModemInfo) SetAtHangup(v string) {
	x.xxx_hidden_AtHangup = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *ModemInfo) SetAtEscape(v string) {
	x.xxx_hidden_AtEscape = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *ModemInfo) SetConnectTimeout(v *durationpb.Duration) {
	x.xxx_hidden_ConnectTimeout = v
}

func (x *ModemInfo) SetCommandTimeout(v *durationpb.Duration) {
	x.xxx_hidden_CommandTimeout = v
}

func (x *ModemInfo) SetTcpip(v *ConnectionTypeDirectTcpIp) {
	if v == nil {
		x.xxx_hidden_ModemConnection = nil
		return
	}
	x.xxx_hidden_ModemConnection = &modemInfo_Tcpip{v}
}

func (x *ModemInfo) SetSerialOverIp(v *ConnectionTypeControlledSerial) {
	if v == nil {
		x.xxx_hidden_ModemConnection = nil
		return
	}
	x.xxx_hidden_ModemConnection = &modemInfo_SerialOverIp{v}
}

func (x *ModemInfo) SetSerialBaudRate(v uint32) {
	x.xxx_hidden_SerialBaudRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *ModemInfo) HasModemId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ModemInfo) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ModemInfo) HasAtInit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ModemInfo) HasAtDial() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ModemInfo) HasAtHangup() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ModemInfo) HasAtEscape() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ModemInfo) HasConnectTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ConnectTimeout != nil
}

func (x *ModemInfo) HasCommandTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CommandTimeout != nil
}

func (x *ModemInfo) HasModemConnection() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ModemConnection != nil
}

func (x *ModemInfo) HasTcpip() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ModemConnection.(*modemInfo_Tcpip)
	return ok
}

func (x *ModemInfo) HasSerialOverIp() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ModemConnection.(*modemInfo_SerialOverIp)
	return ok
}

func (x *ModemInfo) HasSerialBaudRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *ModemInfo) ClearModemId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ModemId = nil
}

func (x *ModemInfo) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *ModemInfo) ClearAtInit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_AtInit = nil
}

func (x *ModemInfo) ClearAtDial() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_AtDial = nil
}

func (x *ModemInfo) ClearAtHangup() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_AtHangup = nil
}

func (x *ModemInfo) ClearAtEscape() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_AtEscape = nil
}

func (x *ModemInfo) ClearConnectTimeout() {
	x.xxx_hidden_ConnectTimeout = nil
}

func (x *ModemInfo) ClearCommandTimeout() {
	x.xxx_hidden_CommandTimeout = nil
}

func (x *ModemInfo) ClearModemConnection() {
	x.xxx_hidden_ModemConnection = nil
}

func (x *ModemInfo) ClearTcpip() {
	if _, ok := x.xxx_hidden_ModemConnection.(*modemInfo_Tcpip); ok {
		x.xxx_hidden_ModemConnection = nil
	}
}

func (x *ModemInfo) ClearSerialOverIp() {
	if _, ok := x.xxx_hidden_ModemConnection.(*modemInfo_SerialOverIp); ok {
		x.xxx_hidden_ModemConnection = nil
	}
}

func (x *ModemInfo) ClearSerialBaudRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_SerialBaudRate = 0
}

const ModemInfo_ModemConnection_not_set_case case_ModemInfo_ModemConnection = 0
const ModemInfo_Tcpip_case case_ModemInfo_ModemConnection = 9
const ModemInfo_SerialOverIp_case case_ModemInfo_ModemConnection = 10

func (x *ModemInfo) WhichModemConnection() case_ModemInfo_ModemConnection {
	if x == nil {
		return ModemInfo_ModemConnection_not_set_case
	}
	switch x.xxx_hidden_ModemConnection.(type) {
	case *modemInfo_Tcpip:
		return ModemInfo_Tcpip_case
	case *modemInfo_SerialOverIp:
		return ModemInfo_SerialOverIp_case
	default:
		return ModemInfo_ModemConnection_not_set_case
	}
}

type ModemInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ModemId        *string
	Name           *string
	AtInit         *string
	AtDial         *string
	AtHangup       *string
	AtEscape       *string
	ConnectTimeout *durationpb.Duration
	CommandTimeout *durationpb.Duration
	// The modem connection description.

	// Fields of oneof xxx_hidden_ModemConnection:
	Tcpip        *ConnectionTypeDirectTcpIp
	SerialOverIp *ConnectionTypeControlledSerial
	// -- end of xxx_hidden_ModemConnection
	SerialBaudRate *uint32
}

func (b0 ModemInfo_builder) Build() *ModemInfo {
	m0 := &ModemInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ModemId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_ModemId = b.ModemId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_Name = b.Name
	}
	if b.AtInit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_AtInit = b.AtInit
	}
	if b.AtDial != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_AtDial = b.AtDial
	}
	if b.AtHangup != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_AtHangup = b.AtHangup
	}
	if b.AtEscape != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_AtEscape = b.AtEscape
	}
	x.xxx_hidden_ConnectTimeout = b.ConnectTimeout
	x.xxx_hidden_CommandTimeout = b.CommandTimeout
	if b.Tcpip != nil {
		x.xxx_hidden_ModemConnection = &modemInfo_Tcpip{b.Tcpip}
	}
	if b.SerialOverIp != nil {
		x.xxx_hidden_ModemConnection = &modemInfo_SerialOverIp{b.SerialOverIp}
	}
	if b.SerialBaudRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_SerialBaudRate = *b.SerialBaudRate
	}
	return m0
}

type case_ModemInfo_ModemConnection protoreflect.FieldNumber

func (x case_ModemInfo_ModemConnection) String() string {
	md := file_acquisition_shared_proto_msgTypes[7].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isModemInfo_ModemConnection interface {
	isModemInfo_ModemConnection()
}

type modemInfo_Tcpip struct {
	Tcpip *ConnectionTypeDirectTcpIp `protobuf:"bytes,9,opt,name=tcpip,oneof"` // The TCP connection type. The modem either supports TCP directly, or an IP-to-serial converter is used that handles the serial configuration.
}

type modemInfo_SerialOverIp struct {
	SerialOverIp *ConnectionTypeControlledSerial `protobuf:"bytes,10,opt,name=serial_over_ip,json=serialOverIp,oneof"` // The serial-over-IP connection type. Used when the modem is connected via an IP-to-serial converter and requires specific handling.
}

func (*modemInfo_Tcpip) isModemInfo_ModemConnection() {}

func (*modemInfo_SerialOverIp) isModemInfo_ModemConnection() {}

// Defines the parameters for serial port configuration.
type SerialConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BaudRate    SerialConfigBaudRate   `protobuf:"varint,1,opt,name=baud_rate,json=baudRate,enum=io.clbs.openhes.models.acquisition.SerialConfigBaudRate"`
	xxx_hidden_Parity      SerialConfigParity     `protobuf:"varint,2,opt,name=parity,enum=io.clbs.openhes.models.acquisition.SerialConfigParity"`
	xxx_hidden_DataBits    SerialConfigDataBits   `protobuf:"varint,3,opt,name=data_bits,json=dataBits,enum=io.clbs.openhes.models.acquisition.SerialConfigDataBits"`
	xxx_hidden_StopBits    SerialConfigStopBits   `protobuf:"varint,4,opt,name=stop_bits,json=stopBits,enum=io.clbs.openhes.models.acquisition.SerialConfigStopBits"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SerialConfig) Reset() {
	*x = SerialConfig{}
	mi := &file_acquisition_shared_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SerialConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerialConfig) ProtoMessage() {}

func (x *SerialConfig) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SerialConfig) GetBaudRate() SerialConfigBaudRate {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_BaudRate
		}
	}
	return SerialConfigBaudRate_BAUD_RATE_110
}

func (x *SerialConfig) GetParity() SerialConfigParity {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Parity
		}
	}
	return SerialConfigParity_PARITY_NONE
}

func (x *SerialConfig) GetDataBits() SerialConfigDataBits {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_DataBits
		}
	}
	return SerialConfigDataBits_DATA_BITS_5
}

func (x *SerialConfig) GetStopBits() SerialConfigStopBits {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_StopBits
		}
	}
	return SerialConfigStopBits_STOP_BITS_1
}

func (x *SerialConfig) SetBaudRate(v SerialConfigBaudRate) {
	x.xxx_hidden_BaudRate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *SerialConfig) SetParity(v SerialConfigParity) {
	x.xxx_hidden_Parity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *SerialConfig) SetDataBits(v SerialConfigDataBits) {
	x.xxx_hidden_DataBits = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *SerialConfig) SetStopBits(v SerialConfigStopBits) {
	x.xxx_hidden_StopBits = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *SerialConfig) HasBaudRate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SerialConfig) HasParity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SerialConfig) HasDataBits() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SerialConfig) HasStopBits() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SerialConfig) ClearBaudRate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BaudRate = SerialConfigBaudRate_BAUD_RATE_110
}

func (x *SerialConfig) ClearParity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Parity = SerialConfigParity_PARITY_NONE
}

func (x *SerialConfig) ClearDataBits() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DataBits = SerialConfigDataBits_DATA_BITS_5
}

func (x *SerialConfig) ClearStopBits() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_StopBits = SerialConfigStopBits_STOP_BITS_1
}

type SerialConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BaudRate *SerialConfigBaudRate
	Parity   *SerialConfigParity
	DataBits *SerialConfigDataBits
	StopBits *SerialConfigStopBits
}

func (b0 SerialConfig_builder) Build() *SerialConfig {
	m0 := &SerialConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BaudRate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_BaudRate = *b.BaudRate
	}
	if b.Parity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Parity = *b.Parity
	}
	if b.DataBits != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_DataBits = *b.DataBits
	}
	if b.StopBits != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_StopBits = *b.StopBits
	}
	return m0
}

// Defines the configuration parameters for device connection.
type ConnectionInfo struct {
	state                         protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Connection         isConnectionInfo_Connection   `protobuf_oneof:"connection"`
	xxx_hidden_LinkProtocol       DataLinkProtocol              `protobuf:"varint,4,opt,name=link_protocol,json=linkProtocol,enum=io.clbs.openhes.models.acquisition.DataLinkProtocol"`
	xxx_hidden_CommunicationBusId *string                       `protobuf:"bytes,5,opt,name=communication_bus_id,json=communicationBusId"`
	xxx_hidden_Attributes         map[string]*common.FieldValue `protobuf:"bytes,6,rep,name=attributes" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ConnectionInfo) Reset() {
	*x = ConnectionInfo{}
	mi := &file_acquisition_shared_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionInfo) ProtoMessage() {}

func (x *ConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConnectionInfo) GetTcpip() *ConnectionTypeDirectTcpIp {
	if x != nil {
		if x, ok := x.xxx_hidden_Connection.(*connectionInfo_Tcpip); ok {
			return x.Tcpip
		}
	}
	return nil
}

func (x *ConnectionInfo) GetModemPool() *ConnectionTypeModemPool {
	if x != nil {
		if x, ok := x.xxx_hidden_Connection.(*connectionInfo_ModemPool); ok {
			return x.ModemPool
		}
	}
	return nil
}

func (x *ConnectionInfo) GetSerialOverIp() *ConnectionTypeControlledSerial {
	if x != nil {
		if x, ok := x.xxx_hidden_Connection.(*connectionInfo_SerialOverIp); ok {
			return x.SerialOverIp
		}
	}
	return nil
}

func (x *ConnectionInfo) GetLinkProtocol() DataLinkProtocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_LinkProtocol
		}
	}
	return DataLinkProtocol_LINKPROTO_IEC_62056_21
}

func (x *ConnectionInfo) GetCommunicationBusId() string {
	if x != nil {
		if x.xxx_hidden_CommunicationBusId != nil {
			return *x.xxx_hidden_CommunicationBusId
		}
		return ""
	}
	return ""
}

func (x *ConnectionInfo) GetAttributes() map[string]*common.FieldValue {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *ConnectionInfo) SetTcpip(v *ConnectionTypeDirectTcpIp) {
	if v == nil {
		x.xxx_hidden_Connection = nil
		return
	}
	x.xxx_hidden_Connection = &connectionInfo_Tcpip{v}
}

func (x *ConnectionInfo) SetModemPool(v *ConnectionTypeModemPool) {
	if v == nil {
		x.xxx_hidden_Connection = nil
		return
	}
	x.xxx_hidden_Connection = &connectionInfo_ModemPool{v}
}

func (x *ConnectionInfo) SetSerialOverIp(v *ConnectionTypeControlledSerial) {
	if v == nil {
		x.xxx_hidden_Connection = nil
		return
	}
	x.xxx_hidden_Connection = &connectionInfo_SerialOverIp{v}
}

func (x *ConnectionInfo) SetLinkProtocol(v DataLinkProtocol) {
	x.xxx_hidden_LinkProtocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ConnectionInfo) SetCommunicationBusId(v string) {
	x.xxx_hidden_CommunicationBusId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ConnectionInfo) SetAttributes(v map[string]*common.FieldValue) {
	x.xxx_hidden_Attributes = v
}

func (x *ConnectionInfo) HasConnection() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Connection != nil
}

func (x *ConnectionInfo) HasTcpip() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Connection.(*connectionInfo_Tcpip)
	return ok
}

func (x *ConnectionInfo) HasModemPool() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Connection.(*connectionInfo_ModemPool)
	return ok
}

func (x *ConnectionInfo) HasSerialOverIp() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Connection.(*connectionInfo_SerialOverIp)
	return ok
}

func (x *ConnectionInfo) HasLinkProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ConnectionInfo) HasCommunicationBusId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ConnectionInfo) ClearConnection() {
	x.xxx_hidden_Connection = nil
}

func (x *ConnectionInfo) ClearTcpip() {
	if _, ok := x.xxx_hidden_Connection.(*connectionInfo_Tcpip); ok {
		x.xxx_hidden_Connection = nil
	}
}

func (x *ConnectionInfo) ClearModemPool() {
	if _, ok := x.xxx_hidden_Connection.(*connectionInfo_ModemPool); ok {
		x.xxx_hidden_Connection = nil
	}
}

func (x *ConnectionInfo) ClearSerialOverIp() {
	if _, ok := x.xxx_hidden_Connection.(*connectionInfo_SerialOverIp); ok {
		x.xxx_hidden_Connection = nil
	}
}

func (x *ConnectionInfo) ClearLinkProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_LinkProtocol = DataLinkProtocol_LINKPROTO_IEC_62056_21
}

func (x *ConnectionInfo) ClearCommunicationBusId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CommunicationBusId = nil
}

const ConnectionInfo_Connection_not_set_case case_ConnectionInfo_Connection = 0
const ConnectionInfo_Tcpip_case case_ConnectionInfo_Connection = 1
const ConnectionInfo_ModemPool_case case_ConnectionInfo_Connection = 2
const ConnectionInfo_SerialOverIp_case case_ConnectionInfo_Connection = 3

func (x *ConnectionInfo) WhichConnection() case_ConnectionInfo_Connection {
	if x == nil {
		return ConnectionInfo_Connection_not_set_case
	}
	switch x.xxx_hidden_Connection.(type) {
	case *connectionInfo_Tcpip:
		return ConnectionInfo_Tcpip_case
	case *connectionInfo_ModemPool:
		return ConnectionInfo_ModemPool_case
	case *connectionInfo_SerialOverIp:
		return ConnectionInfo_SerialOverIp_case
	default:
		return ConnectionInfo_Connection_not_set_case
	}
}

type ConnectionInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The entrypoint connection description. The connection can be either direct TCP, a modem from a pool, or a direct serial line over IP (via an using IP-to-serial converter).

	// Fields of oneof xxx_hidden_Connection:
	Tcpip        *ConnectionTypeDirectTcpIp
	ModemPool    *ConnectionTypeModemPool
	SerialOverIp *ConnectionTypeControlledSerial
	// -- end of xxx_hidden_Connection
	LinkProtocol       *DataLinkProtocol
	CommunicationBusId *string
	Attributes         map[string]*common.FieldValue
}

func (b0 ConnectionInfo_builder) Build() *ConnectionInfo {
	m0 := &ConnectionInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Tcpip != nil {
		x.xxx_hidden_Connection = &connectionInfo_Tcpip{b.Tcpip}
	}
	if b.ModemPool != nil {
		x.xxx_hidden_Connection = &connectionInfo_ModemPool{b.ModemPool}
	}
	if b.SerialOverIp != nil {
		x.xxx_hidden_Connection = &connectionInfo_SerialOverIp{b.SerialOverIp}
	}
	if b.LinkProtocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_LinkProtocol = *b.LinkProtocol
	}
	if b.CommunicationBusId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_CommunicationBusId = b.CommunicationBusId
	}
	x.xxx_hidden_Attributes = b.Attributes
	return m0
}

type case_ConnectionInfo_Connection protoreflect.FieldNumber

func (x case_ConnectionInfo_Connection) String() string {
	md := file_acquisition_shared_proto_msgTypes[9].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isConnectionInfo_Connection interface {
	isConnectionInfo_Connection()
}

type connectionInfo_Tcpip struct {
	Tcpip *ConnectionTypeDirectTcpIp `protobuf:"bytes,1,opt,name=tcpip,oneof"` // The TCP/IP connection type.
}

type connectionInfo_ModemPool struct {
	ModemPool *ConnectionTypeModemPool `protobuf:"bytes,2,opt,name=modem_pool,json=modemPool,oneof"` // The phone-based (modem pool) connection type..
}

type connectionInfo_SerialOverIp struct {
	SerialOverIp *ConnectionTypeControlledSerial `protobuf:"bytes,3,opt,name=serial_over_ip,json=serialOverIp,oneof"` // The serial-over-IP connection type.
}

func (*connectionInfo_Tcpip) isConnectionInfo_Connection() {}

func (*connectionInfo_ModemPool) isConnectionInfo_Connection() {}

func (*connectionInfo_SerialOverIp) isConnectionInfo_Connection() {}

// Defines the connection information for direct TCP/IP connection type.
type ConnectionTypeDirectTcpIp struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Host        *string                `protobuf:"bytes,1,opt,name=host"`
	xxx_hidden_Port        uint32                 `protobuf:"varint,2,opt,name=port"`
	xxx_hidden_Timeout     *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ConnectionTypeDirectTcpIp) Reset() {
	*x = ConnectionTypeDirectTcpIp{}
	mi := &file_acquisition_shared_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionTypeDirectTcpIp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionTypeDirectTcpIp) ProtoMessage() {}

func (x *ConnectionTypeDirectTcpIp) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConnectionTypeDirectTcpIp) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *ConnectionTypeDirectTcpIp) GetPort() uint32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *ConnectionTypeDirectTcpIp) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Timeout
	}
	return nil
}

func (x *ConnectionTypeDirectTcpIp) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ConnectionTypeDirectTcpIp) SetPort(v uint32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ConnectionTypeDirectTcpIp) SetTimeout(v *durationpb.Duration) {
	x.xxx_hidden_Timeout = v
}

func (x *ConnectionTypeDirectTcpIp) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConnectionTypeDirectTcpIp) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ConnectionTypeDirectTcpIp) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timeout != nil
}

func (x *ConnectionTypeDirectTcpIp) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

func (x *ConnectionTypeDirectTcpIp) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Port = 0
}

func (x *ConnectionTypeDirectTcpIp) ClearTimeout() {
	x.xxx_hidden_Timeout = nil
}

type ConnectionTypeDirectTcpIp_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host    *string
	Port    *uint32
	Timeout *durationpb.Duration
}

func (b0 ConnectionTypeDirectTcpIp_builder) Build() *ConnectionTypeDirectTcpIp {
	m0 := &ConnectionTypeDirectTcpIp{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Host = b.Host
	}
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Port = *b.Port
	}
	x.xxx_hidden_Timeout = b.Timeout
	return m0
}

// Defines the connection information for a phone line (modem) connection type.
type ConnectionTypeModemPool struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Number      *string                `protobuf:"bytes,1,opt,name=number"`
	xxx_hidden_PoolId      *string                `protobuf:"bytes,2,opt,name=pool_id,json=poolId"`
	xxx_hidden_Modem       *ModemInfo             `protobuf:"bytes,4,opt,name=modem"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ConnectionTypeModemPool) Reset() {
	*x = ConnectionTypeModemPool{}
	mi := &file_acquisition_shared_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionTypeModemPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionTypeModemPool) ProtoMessage() {}

func (x *ConnectionTypeModemPool) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConnectionTypeModemPool) GetNumber() string {
	if x != nil {
		if x.xxx_hidden_Number != nil {
			return *x.xxx_hidden_Number
		}
		return ""
	}
	return ""
}

func (x *ConnectionTypeModemPool) GetPoolId() string {
	if x != nil {
		if x.xxx_hidden_PoolId != nil {
			return *x.xxx_hidden_PoolId
		}
		return ""
	}
	return ""
}

func (x *ConnectionTypeModemPool) GetModem() *ModemInfo {
	if x != nil {
		return x.xxx_hidden_Modem
	}
	return nil
}

func (x *ConnectionTypeModemPool) SetNumber(v string) {
	x.xxx_hidden_Number = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ConnectionTypeModemPool) SetPoolId(v string) {
	x.xxx_hidden_PoolId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ConnectionTypeModemPool) SetModem(v *ModemInfo) {
	x.xxx_hidden_Modem = v
}

func (x *ConnectionTypeModemPool) HasNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConnectionTypeModemPool) HasPoolId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ConnectionTypeModemPool) HasModem() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Modem != nil
}

func (x *ConnectionTypeModemPool) ClearNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Number = nil
}

func (x *ConnectionTypeModemPool) ClearPoolId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PoolId = nil
}

func (x *ConnectionTypeModemPool) ClearModem() {
	x.xxx_hidden_Modem = nil
}

type ConnectionTypeModemPool_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The phone number of the device to connect to.
	Number *string
	// The unique modem pool identifier. A modem pool is a group of modems that can be used to connect to the device. The final modem is selected by the Taskmaster at the job start.
	PoolId *string
	// The modem device assigned to the job. This field filled only when the connection type is modem. The value is assigned by the Taskmaster at the start of the job, and the driver musr use this modem exclusively for this job!
	Modem *ModemInfo
}

func (b0 ConnectionTypeModemPool_builder) Build() *ConnectionTypeModemPool {
	m0 := &ConnectionTypeModemPool{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Number != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Number = b.Number
	}
	if b.PoolId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_PoolId = b.PoolId
	}
	x.xxx_hidden_Modem = b.Modem
	return m0
}

// Defines the connection information for a direct serial port connection.
type ConnectionTypeSerialDirect struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Host        *string                `protobuf:"bytes,1,opt,name=host"`
	xxx_hidden_Port        uint32                 `protobuf:"varint,2,opt,name=port"`
	xxx_hidden_Timeout     *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ConnectionTypeSerialDirect) Reset() {
	*x = ConnectionTypeSerialDirect{}
	mi := &file_acquisition_shared_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionTypeSerialDirect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionTypeSerialDirect) ProtoMessage() {}

func (x *ConnectionTypeSerialDirect) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConnectionTypeSerialDirect) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *ConnectionTypeSerialDirect) GetPort() uint32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *ConnectionTypeSerialDirect) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Timeout
	}
	return nil
}

func (x *ConnectionTypeSerialDirect) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ConnectionTypeSerialDirect) SetPort(v uint32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ConnectionTypeSerialDirect) SetTimeout(v *durationpb.Duration) {
	x.xxx_hidden_Timeout = v
}

func (x *ConnectionTypeSerialDirect) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConnectionTypeSerialDirect) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ConnectionTypeSerialDirect) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timeout != nil
}

func (x *ConnectionTypeSerialDirect) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

func (x *ConnectionTypeSerialDirect) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Port = 0
}

func (x *ConnectionTypeSerialDirect) ClearTimeout() {
	x.xxx_hidden_Timeout = nil
}

type ConnectionTypeSerialDirect_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host    *string
	Port    *uint32
	Timeout *durationpb.Duration
}

func (b0 ConnectionTypeSerialDirect_builder) Build() *ConnectionTypeSerialDirect {
	m0 := &ConnectionTypeSerialDirect{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Host = b.Host
	}
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Port = *b.Port
	}
	x.xxx_hidden_Timeout = b.Timeout
	return m0
}

// Defines the connection information for a controlled serial line using the Moxa protocol.
type ConnectionTypeSerialMoxa struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Host        *string                `protobuf:"bytes,1,opt,name=host"`
	xxx_hidden_DataPort    uint32                 `protobuf:"varint,2,opt,name=dataPort"`
	xxx_hidden_CommandPort uint32                 `protobuf:"varint,3,opt,name=command_port,json=commandPort"`
	xxx_hidden_Timeout     *durationpb.Duration   `protobuf:"bytes,4,opt,name=timeout"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ConnectionTypeSerialMoxa) Reset() {
	*x = ConnectionTypeSerialMoxa{}
	mi := &file_acquisition_shared_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionTypeSerialMoxa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionTypeSerialMoxa) ProtoMessage() {}

func (x *ConnectionTypeSerialMoxa) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConnectionTypeSerialMoxa) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *ConnectionTypeSerialMoxa) GetDataPort() uint32 {
	if x != nil {
		return x.xxx_hidden_DataPort
	}
	return 0
}

func (x *ConnectionTypeSerialMoxa) GetCommandPort() uint32 {
	if x != nil {
		return x.xxx_hidden_CommandPort
	}
	return 0
}

func (x *ConnectionTypeSerialMoxa) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Timeout
	}
	return nil
}

func (x *ConnectionTypeSerialMoxa) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ConnectionTypeSerialMoxa) SetDataPort(v uint32) {
	x.xxx_hidden_DataPort = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ConnectionTypeSerialMoxa) SetCommandPort(v uint32) {
	x.xxx_hidden_CommandPort = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ConnectionTypeSerialMoxa) SetTimeout(v *durationpb.Duration) {
	x.xxx_hidden_Timeout = v
}

func (x *ConnectionTypeSerialMoxa) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConnectionTypeSerialMoxa) HasDataPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ConnectionTypeSerialMoxa) HasCommandPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ConnectionTypeSerialMoxa) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timeout != nil
}

func (x *ConnectionTypeSerialMoxa) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

func (x *ConnectionTypeSerialMoxa) ClearDataPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DataPort = 0
}

func (x *ConnectionTypeSerialMoxa) ClearCommandPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CommandPort = 0
}

func (x *ConnectionTypeSerialMoxa) ClearTimeout() {
	x.xxx_hidden_Timeout = nil
}

type ConnectionTypeSerialMoxa_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host        *string
	DataPort    *uint32
	CommandPort *uint32
	Timeout     *durationpb.Duration
}

func (b0 ConnectionTypeSerialMoxa_builder) Build() *ConnectionTypeSerialMoxa {
	m0 := &ConnectionTypeSerialMoxa{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Host = b.Host
	}
	if b.DataPort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_DataPort = *b.DataPort
	}
	if b.CommandPort != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_CommandPort = *b.CommandPort
	}
	x.xxx_hidden_Timeout = b.Timeout
	return m0
}

// Defines the connection information for a controlled serial line using the RFC 2217 protocol.
type ConnectionTypeSerialRfc2217 struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Host        *string                `protobuf:"bytes,1,opt,name=host"`
	xxx_hidden_Port        uint32                 `protobuf:"varint,2,opt,name=port"`
	xxx_hidden_Timeout     *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ConnectionTypeSerialRfc2217) Reset() {
	*x = ConnectionTypeSerialRfc2217{}
	mi := &file_acquisition_shared_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionTypeSerialRfc2217) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionTypeSerialRfc2217) ProtoMessage() {}

func (x *ConnectionTypeSerialRfc2217) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConnectionTypeSerialRfc2217) GetHost() string {
	if x != nil {
		if x.xxx_hidden_Host != nil {
			return *x.xxx_hidden_Host
		}
		return ""
	}
	return ""
}

func (x *ConnectionTypeSerialRfc2217) GetPort() uint32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *ConnectionTypeSerialRfc2217) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Timeout
	}
	return nil
}

func (x *ConnectionTypeSerialRfc2217) SetHost(v string) {
	x.xxx_hidden_Host = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ConnectionTypeSerialRfc2217) SetPort(v uint32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ConnectionTypeSerialRfc2217) SetTimeout(v *durationpb.Duration) {
	x.xxx_hidden_Timeout = v
}

func (x *ConnectionTypeSerialRfc2217) HasHost() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConnectionTypeSerialRfc2217) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ConnectionTypeSerialRfc2217) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timeout != nil
}

func (x *ConnectionTypeSerialRfc2217) ClearHost() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Host = nil
}

func (x *ConnectionTypeSerialRfc2217) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Port = 0
}

func (x *ConnectionTypeSerialRfc2217) ClearTimeout() {
	x.xxx_hidden_Timeout = nil
}

type ConnectionTypeSerialRfc2217_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Host    *string
	Port    *uint32
	Timeout *durationpb.Duration
}

func (b0 ConnectionTypeSerialRfc2217_builder) Build() *ConnectionTypeSerialRfc2217 {
	m0 := &ConnectionTypeSerialRfc2217{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Host != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Host = b.Host
	}
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Port = *b.Port
	}
	x.xxx_hidden_Timeout = b.Timeout
	return m0
}

// Defines the destription for one application protocol, for example DLMS_SN.
type ApplicationProtocolTemplate struct {
	state                  protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Protocol    ApplicationProtocol        `protobuf:"varint,1,opt,name=protocol,enum=io.clbs.openhes.models.acquisition.ApplicationProtocol"`
	xxx_hidden_Attributes  *[]*common.FieldDescriptor `protobuf:"bytes,2,rep,name=attributes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ApplicationProtocolTemplate) Reset() {
	*x = ApplicationProtocolTemplate{}
	mi := &file_acquisition_shared_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationProtocolTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationProtocolTemplate) ProtoMessage() {}

func (x *ApplicationProtocolTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ApplicationProtocolTemplate) GetProtocol() ApplicationProtocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Protocol
		}
	}
	return ApplicationProtocol_APPPROTO_IEC_62056_21
}

func (x *ApplicationProtocolTemplate) GetAttributes() []*common.FieldDescriptor {
	if x != nil {
		if x.xxx_hidden_Attributes != nil {
			return *x.xxx_hidden_Attributes
		}
	}
	return nil
}

func (x *ApplicationProtocolTemplate) SetProtocol(v ApplicationProtocol) {
	x.xxx_hidden_Protocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ApplicationProtocolTemplate) SetAttributes(v []*common.FieldDescriptor) {
	x.xxx_hidden_Attributes = &v
}

func (x *ApplicationProtocolTemplate) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ApplicationProtocolTemplate) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Protocol = ApplicationProtocol_APPPROTO_IEC_62056_21
}

type ApplicationProtocolTemplate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The application protocol.
	Protocol *ApplicationProtocol
	// The list of attribute definitions for the selected application protocol. These attributes are instantiated for each device and communication unit pair.
	Attributes []*common.FieldDescriptor
}

func (b0 ApplicationProtocolTemplate_builder) Build() *ApplicationProtocolTemplate {
	m0 := &ApplicationProtocolTemplate{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Protocol = *b.Protocol
	}
	x.xxx_hidden_Attributes = &b.Attributes
	return m0
}

// Defines the destription of a single data link protocol, for example `HDLC`.
type DataLinkTemplate struct {
	state                      protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_LinkProtocol    DataLinkProtocol           `protobuf:"varint,1,opt,name=link_protocol,json=linkProtocol,enum=io.clbs.openhes.models.acquisition.DataLinkProtocol"`
	xxx_hidden_AppProtocolRefs []ApplicationProtocol      `protobuf:"varint,2,rep,packed,name=app_protocol_refs,json=appProtocolRefs,enum=io.clbs.openhes.models.acquisition.ApplicationProtocol"`
	xxx_hidden_Attributes      *[]*common.FieldDescriptor `protobuf:"bytes,3,rep,name=attributes"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *DataLinkTemplate) Reset() {
	*x = DataLinkTemplate{}
	mi := &file_acquisition_shared_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataLinkTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataLinkTemplate) ProtoMessage() {}

func (x *DataLinkTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataLinkTemplate) GetLinkProtocol() DataLinkProtocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_LinkProtocol
		}
	}
	return DataLinkProtocol_LINKPROTO_IEC_62056_21
}

func (x *DataLinkTemplate) GetAppProtocolRefs() []ApplicationProtocol {
	if x != nil {
		return x.xxx_hidden_AppProtocolRefs
	}
	return nil
}

func (x *DataLinkTemplate) GetAttributes() []*common.FieldDescriptor {
	if x != nil {
		if x.xxx_hidden_Attributes != nil {
			return *x.xxx_hidden_Attributes
		}
	}
	return nil
}

func (x *DataLinkTemplate) SetLinkProtocol(v DataLinkProtocol) {
	x.xxx_hidden_LinkProtocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *DataLinkTemplate) SetAppProtocolRefs(v []ApplicationProtocol) {
	x.xxx_hidden_AppProtocolRefs = v
}

func (x *DataLinkTemplate) SetAttributes(v []*common.FieldDescriptor) {
	x.xxx_hidden_Attributes = &v
}

func (x *DataLinkTemplate) HasLinkProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DataLinkTemplate) ClearLinkProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_LinkProtocol = DataLinkProtocol_LINKPROTO_IEC_62056_21
}

type DataLinkTemplate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The data link protocol.
	LinkProtocol *DataLinkProtocol
	// The list of application protocol identifiers supported by the driver.
	AppProtocolRefs []ApplicationProtocol
	// The list of attribute definitions related to the selected data link type (see l`ink_protocol` property). These field definitions are provided by the system and drivers must leave this field empty.
	Attributes []*common.FieldDescriptor
}

func (b0 DataLinkTemplate_builder) Build() *DataLinkTemplate {
	m0 := &DataLinkTemplate{}
	b, x := &b0, m0
	_, _ = b, x
	if b.LinkProtocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_LinkProtocol = *b.LinkProtocol
	}
	x.xxx_hidden_AppProtocolRefs = b.AppProtocolRefs
	x.xxx_hidden_Attributes = &b.Attributes
	return m0
}

// Defines the destription of a single communication type, for example `TCP/IP`.
type CommunicationTemplate struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type        CommunicationType      `protobuf:"varint,1,opt,name=type,enum=io.clbs.openhes.models.acquisition.CommunicationType"`
	xxx_hidden_Datalinks   *[]*DataLinkTemplate   `protobuf:"bytes,2,rep,name=datalinks"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CommunicationTemplate) Reset() {
	*x = CommunicationTemplate{}
	mi := &file_acquisition_shared_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommunicationTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunicationTemplate) ProtoMessage() {}

func (x *CommunicationTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommunicationTemplate) GetType() CommunicationType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Type
		}
	}
	return CommunicationType_COMMUNICATION_TYPE_TCPIP
}

func (x *CommunicationTemplate) GetDatalinks() []*DataLinkTemplate {
	if x != nil {
		if x.xxx_hidden_Datalinks != nil {
			return *x.xxx_hidden_Datalinks
		}
	}
	return nil
}

func (x *CommunicationTemplate) SetType(v CommunicationType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *CommunicationTemplate) SetDatalinks(v []*DataLinkTemplate) {
	x.xxx_hidden_Datalinks = &v
}

func (x *CommunicationTemplate) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CommunicationTemplate) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = CommunicationType_COMMUNICATION_TYPE_TCPIP
}

type CommunicationTemplate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The communication type.
	Type *CommunicationType
	// The list of supprted data link protocols and their application protocols supported by the driver.
	Datalinks []*DataLinkTemplate
}

func (b0 CommunicationTemplate_builder) Build() *CommunicationTemplate {
	m0 := &CommunicationTemplate{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Type = *b.Type
	}
	x.xxx_hidden_Datalinks = &b.Datalinks
	return m0
}

// Defines the access level configuration for a driver.
type AccessLevelTemplate struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AccessLevelTemplate) Reset() {
	*x = AccessLevelTemplate{}
	mi := &file_acquisition_shared_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessLevelTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessLevelTemplate) ProtoMessage() {}

func (x *AccessLevelTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AccessLevelTemplate) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *AccessLevelTemplate) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *AccessLevelTemplate) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *AccessLevelTemplate) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *AccessLevelTemplate) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AccessLevelTemplate) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AccessLevelTemplate) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *AccessLevelTemplate) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type AccessLevelTemplate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *string
	Name *string
}

func (b0 AccessLevelTemplate_builder) Build() *AccessLevelTemplate {
	m0 := &AccessLevelTemplate{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

// Defines the driver templates exchanged during driver negotiation.
type DriverTemplates struct {
	state                              protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_CommunicationTemplates  *[]*CommunicationTemplate       `protobuf:"bytes,1,rep,name=communication_templates,json=communicationTemplates"`
	xxx_hidden_AppProtocols            *[]*ApplicationProtocolTemplate `protobuf:"bytes,2,rep,name=app_protocols,json=appProtocols"`
	xxx_hidden_ActionAttributes        *[]*JobActionAttributes         `protobuf:"bytes,3,rep,name=action_attributes,json=actionAttributes"`
	xxx_hidden_AccessTemplates         *[]*AccessLevelTemplate         `protobuf:"bytes,4,rep,name=access_templates,json=accessTemplates"`
	xxx_hidden_ActionConstraints       *JobActionContraints            `protobuf:"bytes,5,opt,name=action_constraints,json=actionConstraints"`
	xxx_hidden_UknownDeviceDescriptors *[]*common.FieldDescriptor      `protobuf:"bytes,6,rep,name=uknown_device_descriptors,json=uknownDeviceDescriptors"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *DriverTemplates) Reset() {
	*x = DriverTemplates{}
	mi := &file_acquisition_shared_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverTemplates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverTemplates) ProtoMessage() {}

func (x *DriverTemplates) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DriverTemplates) GetCommunicationTemplates() []*CommunicationTemplate {
	if x != nil {
		if x.xxx_hidden_CommunicationTemplates != nil {
			return *x.xxx_hidden_CommunicationTemplates
		}
	}
	return nil
}

func (x *DriverTemplates) GetAppProtocols() []*ApplicationProtocolTemplate {
	if x != nil {
		if x.xxx_hidden_AppProtocols != nil {
			return *x.xxx_hidden_AppProtocols
		}
	}
	return nil
}

func (x *DriverTemplates) GetActionAttributes() []*JobActionAttributes {
	if x != nil {
		if x.xxx_hidden_ActionAttributes != nil {
			return *x.xxx_hidden_ActionAttributes
		}
	}
	return nil
}

func (x *DriverTemplates) GetAccessTemplates() []*AccessLevelTemplate {
	if x != nil {
		if x.xxx_hidden_AccessTemplates != nil {
			return *x.xxx_hidden_AccessTemplates
		}
	}
	return nil
}

func (x *DriverTemplates) GetActionConstraints() *JobActionContraints {
	if x != nil {
		return x.xxx_hidden_ActionConstraints
	}
	return nil
}

func (x *DriverTemplates) GetUknownDeviceDescriptors() []*common.FieldDescriptor {
	if x != nil {
		if x.xxx_hidden_UknownDeviceDescriptors != nil {
			return *x.xxx_hidden_UknownDeviceDescriptors
		}
	}
	return nil
}

func (x *DriverTemplates) SetCommunicationTemplates(v []*CommunicationTemplate) {
	x.xxx_hidden_CommunicationTemplates = &v
}

func (x *DriverTemplates) SetAppProtocols(v []*ApplicationProtocolTemplate) {
	x.xxx_hidden_AppProtocols = &v
}

func (x *DriverTemplates) SetActionAttributes(v []*JobActionAttributes) {
	x.xxx_hidden_ActionAttributes = &v
}

func (x *DriverTemplates) SetAccessTemplates(v []*AccessLevelTemplate) {
	x.xxx_hidden_AccessTemplates = &v
}

func (x *DriverTemplates) SetActionConstraints(v *JobActionContraints) {
	x.xxx_hidden_ActionConstraints = v
}

func (x *DriverTemplates) SetUknownDeviceDescriptors(v []*common.FieldDescriptor) {
	x.xxx_hidden_UknownDeviceDescriptors = &v
}

func (x *DriverTemplates) HasActionConstraints() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ActionConstraints != nil
}

func (x *DriverTemplates) ClearActionConstraints() {
	x.xxx_hidden_ActionConstraints = nil
}

type DriverTemplates_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The supported communication options templates. Each template represents one communication method. A driver can support multiple communication templates.
	CommunicationTemplates []*CommunicationTemplate
	// The supported application protocol templates.
	AppProtocols []*ApplicationProtocolTemplate
	// The job action templates all supported action types. Each supported action type must appear onbly once.
	ActionAttributes []*JobActionAttributes
	// The supported access level templates.
	AccessTemplates []*AccessLevelTemplate
	// The supported templates of the job actions constraints.
	ActionConstraints *JobActionContraints
	// The list of descriptors for uknown devices detected by the communication unit.
	// This applies only to drivers that communicate with devices like data concentrators that can provide information for unknown devices.
	// The descriptors must cover all data attributes used in the `SetUnknownDevicesRequest` message.
	UknownDeviceDescriptors []*common.FieldDescriptor
}

func (b0 DriverTemplates_builder) Build() *DriverTemplates {
	m0 := &DriverTemplates{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CommunicationTemplates = &b.CommunicationTemplates
	x.xxx_hidden_AppProtocols = &b.AppProtocols
	x.xxx_hidden_ActionAttributes = &b.ActionAttributes
	x.xxx_hidden_AccessTemplates = &b.AccessTemplates
	x.xxx_hidden_ActionConstraints = b.ActionConstraints
	x.xxx_hidden_UknownDeviceDescriptors = &b.UknownDeviceDescriptors
	return m0
}

// Defines a progress update for an action within a job.
type ActionProgressUpdate struct {
	state                   protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_JobId        *string                  `protobuf:"bytes,1,opt,name=job_id,json=jobId"`
	xxx_hidden_ActionId     *string                  `protobuf:"bytes,2,opt,name=action_id,json=actionId"`
	xxx_hidden_Code         ActionResultCode         `protobuf:"varint,3,opt,name=code,enum=io.clbs.openhes.models.acquisition.ActionResultCode"`
	xxx_hidden_Data         *ActionData              `protobuf:"bytes,4,opt,name=data"`
	xxx_hidden_ErrorMessage *common.FormattedMessage `protobuf:"bytes,5,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ActionProgressUpdate) Reset() {
	*x = ActionProgressUpdate{}
	mi := &file_acquisition_shared_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionProgressUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionProgressUpdate) ProtoMessage() {}

func (x *ActionProgressUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActionProgressUpdate) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *ActionProgressUpdate) GetActionId() string {
	if x != nil {
		if x.xxx_hidden_ActionId != nil {
			return *x.xxx_hidden_ActionId
		}
		return ""
	}
	return ""
}

func (x *ActionProgressUpdate) GetCode() ActionResultCode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Code
		}
	}
	return ActionResultCode_ERROR_CODE_ACTION_OK
}

func (x *ActionProgressUpdate) GetData() *ActionData {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *ActionProgressUpdate) GetErrorMessage() *common.FormattedMessage {
	if x != nil {
		return x.xxx_hidden_ErrorMessage
	}
	return nil
}

func (x *ActionProgressUpdate) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ActionProgressUpdate) SetActionId(v string) {
	x.xxx_hidden_ActionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ActionProgressUpdate) SetCode(v ActionResultCode) {
	x.xxx_hidden_Code = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ActionProgressUpdate) SetData(v *ActionData) {
	x.xxx_hidden_Data = v
}

func (x *ActionProgressUpdate) SetErrorMessage(v *common.FormattedMessage) {
	x.xxx_hidden_ErrorMessage = v
}

func (x *ActionProgressUpdate) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ActionProgressUpdate) HasActionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ActionProgressUpdate) HasCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ActionProgressUpdate) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *ActionProgressUpdate) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ErrorMessage != nil
}

func (x *ActionProgressUpdate) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

func (x *ActionProgressUpdate) ClearActionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ActionId = nil
}

func (x *ActionProgressUpdate) ClearCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Code = ActionResultCode_ERROR_CODE_ACTION_OK
}

func (x *ActionProgressUpdate) ClearData() {
	x.xxx_hidden_Data = nil
}

func (x *ActionProgressUpdate) ClearErrorMessage() {
	x.xxx_hidden_ErrorMessage = nil
}

type ActionProgressUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId        *string
	ActionId     *string
	Code         *ActionResultCode
	Data         *ActionData
	ErrorMessage *common.FormattedMessage
}

func (b0 ActionProgressUpdate_builder) Build() *ActionProgressUpdate {
	m0 := &ActionProgressUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_JobId = b.JobId
	}
	if b.ActionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_ActionId = b.ActionId
	}
	if b.Code != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Code = *b.Code
	}
	x.xxx_hidden_Data = b.Data
	x.xxx_hidden_ErrorMessage = b.ErrorMessage
	return m0
}

// Defines a progress update for a job.
type JobProgressUpdate struct {
	state                   protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_JobId        *string                  `protobuf:"bytes,1,opt,name=job_id,json=jobId"`
	xxx_hidden_Code         JobErrorCode             `protobuf:"varint,2,opt,name=code,enum=io.clbs.openhes.models.acquisition.JobErrorCode"`
	xxx_hidden_Duration     *durationpb.Duration     `protobuf:"bytes,3,opt,name=duration"`
	xxx_hidden_ErrorMessage *common.FormattedMessage `protobuf:"bytes,4,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *JobProgressUpdate) Reset() {
	*x = JobProgressUpdate{}
	mi := &file_acquisition_shared_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobProgressUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProgressUpdate) ProtoMessage() {}

func (x *JobProgressUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobProgressUpdate) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *JobProgressUpdate) GetCode() JobErrorCode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Code
		}
	}
	return JobErrorCode_JOB_ERROR_CODE_NONE
}

func (x *JobProgressUpdate) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Duration
	}
	return nil
}

func (x *JobProgressUpdate) GetErrorMessage() *common.FormattedMessage {
	if x != nil {
		return x.xxx_hidden_ErrorMessage
	}
	return nil
}

func (x *JobProgressUpdate) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *JobProgressUpdate) SetCode(v JobErrorCode) {
	x.xxx_hidden_Code = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *JobProgressUpdate) SetDuration(v *durationpb.Duration) {
	x.xxx_hidden_Duration = v
}

func (x *JobProgressUpdate) SetErrorMessage(v *common.FormattedMessage) {
	x.xxx_hidden_ErrorMessage = v
}

func (x *JobProgressUpdate) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobProgressUpdate) HasCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *JobProgressUpdate) HasDuration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Duration != nil
}

func (x *JobProgressUpdate) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ErrorMessage != nil
}

func (x *JobProgressUpdate) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

func (x *JobProgressUpdate) ClearCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Code = JobErrorCode_JOB_ERROR_CODE_NONE
}

func (x *JobProgressUpdate) ClearDuration() {
	x.xxx_hidden_Duration = nil
}

func (x *JobProgressUpdate) ClearErrorMessage() {
	x.xxx_hidden_ErrorMessage = nil
}

type JobProgressUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId        *string
	Code         *JobErrorCode
	Duration     *durationpb.Duration
	ErrorMessage *common.FormattedMessage
}

func (b0 JobProgressUpdate_builder) Build() *JobProgressUpdate {
	m0 := &JobProgressUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_JobId = b.JobId
	}
	if b.Code != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Code = *b.Code
	}
	x.xxx_hidden_Duration = b.Duration
	x.xxx_hidden_ErrorMessage = b.ErrorMessage
	return m0
}

// Defines the action-based variant of data values.
type ActionData struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Data isActionData_Data      `protobuf_oneof:"data"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ActionData) Reset() {
	*x = ActionData{}
	mi := &file_acquisition_shared_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionData) ProtoMessage() {}

func (x *ActionData) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActionData) GetNodata() *emptypb.Empty {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*actionData_Nodata); ok {
			return x.Nodata
		}
	}
	return nil
}

func (x *ActionData) GetRegisters() *RegisterValues {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*actionData_Registers); ok {
			return x.Registers
		}
	}
	return nil
}

func (x *ActionData) GetProfile() *ProfileValues {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*actionData_Profile); ok {
			return x.Profile
		}
	}
	return nil
}

func (x *ActionData) GetIrregularProfile() *IrregularProfileValues {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*actionData_IrregularProfile); ok {
			return x.IrregularProfile
		}
	}
	return nil
}

func (x *ActionData) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*actionData_DeviceInfo); ok {
			return x.DeviceInfo
		}
	}
	return nil
}

func (x *ActionData) GetEvents() *EventRecords {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*actionData_Events); ok {
			return x.Events
		}
	}
	return nil
}

func (x *ActionData) GetTouTable() *timeofuse.TimeOfUseTableSpec {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*actionData_TouTable); ok {
			return x.TouTable
		}
	}
	return nil
}

func (x *ActionData) SetNodata(v *emptypb.Empty) {
	if v == nil {
		x.xxx_hidden_Data = nil
		return
	}
	x.xxx_hidden_Data = &actionData_Nodata{v}
}

func (x *ActionData) SetRegisters(v *RegisterValues) {
	if v == nil {
		x.xxx_hidden_Data = nil
		return
	}
	x.xxx_hidden_Data = &actionData_Registers{v}
}

func (x *ActionData) SetProfile(v *ProfileValues) {
	if v == nil {
		x.xxx_hidden_Data = nil
		return
	}
	x.xxx_hidden_Data = &actionData_Profile{v}
}

func (x *ActionData) SetIrregularProfile(v *IrregularProfileValues) {
	if v == nil {
		x.xxx_hidden_Data = nil
		return
	}
	x.xxx_hidden_Data = &actionData_IrregularProfile{v}
}

func (x *ActionData) SetDeviceInfo(v *DeviceInfo) {
	if v == nil {
		x.xxx_hidden_Data = nil
		return
	}
	x.xxx_hidden_Data = &actionData_DeviceInfo{v}
}

func (x *ActionData) SetEvents(v *EventRecords) {
	if v == nil {
		x.xxx_hidden_Data = nil
		return
	}
	x.xxx_hidden_Data = &actionData_Events{v}
}

func (x *ActionData) SetTouTable(v *timeofuse.TimeOfUseTableSpec) {
	if v == nil {
		x.xxx_hidden_Data = nil
		return
	}
	x.xxx_hidden_Data = &actionData_TouTable{v}
}

func (x *ActionData) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *ActionData) HasNodata() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*actionData_Nodata)
	return ok
}

func (x *ActionData) HasRegisters() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*actionData_Registers)
	return ok
}

func (x *ActionData) HasProfile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*actionData_Profile)
	return ok
}

func (x *ActionData) HasIrregularProfile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*actionData_IrregularProfile)
	return ok
}

func (x *ActionData) HasDeviceInfo() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*actionData_DeviceInfo)
	return ok
}

func (x *ActionData) HasEvents() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*actionData_Events)
	return ok
}

func (x *ActionData) HasTouTable() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*actionData_TouTable)
	return ok
}

func (x *ActionData) ClearData() {
	x.xxx_hidden_Data = nil
}

func (x *ActionData) ClearNodata() {
	if _, ok := x.xxx_hidden_Data.(*actionData_Nodata); ok {
		x.xxx_hidden_Data = nil
	}
}

func (x *ActionData) ClearRegisters() {
	if _, ok := x.xxx_hidden_Data.(*actionData_Registers); ok {
		x.xxx_hidden_Data = nil
	}
}

func (x *ActionData) ClearProfile() {
	if _, ok := x.xxx_hidden_Data.(*actionData_Profile); ok {
		x.xxx_hidden_Data = nil
	}
}

func (x *ActionData) ClearIrregularProfile() {
	if _, ok := x.xxx_hidden_Data.(*actionData_IrregularProfile); ok {
		x.xxx_hidden_Data = nil
	}
}

func (x *ActionData) ClearDeviceInfo() {
	if _, ok := x.xxx_hidden_Data.(*actionData_DeviceInfo); ok {
		x.xxx_hidden_Data = nil
	}
}

func (x *ActionData) ClearEvents() {
	if _, ok := x.xxx_hidden_Data.(*actionData_Events); ok {
		x.xxx_hidden_Data = nil
	}
}

func (x *ActionData) ClearTouTable() {
	if _, ok := x.xxx_hidden_Data.(*actionData_TouTable); ok {
		x.xxx_hidden_Data = nil
	}
}

const ActionData_Data_not_set_case case_ActionData_Data = 0
const ActionData_Nodata_case case_ActionData_Data = 1
const ActionData_Registers_case case_ActionData_Data = 2
const ActionData_Profile_case case_ActionData_Data = 3
const ActionData_IrregularProfile_case case_ActionData_Data = 4
const ActionData_DeviceInfo_case case_ActionData_Data = 5
const ActionData_Events_case case_ActionData_Data = 6
const ActionData_TouTable_case case_ActionData_Data = 7

func (x *ActionData) WhichData() case_ActionData_Data {
	if x == nil {
		return ActionData_Data_not_set_case
	}
	switch x.xxx_hidden_Data.(type) {
	case *actionData_Nodata:
		return ActionData_Nodata_case
	case *actionData_Registers:
		return ActionData_Registers_case
	case *actionData_Profile:
		return ActionData_Profile_case
	case *actionData_IrregularProfile:
		return ActionData_IrregularProfile_case
	case *actionData_DeviceInfo:
		return ActionData_DeviceInfo_case
	case *actionData_Events:
		return ActionData_Events_case
	case *actionData_TouTable:
		return ActionData_TouTable_case
	default:
		return ActionData_Data_not_set_case
	}
}

type ActionData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Data:
	Nodata           *emptypb.Empty
	Registers        *RegisterValues
	Profile          *ProfileValues
	IrregularProfile *IrregularProfileValues
	DeviceInfo       *DeviceInfo
	Events           *EventRecords
	TouTable         *timeofuse.TimeOfUseTableSpec
	// -- end of xxx_hidden_Data
}

func (b0 ActionData_builder) Build() *ActionData {
	m0 := &ActionData{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Nodata != nil {
		x.xxx_hidden_Data = &actionData_Nodata{b.Nodata}
	}
	if b.Registers != nil {
		x.xxx_hidden_Data = &actionData_Registers{b.Registers}
	}
	if b.Profile != nil {
		x.xxx_hidden_Data = &actionData_Profile{b.Profile}
	}
	if b.IrregularProfile != nil {
		x.xxx_hidden_Data = &actionData_IrregularProfile{b.IrregularProfile}
	}
	if b.DeviceInfo != nil {
		x.xxx_hidden_Data = &actionData_DeviceInfo{b.DeviceInfo}
	}
	if b.Events != nil {
		x.xxx_hidden_Data = &actionData_Events{b.Events}
	}
	if b.TouTable != nil {
		x.xxx_hidden_Data = &actionData_TouTable{b.TouTable}
	}
	return m0
}

type case_ActionData_Data protoreflect.FieldNumber

func (x case_ActionData_Data) String() string {
	md := file_acquisition_shared_proto_msgTypes[22].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isActionData_Data interface {
	isActionData_Data()
}

type actionData_Nodata struct {
	Nodata *emptypb.Empty `protobuf:"bytes,1,opt,name=nodata,oneof"` // Indicates that no data was returned by the action.
}

type actionData_Registers struct {
	Registers *RegisterValues `protobuf:"bytes,2,opt,name=registers,oneof"` // The set of register values.
}

type actionData_Profile struct {
	Profile *ProfileValues `protobuf:"bytes,3,opt,name=profile,oneof"` // The set of profile values.
}

type actionData_IrregularProfile struct {
	IrregularProfile *IrregularProfileValues `protobuf:"bytes,4,opt,name=irregular_profile,json=irregularProfile,oneof"` // The set of irregular (non-periodical) profile values, such as daily profiles.
}

type actionData_DeviceInfo struct {
	DeviceInfo *DeviceInfo `protobuf:"bytes,5,opt,name=device_info,json=deviceInfo,oneof"` // The device information.
}

type actionData_Events struct {
	Events *EventRecords `protobuf:"bytes,6,opt,name=events,oneof"` // The event records.
}

type actionData_TouTable struct {
	TouTable *timeofuse.TimeOfUseTableSpec `protobuf:"bytes,7,opt,name=tou_table,json=touTable,oneof"` // The time-of-use (TOU) table.
}

func (*actionData_Nodata) isActionData_Data() {}

func (*actionData_Registers) isActionData_Data() {}

func (*actionData_Profile) isActionData_Data() {}

func (*actionData_IrregularProfile) isActionData_Data() {}

func (*actionData_DeviceInfo) isActionData_Data() {}

func (*actionData_Events) isActionData_Data() {}

func (*actionData_TouTable) isActionData_Data() {}

// Defines a list of event records.
type EventRecords struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Values *[]*EventRecord        `protobuf:"bytes,1,rep,name=values"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EventRecords) Reset() {
	*x = EventRecords{}
	mi := &file_acquisition_shared_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRecords) ProtoMessage() {}

func (x *EventRecords) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EventRecords) GetValues() []*EventRecord {
	if x != nil {
		if x.xxx_hidden_Values != nil {
			return *x.xxx_hidden_Values
		}
	}
	return nil
}

func (x *EventRecords) SetValues(v []*EventRecord) {
	x.xxx_hidden_Values = &v
}

type EventRecords_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Values []*EventRecord
}

func (b0 EventRecords_builder) Build() *EventRecords {
	m0 := &EventRecords{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Values = &b.Values
	return m0
}

// Defines a single event reported by a device.
type EventRecord struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_EventId     int64                  `protobuf:"varint,2,opt,name=event_id,json=eventId"`
	xxx_hidden_EventCode   int64                  `protobuf:"varint,3,opt,name=event_code,json=eventCode"`
	xxx_hidden_EventSource *string                `protobuf:"bytes,5,opt,name=event_source,json=eventSource"`
	xxx_hidden_EventText   *string                `protobuf:"bytes,4,opt,name=event_text,json=eventText"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *EventRecord) Reset() {
	*x = EventRecord{}
	mi := &file_acquisition_shared_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRecord) ProtoMessage() {}

func (x *EventRecord) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EventRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *EventRecord) GetEventId() int64 {
	if x != nil {
		return x.xxx_hidden_EventId
	}
	return 0
}

func (x *EventRecord) GetEventCode() int64 {
	if x != nil {
		return x.xxx_hidden_EventCode
	}
	return 0
}

func (x *EventRecord) GetEventSource() string {
	if x != nil {
		if x.xxx_hidden_EventSource != nil {
			return *x.xxx_hidden_EventSource
		}
		return ""
	}
	return ""
}

func (x *EventRecord) GetEventText() string {
	if x != nil {
		if x.xxx_hidden_EventText != nil {
			return *x.xxx_hidden_EventText
		}
		return ""
	}
	return ""
}

func (x *EventRecord) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *EventRecord) SetEventId(v int64) {
	x.xxx_hidden_EventId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *EventRecord) SetEventCode(v int64) {
	x.xxx_hidden_EventCode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *EventRecord) SetEventSource(v string) {
	x.xxx_hidden_EventSource = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *EventRecord) SetEventText(v string) {
	x.xxx_hidden_EventText = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *EventRecord) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *EventRecord) HasEventId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EventRecord) HasEventCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EventRecord) HasEventSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *EventRecord) HasEventText() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *EventRecord) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *EventRecord) ClearEventId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_EventId = 0
}

func (x *EventRecord) ClearEventCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EventCode = 0
}

func (x *EventRecord) ClearEventSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EventSource = nil
}

func (x *EventRecord) ClearEventText() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_EventText = nil
}

type EventRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp   *timestamppb.Timestamp
	EventId     *int64
	EventCode   *int64
	EventSource *string
	EventText   *string
}

func (b0 EventRecord_builder) Build() *EventRecord {
	m0 := &EventRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.EventId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_EventId = *b.EventId
	}
	if b.EventCode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_EventCode = *b.EventCode
	}
	if b.EventSource != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_EventSource = b.EventSource
	}
	if b.EventText != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_EventText = b.EventText
	}
	return m0
}

// Defines a single event record associated with the specified device.
type DeviceEventRecord struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DeviceId    *string                `protobuf:"bytes,1,opt,name=device_id,json=deviceId"`
	xxx_hidden_Timestamp   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp"`
	xxx_hidden_EventId     int64                  `protobuf:"varint,3,opt,name=event_id,json=eventId"`
	xxx_hidden_EventCode   int64                  `protobuf:"varint,4,opt,name=event_code,json=eventCode"`
	xxx_hidden_EventSource *string                `protobuf:"bytes,5,opt,name=event_source,json=eventSource"`
	xxx_hidden_EventText   *string                `protobuf:"bytes,6,opt,name=event_text,json=eventText"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeviceEventRecord) Reset() {
	*x = DeviceEventRecord{}
	mi := &file_acquisition_shared_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceEventRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEventRecord) ProtoMessage() {}

func (x *DeviceEventRecord) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceEventRecord) GetDeviceId() string {
	if x != nil {
		if x.xxx_hidden_DeviceId != nil {
			return *x.xxx_hidden_DeviceId
		}
		return ""
	}
	return ""
}

func (x *DeviceEventRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *DeviceEventRecord) GetEventId() int64 {
	if x != nil {
		return x.xxx_hidden_EventId
	}
	return 0
}

func (x *DeviceEventRecord) GetEventCode() int64 {
	if x != nil {
		return x.xxx_hidden_EventCode
	}
	return 0
}

func (x *DeviceEventRecord) GetEventSource() string {
	if x != nil {
		if x.xxx_hidden_EventSource != nil {
			return *x.xxx_hidden_EventSource
		}
		return ""
	}
	return ""
}

func (x *DeviceEventRecord) GetEventText() string {
	if x != nil {
		if x.xxx_hidden_EventText != nil {
			return *x.xxx_hidden_EventText
		}
		return ""
	}
	return ""
}

func (x *DeviceEventRecord) SetDeviceId(v string) {
	x.xxx_hidden_DeviceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *DeviceEventRecord) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *DeviceEventRecord) SetEventId(v int64) {
	x.xxx_hidden_EventId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *DeviceEventRecord) SetEventCode(v int64) {
	x.xxx_hidden_EventCode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *DeviceEventRecord) SetEventSource(v string) {
	x.xxx_hidden_EventSource = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *DeviceEventRecord) SetEventText(v string) {
	x.xxx_hidden_EventText = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *DeviceEventRecord) HasDeviceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeviceEventRecord) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *DeviceEventRecord) HasEventId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeviceEventRecord) HasEventCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeviceEventRecord) HasEventSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DeviceEventRecord) HasEventText() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DeviceEventRecord) ClearDeviceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DeviceId = nil
}

func (x *DeviceEventRecord) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *DeviceEventRecord) ClearEventId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EventId = 0
}

func (x *DeviceEventRecord) ClearEventCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EventCode = 0
}

func (x *DeviceEventRecord) ClearEventSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_EventSource = nil
}

func (x *DeviceEventRecord) ClearEventText() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_EventText = nil
}

type DeviceEventRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DeviceId    *string
	Timestamp   *timestamppb.Timestamp
	EventId     *int64
	EventCode   *int64
	EventSource *string
	EventText   *string
}

func (b0 DeviceEventRecord_builder) Build() *DeviceEventRecord {
	m0 := &DeviceEventRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DeviceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_DeviceId = b.DeviceId
	}
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.EventId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_EventId = *b.EventId
	}
	if b.EventCode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_EventCode = *b.EventCode
	}
	if b.EventSource != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_EventSource = b.EventSource
	}
	if b.EventText != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_EventText = b.EventText
	}
	return m0
}

// Defines a list of device event records.
type DeviceEvents struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Events *[]*DeviceEventRecord  `protobuf:"bytes,1,rep,name=events"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeviceEvents) Reset() {
	*x = DeviceEvents{}
	mi := &file_acquisition_shared_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEvents) ProtoMessage() {}

func (x *DeviceEvents) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceEvents) GetEvents() []*DeviceEventRecord {
	if x != nil {
		if x.xxx_hidden_Events != nil {
			return *x.xxx_hidden_Events
		}
	}
	return nil
}

func (x *DeviceEvents) SetEvents(v []*DeviceEventRecord) {
	x.xxx_hidden_Events = &v
}

type DeviceEvents_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The list of device event records.
	Events []*DeviceEventRecord
}

func (b0 DeviceEvents_builder) Build() *DeviceEvents {
	m0 := &DeviceEvents{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Events = &b.Events
	return m0
}

// Defines common device information.
type DeviceInfo struct {
	state                               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_InfoTimestamp            *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=info_timestamp,json=infoTimestamp"`
	xxx_hidden_ManufacturerSerialNumber *string                `protobuf:"bytes,2,opt,name=manufacturer_serial_number,json=manufacturerSerialNumber"`
	xxx_hidden_DeviceSerialNumber       *string                `protobuf:"bytes,3,opt,name=device_serial_number,json=deviceSerialNumber"`
	xxx_hidden_FirmwareVersion          *string                `protobuf:"bytes,4,opt,name=firmware_version,json=firmwareVersion"`
	xxx_hidden_ClockDelta               *durationpb.Duration   `protobuf:"bytes,5,opt,name=clock_delta,json=clockDelta"`
	xxx_hidden_DeviceModel              *string                `protobuf:"bytes,6,opt,name=device_model,json=deviceModel"`
	xxx_hidden_ErrorRegister            uint64                 `protobuf:"varint,7,opt,name=error_register,json=errorRegister"`
	xxx_hidden_RelayStates              []bool                 `protobuf:"varint,8,rep,packed,name=relay_states,json=relayStates"`
	xxx_hidden_ConnectionState          bool                   `protobuf:"varint,9,opt,name=connection_state,json=connectionState"`
	XXX_raceDetectHookData              protoimpl.RaceDetectHookData
	XXX_presence                        [1]uint32
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	mi := &file_acquisition_shared_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceInfo) GetInfoTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_InfoTimestamp
	}
	return nil
}

func (x *DeviceInfo) GetManufacturerSerialNumber() string {
	if x != nil {
		if x.xxx_hidden_ManufacturerSerialNumber != nil {
			return *x.xxx_hidden_ManufacturerSerialNumber
		}
		return ""
	}
	return ""
}

func (x *DeviceInfo) GetDeviceSerialNumber() string {
	if x != nil {
		if x.xxx_hidden_DeviceSerialNumber != nil {
			return *x.xxx_hidden_DeviceSerialNumber
		}
		return ""
	}
	return ""
}

func (x *DeviceInfo) GetFirmwareVersion() string {
	if x != nil {
		if x.xxx_hidden_FirmwareVersion != nil {
			return *x.xxx_hidden_FirmwareVersion
		}
		return ""
	}
	return ""
}

func (x *DeviceInfo) GetClockDelta() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_ClockDelta
	}
	return nil
}

func (x *DeviceInfo) GetDeviceModel() string {
	if x != nil {
		if x.xxx_hidden_DeviceModel != nil {
			return *x.xxx_hidden_DeviceModel
		}
		return ""
	}
	return ""
}

func (x *DeviceInfo) GetErrorRegister() uint64 {
	if x != nil {
		return x.xxx_hidden_ErrorRegister
	}
	return 0
}

func (x *DeviceInfo) GetRelayStates() []bool {
	if x != nil {
		return x.xxx_hidden_RelayStates
	}
	return nil
}

func (x *DeviceInfo) GetConnectionState() bool {
	if x != nil {
		return x.xxx_hidden_ConnectionState
	}
	return false
}

func (x *DeviceInfo) SetInfoTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_InfoTimestamp = v
}

func (x *DeviceInfo) SetManufacturerSerialNumber(v string) {
	x.xxx_hidden_ManufacturerSerialNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *DeviceInfo) SetDeviceSerialNumber(v string) {
	x.xxx_hidden_DeviceSerialNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *DeviceInfo) SetFirmwareVersion(v string) {
	x.xxx_hidden_FirmwareVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *DeviceInfo) SetClockDelta(v *durationpb.Duration) {
	x.xxx_hidden_ClockDelta = v
}

func (x *DeviceInfo) SetDeviceModel(v string) {
	x.xxx_hidden_DeviceModel = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *DeviceInfo) SetErrorRegister(v uint64) {
	x.xxx_hidden_ErrorRegister = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *DeviceInfo) SetRelayStates(v []bool) {
	x.xxx_hidden_RelayStates = v
}

func (x *DeviceInfo) SetConnectionState(v bool) {
	x.xxx_hidden_ConnectionState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *DeviceInfo) HasInfoTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InfoTimestamp != nil
}

func (x *DeviceInfo) HasManufacturerSerialNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceInfo) HasDeviceSerialNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeviceInfo) HasFirmwareVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeviceInfo) HasClockDelta() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ClockDelta != nil
}

func (x *DeviceInfo) HasDeviceModel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DeviceInfo) HasErrorRegister() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *DeviceInfo) HasConnectionState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *DeviceInfo) ClearInfoTimestamp() {
	x.xxx_hidden_InfoTimestamp = nil
}

func (x *DeviceInfo) ClearManufacturerSerialNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ManufacturerSerialNumber = nil
}

func (x *DeviceInfo) ClearDeviceSerialNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DeviceSerialNumber = nil
}

func (x *DeviceInfo) ClearFirmwareVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_FirmwareVersion = nil
}

func (x *DeviceInfo) ClearClockDelta() {
	x.xxx_hidden_ClockDelta = nil
}

func (x *DeviceInfo) ClearDeviceModel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_DeviceModel = nil
}

func (x *DeviceInfo) ClearErrorRegister() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ErrorRegister = 0
}

func (x *DeviceInfo) ClearConnectionState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_ConnectionState = false
}

type DeviceInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	InfoTimestamp            *timestamppb.Timestamp
	ManufacturerSerialNumber *string
	DeviceSerialNumber       *string
	FirmwareVersion          *string
	ClockDelta               *durationpb.Duration
	DeviceModel              *string
	ErrorRegister            *uint64
	RelayStates              []bool
	ConnectionState          *bool
}

func (b0 DeviceInfo_builder) Build() *DeviceInfo {
	m0 := &DeviceInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_InfoTimestamp = b.InfoTimestamp
	if b.ManufacturerSerialNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_ManufacturerSerialNumber = b.ManufacturerSerialNumber
	}
	if b.DeviceSerialNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_DeviceSerialNumber = b.DeviceSerialNumber
	}
	if b.FirmwareVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_FirmwareVersion = b.FirmwareVersion
	}
	x.xxx_hidden_ClockDelta = b.ClockDelta
	if b.DeviceModel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_DeviceModel = b.DeviceModel
	}
	if b.ErrorRegister != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_ErrorRegister = *b.ErrorRegister
	}
	x.xxx_hidden_RelayStates = b.RelayStates
	if b.ConnectionState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_ConnectionState = *b.ConnectionState
	}
	return m0
}

// Defines the profile-type values.
type ProfileValues struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Period      int32                  `protobuf:"varint,1,opt,name=period"`
	xxx_hidden_Unit        *string                `protobuf:"bytes,2,opt,name=unit"`
	xxx_hidden_Blocks      *[]*ProfileBlock       `protobuf:"bytes,3,rep,name=blocks"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ProfileValues) Reset() {
	*x = ProfileValues{}
	mi := &file_acquisition_shared_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileValues) ProtoMessage() {}

func (x *ProfileValues) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProfileValues) GetPeriod() int32 {
	if x != nil {
		return x.xxx_hidden_Period
	}
	return 0
}

func (x *ProfileValues) GetUnit() string {
	if x != nil {
		if x.xxx_hidden_Unit != nil {
			return *x.xxx_hidden_Unit
		}
		return ""
	}
	return ""
}

func (x *ProfileValues) GetBlocks() []*ProfileBlock {
	if x != nil {
		if x.xxx_hidden_Blocks != nil {
			return *x.xxx_hidden_Blocks
		}
	}
	return nil
}

func (x *ProfileValues) SetPeriod(v int32) {
	x.xxx_hidden_Period = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ProfileValues) SetUnit(v string) {
	x.xxx_hidden_Unit = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ProfileValues) SetBlocks(v []*ProfileBlock) {
	x.xxx_hidden_Blocks = &v
}

func (x *ProfileValues) HasPeriod() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ProfileValues) HasUnit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ProfileValues) ClearPeriod() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Period = 0
}

func (x *ProfileValues) ClearUnit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Unit = nil
}

type ProfileValues_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Period *int32
	Unit   *string
	Blocks []*ProfileBlock
}

func (b0 ProfileValues_builder) Build() *ProfileValues {
	m0 := &ProfileValues{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Period != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Period = *b.Period
	}
	if b.Unit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Unit = b.Unit
	}
	x.xxx_hidden_Blocks = &b.Blocks
	return m0
}

// Defines the irregular (non-perioic) profile values.
type IrregularProfileValues struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Unit        *string                `protobuf:"bytes,1,opt,name=unit"`
	xxx_hidden_Values      *[]*IrregularValue     `protobuf:"bytes,2,rep,name=values"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *IrregularProfileValues) Reset() {
	*x = IrregularProfileValues{}
	mi := &file_acquisition_shared_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IrregularProfileValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IrregularProfileValues) ProtoMessage() {}

func (x *IrregularProfileValues) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IrregularProfileValues) GetUnit() string {
	if x != nil {
		if x.xxx_hidden_Unit != nil {
			return *x.xxx_hidden_Unit
		}
		return ""
	}
	return ""
}

func (x *IrregularProfileValues) GetValues() []*IrregularValue {
	if x != nil {
		if x.xxx_hidden_Values != nil {
			return *x.xxx_hidden_Values
		}
	}
	return nil
}

func (x *IrregularProfileValues) SetUnit(v string) {
	x.xxx_hidden_Unit = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *IrregularProfileValues) SetValues(v []*IrregularValue) {
	x.xxx_hidden_Values = &v
}

func (x *IrregularProfileValues) HasUnit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *IrregularProfileValues) ClearUnit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Unit = nil
}

type IrregularProfileValues_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Unit   *string
	Values []*IrregularValue
}

func (b0 IrregularProfileValues_builder) Build() *IrregularProfileValues {
	m0 := &IrregularProfileValues{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Unit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Unit = b.Unit
	}
	x.xxx_hidden_Values = &b.Values
	return m0
}

// Defines a single irregular (non-periodic) value with a timestamp.
type IrregularValue struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_Value     *MeasuredValue         `protobuf:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *IrregularValue) Reset() {
	*x = IrregularValue{}
	mi := &file_acquisition_shared_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IrregularValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IrregularValue) ProtoMessage() {}

func (x *IrregularValue) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IrregularValue) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *IrregularValue) GetValue() *MeasuredValue {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *IrregularValue) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *IrregularValue) SetValue(v *MeasuredValue) {
	x.xxx_hidden_Value = v
}

func (x *IrregularValue) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *IrregularValue) HasValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Value != nil
}

func (x *IrregularValue) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *IrregularValue) ClearValue() {
	x.xxx_hidden_Value = nil
}

type IrregularValue_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp *timestamppb.Timestamp
	Value     *MeasuredValue
}

func (b0 IrregularValue_builder) Build() *IrregularValue {
	m0 := &IrregularValue{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	x.xxx_hidden_Value = b.Value
	return m0
}

// Defines a single profile block containing the measured values.
type ProfileBlock struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_StartTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_timestamp,json=startTimestamp"`
	xxx_hidden_Values         *[]*MeasuredValue      `protobuf:"bytes,2,rep,name=values"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ProfileBlock) Reset() {
	*x = ProfileBlock{}
	mi := &file_acquisition_shared_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileBlock) ProtoMessage() {}

func (x *ProfileBlock) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProfileBlock) GetStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_StartTimestamp
	}
	return nil
}

func (x *ProfileBlock) GetValues() []*MeasuredValue {
	if x != nil {
		if x.xxx_hidden_Values != nil {
			return *x.xxx_hidden_Values
		}
	}
	return nil
}

func (x *ProfileBlock) SetStartTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_StartTimestamp = v
}

func (x *ProfileBlock) SetValues(v []*MeasuredValue) {
	x.xxx_hidden_Values = &v
}

func (x *ProfileBlock) HasStartTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StartTimestamp != nil
}

func (x *ProfileBlock) ClearStartTimestamp() {
	x.xxx_hidden_StartTimestamp = nil
}

type ProfileBlock_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	StartTimestamp *timestamppb.Timestamp
	Values         []*MeasuredValue
}

func (b0 ProfileBlock_builder) Build() *ProfileBlock {
	m0 := &ProfileBlock{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_StartTimestamp = b.StartTimestamp
	x.xxx_hidden_Values = &b.Values
	return m0
}

// Defines the register-type values.
type RegisterValues struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Values *[]*RegisterValue      `protobuf:"bytes,1,rep,name=values"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterValues) Reset() {
	*x = RegisterValues{}
	mi := &file_acquisition_shared_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterValues) ProtoMessage() {}

func (x *RegisterValues) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterValues) GetValues() []*RegisterValue {
	if x != nil {
		if x.xxx_hidden_Values != nil {
			return *x.xxx_hidden_Values
		}
	}
	return nil
}

func (x *RegisterValues) SetValues(v []*RegisterValue) {
	x.xxx_hidden_Values = &v
}

type RegisterValues_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Values []*RegisterValue
}

func (b0 RegisterValues_builder) Build() *RegisterValues {
	m0 := &RegisterValues{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Values = &b.Values
	return m0
}

// Defines a single register-type value.
type RegisterValue struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_Unit        *string                `protobuf:"bytes,2,opt,name=unit"`
	xxx_hidden_Value       *MeasuredValue         `protobuf:"bytes,3,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RegisterValue) Reset() {
	*x = RegisterValue{}
	mi := &file_acquisition_shared_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterValue) ProtoMessage() {}

func (x *RegisterValue) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RegisterValue) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *RegisterValue) GetUnit() string {
	if x != nil {
		if x.xxx_hidden_Unit != nil {
			return *x.xxx_hidden_Unit
		}
		return ""
	}
	return ""
}

func (x *RegisterValue) GetValue() *MeasuredValue {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *RegisterValue) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *RegisterValue) SetUnit(v string) {
	x.xxx_hidden_Unit = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *RegisterValue) SetValue(v *MeasuredValue) {
	x.xxx_hidden_Value = v
}

func (x *RegisterValue) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *RegisterValue) HasUnit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RegisterValue) HasValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Value != nil
}

func (x *RegisterValue) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *RegisterValue) ClearUnit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Unit = nil
}

func (x *RegisterValue) ClearValue() {
	x.xxx_hidden_Value = nil
}

type RegisterValue_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp *timestamppb.Timestamp
	Unit      *string
	Value     *MeasuredValue
}

func (b0 RegisterValue_builder) Build() *RegisterValue {
	m0 := &RegisterValue{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.Unit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Unit = b.Unit
	}
	x.xxx_hidden_Value = b.Value
	return m0
}

// Sub-message containing measured value
type MeasuredValue struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Status      int64                  `protobuf:"varint,1,opt,name=status"`
	xxx_hidden_Exponent    int32                  `protobuf:"varint,2,opt,name=exponent"`
	xxx_hidden_Kind        isMeasuredValue_Kind   `protobuf_oneof:"kind"`
	xxx_hidden_Nstatus     uint64                 `protobuf:"varint,9,opt,name=nstatus"`
	xxx_hidden_PeakTs      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=peak_ts,json=peakTs"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MeasuredValue) Reset() {
	*x = MeasuredValue{}
	mi := &file_acquisition_shared_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeasuredValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasuredValue) ProtoMessage() {}

func (x *MeasuredValue) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MeasuredValue) GetStatus() int64 {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return 0
}

func (x *MeasuredValue) GetExponent() int32 {
	if x != nil {
		return x.xxx_hidden_Exponent
	}
	return 0
}

func (x *MeasuredValue) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Kind.(*measuredValue_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *MeasuredValue) GetIntegerValue() int64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Kind.(*measuredValue_IntegerValue); ok {
			return x.IntegerValue
		}
	}
	return 0
}

func (x *MeasuredValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Kind.(*measuredValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *MeasuredValue) GetTimestampValue() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.xxx_hidden_Kind.(*measuredValue_TimestampValue); ok {
			return x.TimestampValue
		}
	}
	return nil
}

func (x *MeasuredValue) GetTimestampTzValue() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Kind.(*measuredValue_TimestampTzValue); ok {
			return x.TimestampTzValue
		}
	}
	return ""
}

func (x *MeasuredValue) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Kind.(*measuredValue_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *MeasuredValue) GetNstatus() uint64 {
	if x != nil {
		return x.xxx_hidden_Nstatus
	}
	return 0
}

func (x *MeasuredValue) GetPeakTs() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_PeakTs
	}
	return nil
}

func (x *MeasuredValue) SetStatus(v int64) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *MeasuredValue) SetExponent(v int32) {
	x.xxx_hidden_Exponent = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *MeasuredValue) SetDoubleValue(v float64) {
	x.xxx_hidden_Kind = &measuredValue_DoubleValue{v}
}

func (x *MeasuredValue) SetIntegerValue(v int64) {
	x.xxx_hidden_Kind = &measuredValue_IntegerValue{v}
}

func (x *MeasuredValue) SetStringValue(v string) {
	x.xxx_hidden_Kind = &measuredValue_StringValue{v}
}

func (x *MeasuredValue) SetTimestampValue(v *timestamppb.Timestamp) {
	if v == nil {
		x.xxx_hidden_Kind = nil
		return
	}
	x.xxx_hidden_Kind = &measuredValue_TimestampValue{v}
}

func (x *MeasuredValue) SetTimestampTzValue(v string) {
	x.xxx_hidden_Kind = &measuredValue_TimestampTzValue{v}
}

func (x *MeasuredValue) SetBoolValue(v bool) {
	x.xxx_hidden_Kind = &measuredValue_BoolValue{v}
}

func (x *MeasuredValue) SetNstatus(v uint64) {
	x.xxx_hidden_Nstatus = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *MeasuredValue) SetPeakTs(v *timestamppb.Timestamp) {
	x.xxx_hidden_PeakTs = v
}

func (x *MeasuredValue) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MeasuredValue) HasExponent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MeasuredValue) HasKind() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Kind != nil
}

func (x *MeasuredValue) HasDoubleValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Kind.(*measuredValue_DoubleValue)
	return ok
}

func (x *MeasuredValue) HasIntegerValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Kind.(*measuredValue_IntegerValue)
	return ok
}

func (x *MeasuredValue) HasStringValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Kind.(*measuredValue_StringValue)
	return ok
}

func (x *MeasuredValue) HasTimestampValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Kind.(*measuredValue_TimestampValue)
	return ok
}

func (x *MeasuredValue) HasTimestampTzValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Kind.(*measuredValue_TimestampTzValue)
	return ok
}

func (x *MeasuredValue) HasBoolValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Kind.(*measuredValue_BoolValue)
	return ok
}

func (x *MeasuredValue) HasNstatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MeasuredValue) HasPeakTs() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PeakTs != nil
}

func (x *MeasuredValue) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Status = 0
}

func (x *MeasuredValue) ClearExponent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Exponent = 0
}

func (x *MeasuredValue) ClearKind() {
	x.xxx_hidden_Kind = nil
}

func (x *MeasuredValue) ClearDoubleValue() {
	if _, ok := x.xxx_hidden_Kind.(*measuredValue_DoubleValue); ok {
		x.xxx_hidden_Kind = nil
	}
}

func (x *MeasuredValue) ClearIntegerValue() {
	if _, ok := x.xxx_hidden_Kind.(*measuredValue_IntegerValue); ok {
		x.xxx_hidden_Kind = nil
	}
}

func (x *MeasuredValue) ClearStringValue() {
	if _, ok := x.xxx_hidden_Kind.(*measuredValue_StringValue); ok {
		x.xxx_hidden_Kind = nil
	}
}

func (x *MeasuredValue) ClearTimestampValue() {
	if _, ok := x.xxx_hidden_Kind.(*measuredValue_TimestampValue); ok {
		x.xxx_hidden_Kind = nil
	}
}

func (x *MeasuredValue) ClearTimestampTzValue() {
	if _, ok := x.xxx_hidden_Kind.(*measuredValue_TimestampTzValue); ok {
		x.xxx_hidden_Kind = nil
	}
}

func (x *MeasuredValue) ClearBoolValue() {
	if _, ok := x.xxx_hidden_Kind.(*measuredValue_BoolValue); ok {
		x.xxx_hidden_Kind = nil
	}
}

func (x *MeasuredValue) ClearNstatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Nstatus = 0
}

func (x *MeasuredValue) ClearPeakTs() {
	x.xxx_hidden_PeakTs = nil
}

const MeasuredValue_Kind_not_set_case case_MeasuredValue_Kind = 0
const MeasuredValue_DoubleValue_case case_MeasuredValue_Kind = 3
const MeasuredValue_IntegerValue_case case_MeasuredValue_Kind = 4
const MeasuredValue_StringValue_case case_MeasuredValue_Kind = 5
const MeasuredValue_TimestampValue_case case_MeasuredValue_Kind = 6
const MeasuredValue_TimestampTzValue_case case_MeasuredValue_Kind = 7
const MeasuredValue_BoolValue_case case_MeasuredValue_Kind = 8

func (x *MeasuredValue) WhichKind() case_MeasuredValue_Kind {
	if x == nil {
		return MeasuredValue_Kind_not_set_case
	}
	switch x.xxx_hidden_Kind.(type) {
	case *measuredValue_DoubleValue:
		return MeasuredValue_DoubleValue_case
	case *measuredValue_IntegerValue:
		return MeasuredValue_IntegerValue_case
	case *measuredValue_StringValue:
		return MeasuredValue_StringValue_case
	case *measuredValue_TimestampValue:
		return MeasuredValue_TimestampValue_case
	case *measuredValue_TimestampTzValue:
		return MeasuredValue_TimestampTzValue_case
	case *measuredValue_BoolValue:
		return MeasuredValue_BoolValue_case
	default:
		return MeasuredValue_Kind_not_set_case
	}
}

type MeasuredValue_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status   *int64
	Exponent *int32
	// Fields of oneof xxx_hidden_Kind:
	DoubleValue      *float64
	IntegerValue     *int64
	StringValue      *string
	TimestampValue   *timestamppb.Timestamp
	TimestampTzValue *string
	BoolValue        *bool
	// -- end of xxx_hidden_Kind
	Nstatus *uint64
	PeakTs  *timestamppb.Timestamp
}

func (b0 MeasuredValue_builder) Build() *MeasuredValue {
	m0 := &MeasuredValue{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Status = *b.Status
	}
	if b.Exponent != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Exponent = *b.Exponent
	}
	if b.DoubleValue != nil {
		x.xxx_hidden_Kind = &measuredValue_DoubleValue{*b.DoubleValue}
	}
	if b.IntegerValue != nil {
		x.xxx_hidden_Kind = &measuredValue_IntegerValue{*b.IntegerValue}
	}
	if b.StringValue != nil {
		x.xxx_hidden_Kind = &measuredValue_StringValue{*b.StringValue}
	}
	if b.TimestampValue != nil {
		x.xxx_hidden_Kind = &measuredValue_TimestampValue{b.TimestampValue}
	}
	if b.TimestampTzValue != nil {
		x.xxx_hidden_Kind = &measuredValue_TimestampTzValue{*b.TimestampTzValue}
	}
	if b.BoolValue != nil {
		x.xxx_hidden_Kind = &measuredValue_BoolValue{*b.BoolValue}
	}
	if b.Nstatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Nstatus = *b.Nstatus
	}
	x.xxx_hidden_PeakTs = b.PeakTs
	return m0
}

type case_MeasuredValue_Kind protoreflect.FieldNumber

func (x case_MeasuredValue_Kind) String() string {
	md := file_acquisition_shared_proto_msgTypes[34].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isMeasuredValue_Kind interface {
	isMeasuredValue_Kind()
}

type measuredValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,oneof"` // The double-typed value.
}

type measuredValue_IntegerValue struct {
	IntegerValue int64 `protobuf:"varint,4,opt,name=integer_value,json=integerValue,oneof"` // The integer-typed value.
}

type measuredValue_StringValue struct {
	StringValue string `protobuf:"bytes,5,opt,name=string_value,json=stringValue,oneof"` // The string-typed value.
}

type measuredValue_TimestampValue struct {
	TimestampValue *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp_value,json=timestampValue,oneof"` // The timestamp-typed value.
}

type measuredValue_TimestampTzValue struct {
	TimestampTzValue string `protobuf:"bytes,7,opt,name=timestamp_tz_value,json=timestampTzValue,oneof"` // The timestamp with timezone-typed value, stored as string in ISO-8601.
}

type measuredValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,8,opt,name=bool_value,json=boolValue,oneof"` // The boolean-typed value.
}

func (*measuredValue_DoubleValue) isMeasuredValue_Kind() {}

func (*measuredValue_IntegerValue) isMeasuredValue_Kind() {}

func (*measuredValue_StringValue) isMeasuredValue_Kind() {}

func (*measuredValue_TimestampValue) isMeasuredValue_Kind() {}

func (*measuredValue_TimestampTzValue) isMeasuredValue_Kind() {}

func (*measuredValue_BoolValue) isMeasuredValue_Kind() {}

// Sub-message containing job action attributes
type JobActionAttributes struct {
	state                  protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Type        ActionType                 `protobuf:"varint,1,opt,name=type,enum=io.clbs.openhes.models.acquisition.ActionType"`
	xxx_hidden_Attributes  *[]*common.FieldDescriptor `protobuf:"bytes,2,rep,name=attributes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *JobActionAttributes) Reset() {
	*x = JobActionAttributes{}
	mi := &file_acquisition_shared_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobActionAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobActionAttributes) ProtoMessage() {}

func (x *JobActionAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobActionAttributes) GetType() ActionType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Type
		}
	}
	return ActionType_ACTION_TYPE_GET_REGISTER
}

func (x *JobActionAttributes) GetAttributes() []*common.FieldDescriptor {
	if x != nil {
		if x.xxx_hidden_Attributes != nil {
			return *x.xxx_hidden_Attributes
		}
	}
	return nil
}

func (x *JobActionAttributes) SetType(v ActionType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *JobActionAttributes) SetAttributes(v []*common.FieldDescriptor) {
	x.xxx_hidden_Attributes = &v
}

func (x *JobActionAttributes) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobActionAttributes) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = ActionType_ACTION_TYPE_GET_REGISTER
}

type JobActionAttributes_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The type of action for which this instance of the template is defined.
	Type *ActionType
	// The template of the action attributes. It is represented as a list of attribute definitions.
	Attributes []*common.FieldDescriptor
}

func (b0 JobActionAttributes_builder) Build() *JobActionAttributes {
	m0 := &JobActionAttributes{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Type = *b.Type
	}
	x.xxx_hidden_Attributes = &b.Attributes
	return m0
}

// Sub-message containing connection info for controlled-serial line over IP (e.g. Moxa) connection type
type ConnectionTypeControlledSerial struct {
	state                protoimpl.MessageState                     `protogen:"opaque.v1"`
	xxx_hidden_Converter isConnectionTypeControlledSerial_Converter `protobuf_oneof:"converter"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ConnectionTypeControlledSerial) Reset() {
	*x = ConnectionTypeControlledSerial{}
	mi := &file_acquisition_shared_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionTypeControlledSerial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionTypeControlledSerial) ProtoMessage() {}

func (x *ConnectionTypeControlledSerial) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConnectionTypeControlledSerial) GetDirect() *ConnectionTypeSerialDirect {
	if x != nil {
		if x, ok := x.xxx_hidden_Converter.(*connectionTypeControlledSerial_Direct); ok {
			return x.Direct
		}
	}
	return nil
}

func (x *ConnectionTypeControlledSerial) GetMoxa() *ConnectionTypeSerialMoxa {
	if x != nil {
		if x, ok := x.xxx_hidden_Converter.(*connectionTypeControlledSerial_Moxa); ok {
			return x.Moxa
		}
	}
	return nil
}

func (x *ConnectionTypeControlledSerial) GetRfc2217() *ConnectionTypeSerialRfc2217 {
	if x != nil {
		if x, ok := x.xxx_hidden_Converter.(*connectionTypeControlledSerial_Rfc2217); ok {
			return x.Rfc2217
		}
	}
	return nil
}

func (x *ConnectionTypeControlledSerial) SetDirect(v *ConnectionTypeSerialDirect) {
	if v == nil {
		x.xxx_hidden_Converter = nil
		return
	}
	x.xxx_hidden_Converter = &connectionTypeControlledSerial_Direct{v}
}

func (x *ConnectionTypeControlledSerial) SetMoxa(v *ConnectionTypeSerialMoxa) {
	if v == nil {
		x.xxx_hidden_Converter = nil
		return
	}
	x.xxx_hidden_Converter = &connectionTypeControlledSerial_Moxa{v}
}

func (x *ConnectionTypeControlledSerial) SetRfc2217(v *ConnectionTypeSerialRfc2217) {
	if v == nil {
		x.xxx_hidden_Converter = nil
		return
	}
	x.xxx_hidden_Converter = &connectionTypeControlledSerial_Rfc2217{v}
}

func (x *ConnectionTypeControlledSerial) HasConverter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Converter != nil
}

func (x *ConnectionTypeControlledSerial) HasDirect() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Converter.(*connectionTypeControlledSerial_Direct)
	return ok
}

func (x *ConnectionTypeControlledSerial) HasMoxa() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Converter.(*connectionTypeControlledSerial_Moxa)
	return ok
}

func (x *ConnectionTypeControlledSerial) HasRfc2217() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Converter.(*connectionTypeControlledSerial_Rfc2217)
	return ok
}

func (x *ConnectionTypeControlledSerial) ClearConverter() {
	x.xxx_hidden_Converter = nil
}

func (x *ConnectionTypeControlledSerial) ClearDirect() {
	if _, ok := x.xxx_hidden_Converter.(*connectionTypeControlledSerial_Direct); ok {
		x.xxx_hidden_Converter = nil
	}
}

func (x *ConnectionTypeControlledSerial) ClearMoxa() {
	if _, ok := x.xxx_hidden_Converter.(*connectionTypeControlledSerial_Moxa); ok {
		x.xxx_hidden_Converter = nil
	}
}

func (x *ConnectionTypeControlledSerial) ClearRfc2217() {
	if _, ok := x.xxx_hidden_Converter.(*connectionTypeControlledSerial_Rfc2217); ok {
		x.xxx_hidden_Converter = nil
	}
}

const ConnectionTypeControlledSerial_Converter_not_set_case case_ConnectionTypeControlledSerial_Converter = 0
const ConnectionTypeControlledSerial_Direct_case case_ConnectionTypeControlledSerial_Converter = 1
const ConnectionTypeControlledSerial_Moxa_case case_ConnectionTypeControlledSerial_Converter = 2
const ConnectionTypeControlledSerial_Rfc2217_case case_ConnectionTypeControlledSerial_Converter = 3

func (x *ConnectionTypeControlledSerial) WhichConverter() case_ConnectionTypeControlledSerial_Converter {
	if x == nil {
		return ConnectionTypeControlledSerial_Converter_not_set_case
	}
	switch x.xxx_hidden_Converter.(type) {
	case *connectionTypeControlledSerial_Direct:
		return ConnectionTypeControlledSerial_Direct_case
	case *connectionTypeControlledSerial_Moxa:
		return ConnectionTypeControlledSerial_Moxa_case
	case *connectionTypeControlledSerial_Rfc2217:
		return ConnectionTypeControlledSerial_Rfc2217_case
	default:
		return ConnectionTypeControlledSerial_Converter_not_set_case
	}
}

type ConnectionTypeControlledSerial_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// IP-to-serial converter description.

	// Fields of oneof xxx_hidden_Converter:
	Direct  *ConnectionTypeSerialDirect
	Moxa    *ConnectionTypeSerialMoxa
	Rfc2217 *ConnectionTypeSerialRfc2217
	// -- end of xxx_hidden_Converter
}

func (b0 ConnectionTypeControlledSerial_builder) Build() *ConnectionTypeControlledSerial {
	m0 := &ConnectionTypeControlledSerial{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Direct != nil {
		x.xxx_hidden_Converter = &connectionTypeControlledSerial_Direct{b.Direct}
	}
	if b.Moxa != nil {
		x.xxx_hidden_Converter = &connectionTypeControlledSerial_Moxa{b.Moxa}
	}
	if b.Rfc2217 != nil {
		x.xxx_hidden_Converter = &connectionTypeControlledSerial_Rfc2217{b.Rfc2217}
	}
	return m0
}

type case_ConnectionTypeControlledSerial_Converter protoreflect.FieldNumber

func (x case_ConnectionTypeControlledSerial_Converter) String() string {
	md := file_acquisition_shared_proto_msgTypes[36].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isConnectionTypeControlledSerial_Converter interface {
	isConnectionTypeControlledSerial_Converter()
}

type connectionTypeControlledSerial_Direct struct {
	Direct *ConnectionTypeSerialDirect `protobuf:"bytes,1,opt,name=direct,oneof"` // The simple direct serial connection type.
}

type connectionTypeControlledSerial_Moxa struct {
	Moxa *ConnectionTypeSerialMoxa `protobuf:"bytes,2,opt,name=moxa,oneof"` // The Moxa connection type.
}

type connectionTypeControlledSerial_Rfc2217 struct {
	Rfc2217 *ConnectionTypeSerialRfc2217 `protobuf:"bytes,3,opt,name=rfc2217,oneof"` // The RFC 2217 connection type.
}

func (*connectionTypeControlledSerial_Direct) isConnectionTypeControlledSerial_Converter() {}

func (*connectionTypeControlledSerial_Moxa) isConnectionTypeControlledSerial_Converter() {}

func (*connectionTypeControlledSerial_Rfc2217) isConnectionTypeControlledSerial_Converter() {}

// Sub-message containing get register action specification
type ActionGetRegister struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DataType    common.FieldDataType   `protobuf:"varint,1,opt,name=data_type,json=dataType,enum=io.clbs.openhes.models.common.FieldDataType"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ActionGetRegister) Reset() {
	*x = ActionGetRegister{}
	mi := &file_acquisition_shared_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionGetRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGetRegister) ProtoMessage() {}

func (x *ActionGetRegister) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActionGetRegister) GetDataType() common.FieldDataType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_DataType
		}
	}
	return common.FieldDataType(0)
}

func (x *ActionGetRegister) SetDataType(v common.FieldDataType) {
	x.xxx_hidden_DataType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ActionGetRegister) HasDataType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ActionGetRegister) ClearDataType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DataType = common.FieldDataType_TEXT
}

type ActionGetRegister_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DataType *common.FieldDataType
}

func (b0 ActionGetRegister_builder) Build() *ActionGetRegister {
	m0 := &ActionGetRegister{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DataType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_DataType = *b.DataType
	}
	return m0
}

// Sub-message containing get periodical profile action specification
type ActionGetPeriodicalProfile struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RangeStart  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=range_start,json=rangeStart"`
	xxx_hidden_RangeEnd    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=range_end,json=rangeEnd"`
	xxx_hidden_DataType    common.FieldDataType   `protobuf:"varint,3,opt,name=data_type,json=dataType,enum=io.clbs.openhes.models.common.FieldDataType"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ActionGetPeriodicalProfile) Reset() {
	*x = ActionGetPeriodicalProfile{}
	mi := &file_acquisition_shared_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionGetPeriodicalProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGetPeriodicalProfile) ProtoMessage() {}

func (x *ActionGetPeriodicalProfile) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActionGetPeriodicalProfile) GetRangeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_RangeStart
	}
	return nil
}

func (x *ActionGetPeriodicalProfile) GetRangeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_RangeEnd
	}
	return nil
}

func (x *ActionGetPeriodicalProfile) GetDataType() common.FieldDataType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_DataType
		}
	}
	return common.FieldDataType(0)
}

func (x *ActionGetPeriodicalProfile) SetRangeStart(v *timestamppb.Timestamp) {
	x.xxx_hidden_RangeStart = v
}

func (x *ActionGetPeriodicalProfile) SetRangeEnd(v *timestamppb.Timestamp) {
	x.xxx_hidden_RangeEnd = v
}

func (x *ActionGetPeriodicalProfile) SetDataType(v common.FieldDataType) {
	x.xxx_hidden_DataType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ActionGetPeriodicalProfile) HasRangeStart() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RangeStart != nil
}

func (x *ActionGetPeriodicalProfile) HasRangeEnd() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RangeEnd != nil
}

func (x *ActionGetPeriodicalProfile) HasDataType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ActionGetPeriodicalProfile) ClearRangeStart() {
	x.xxx_hidden_RangeStart = nil
}

func (x *ActionGetPeriodicalProfile) ClearRangeEnd() {
	x.xxx_hidden_RangeEnd = nil
}

func (x *ActionGetPeriodicalProfile) ClearDataType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DataType = common.FieldDataType_TEXT
}

type ActionGetPeriodicalProfile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RangeStart *timestamppb.Timestamp
	RangeEnd   *timestamppb.Timestamp
	DataType   *common.FieldDataType
}

func (b0 ActionGetPeriodicalProfile_builder) Build() *ActionGetPeriodicalProfile {
	m0 := &ActionGetPeriodicalProfile{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_RangeStart = b.RangeStart
	x.xxx_hidden_RangeEnd = b.RangeEnd
	if b.DataType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_DataType = *b.DataType
	}
	return m0
}

// Sub-message containing get irregular profile action specification
type ActionGetIrregularProfile struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RangeStart  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=range_start,json=rangeStart"`
	xxx_hidden_RangeEnd    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=range_end,json=rangeEnd"`
	xxx_hidden_DataType    common.FieldDataType   `protobuf:"varint,3,opt,name=data_type,json=dataType,enum=io.clbs.openhes.models.common.FieldDataType"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ActionGetIrregularProfile) Reset() {
	*x = ActionGetIrregularProfile{}
	mi := &file_acquisition_shared_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionGetIrregularProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGetIrregularProfile) ProtoMessage() {}

func (x *ActionGetIrregularProfile) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActionGetIrregularProfile) GetRangeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_RangeStart
	}
	return nil
}

func (x *ActionGetIrregularProfile) GetRangeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_RangeEnd
	}
	return nil
}

func (x *ActionGetIrregularProfile) GetDataType() common.FieldDataType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_DataType
		}
	}
	return common.FieldDataType(0)
}

func (x *ActionGetIrregularProfile) SetRangeStart(v *timestamppb.Timestamp) {
	x.xxx_hidden_RangeStart = v
}

func (x *ActionGetIrregularProfile) SetRangeEnd(v *timestamppb.Timestamp) {
	x.xxx_hidden_RangeEnd = v
}

func (x *ActionGetIrregularProfile) SetDataType(v common.FieldDataType) {
	x.xxx_hidden_DataType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ActionGetIrregularProfile) HasRangeStart() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RangeStart != nil
}

func (x *ActionGetIrregularProfile) HasRangeEnd() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RangeEnd != nil
}

func (x *ActionGetIrregularProfile) HasDataType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ActionGetIrregularProfile) ClearRangeStart() {
	x.xxx_hidden_RangeStart = nil
}

func (x *ActionGetIrregularProfile) ClearRangeEnd() {
	x.xxx_hidden_RangeEnd = nil
}

func (x *ActionGetIrregularProfile) ClearDataType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DataType = common.FieldDataType_TEXT
}

type ActionGetIrregularProfile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RangeStart *timestamppb.Timestamp
	RangeEnd   *timestamppb.Timestamp
	DataType   *common.FieldDataType
}

func (b0 ActionGetIrregularProfile_builder) Build() *ActionGetIrregularProfile {
	m0 := &ActionGetIrregularProfile{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_RangeStart = b.RangeStart
	x.xxx_hidden_RangeEnd = b.RangeEnd
	if b.DataType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_DataType = *b.DataType
	}
	return m0
}

// Sub-message containing get events action specification
type ActionGetEvents struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RangeStart *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=range_start,json=rangeStart"`
	xxx_hidden_RangeEnd   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=range_end,json=rangeEnd"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ActionGetEvents) Reset() {
	*x = ActionGetEvents{}
	mi := &file_acquisition_shared_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionGetEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGetEvents) ProtoMessage() {}

func (x *ActionGetEvents) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActionGetEvents) GetRangeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_RangeStart
	}
	return nil
}

func (x *ActionGetEvents) GetRangeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_RangeEnd
	}
	return nil
}

func (x *ActionGetEvents) SetRangeStart(v *timestamppb.Timestamp) {
	x.xxx_hidden_RangeStart = v
}

func (x *ActionGetEvents) SetRangeEnd(v *timestamppb.Timestamp) {
	x.xxx_hidden_RangeEnd = v
}

func (x *ActionGetEvents) HasRangeStart() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RangeStart != nil
}

func (x *ActionGetEvents) HasRangeEnd() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RangeEnd != nil
}

func (x *ActionGetEvents) ClearRangeStart() {
	x.xxx_hidden_RangeStart = nil
}

func (x *ActionGetEvents) ClearRangeEnd() {
	x.xxx_hidden_RangeEnd = nil
}

type ActionGetEvents_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RangeStart *timestamppb.Timestamp
	RangeEnd   *timestamppb.Timestamp
}

func (b0 ActionGetEvents_builder) Build() *ActionGetEvents {
	m0 := &ActionGetEvents{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_RangeStart = b.RangeStart
	x.xxx_hidden_RangeEnd = b.RangeEnd
	return m0
}

// Sub-message containing get device info action specification
type ActionGetDeviceInfo struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionGetDeviceInfo) Reset() {
	*x = ActionGetDeviceInfo{}
	mi := &file_acquisition_shared_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionGetDeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGetDeviceInfo) ProtoMessage() {}

func (x *ActionGetDeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ActionGetDeviceInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ActionGetDeviceInfo_builder) Build() *ActionGetDeviceInfo {
	m0 := &ActionGetDeviceInfo{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Sub-message containing sync clock action specification
type ActionSyncClock struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionSyncClock) Reset() {
	*x = ActionSyncClock{}
	mi := &file_acquisition_shared_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionSyncClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSyncClock) ProtoMessage() {}

func (x *ActionSyncClock) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ActionSyncClock_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ActionSyncClock_builder) Build() *ActionSyncClock {
	m0 := &ActionSyncClock{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Sub-message containing set relay state action specification
type ActionSetRelayState struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionSetRelayState) Reset() {
	*x = ActionSetRelayState{}
	mi := &file_acquisition_shared_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionSetRelayState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSetRelayState) ProtoMessage() {}

func (x *ActionSetRelayState) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ActionSetRelayState_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ActionSetRelayState_builder) Build() *ActionSetRelayState {
	m0 := &ActionSetRelayState{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Sub-message containing set disconnector state action specification
type ActionSetDisconnectorState struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionSetDisconnectorState) Reset() {
	*x = ActionSetDisconnectorState{}
	mi := &file_acquisition_shared_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionSetDisconnectorState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSetDisconnectorState) ProtoMessage() {}

func (x *ActionSetDisconnectorState) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ActionSetDisconnectorState_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ActionSetDisconnectorState_builder) Build() *ActionSetDisconnectorState {
	m0 := &ActionSetDisconnectorState{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Sub-message containing get tou action specification
type ActionGetTou struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Passive     bool                   `protobuf:"varint,1,opt,name=passive"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ActionGetTou) Reset() {
	*x = ActionGetTou{}
	mi := &file_acquisition_shared_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionGetTou) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGetTou) ProtoMessage() {}

func (x *ActionGetTou) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActionGetTou) GetPassive() bool {
	if x != nil {
		return x.xxx_hidden_Passive
	}
	return false
}

func (x *ActionGetTou) SetPassive(v bool) {
	x.xxx_hidden_Passive = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ActionGetTou) HasPassive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ActionGetTou) ClearPassive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Passive = false
}

type ActionGetTou_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Passive *bool
}

func (b0 ActionGetTou_builder) Build() *ActionGetTou {
	m0 := &ActionGetTou{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Passive != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Passive = *b.Passive
	}
	return m0
}

// Sub-message containing set tou action specification
type ActionSetTou struct {
	state            protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Table *timeofuse.TimeOfUseTableSpec `protobuf:"bytes,1,opt,name=table"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ActionSetTou) Reset() {
	*x = ActionSetTou{}
	mi := &file_acquisition_shared_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionSetTou) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSetTou) ProtoMessage() {}

func (x *ActionSetTou) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActionSetTou) GetTable() *timeofuse.TimeOfUseTableSpec {
	if x != nil {
		return x.xxx_hidden_Table
	}
	return nil
}

func (x *ActionSetTou) SetTable(v *timeofuse.TimeOfUseTableSpec) {
	x.xxx_hidden_Table = v
}

func (x *ActionSetTou) HasTable() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Table != nil
}

func (x *ActionSetTou) ClearTable() {
	x.xxx_hidden_Table = nil
}

type ActionSetTou_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Table *timeofuse.TimeOfUseTableSpec
}

func (b0 ActionSetTou_builder) Build() *ActionSetTou {
	m0 := &ActionSetTou{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Table = b.Table
	return m0
}

// Sub-message containing set limiter action specification
type ActionSetLimiter struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionSetLimiter) Reset() {
	*x = ActionSetLimiter{}
	mi := &file_acquisition_shared_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionSetLimiter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSetLimiter) ProtoMessage() {}

func (x *ActionSetLimiter) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ActionSetLimiter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ActionSetLimiter_builder) Build() *ActionSetLimiter {
	m0 := &ActionSetLimiter{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Sub-message containing reset billing period action specification
type ActionResetBillingPeriod struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionResetBillingPeriod) Reset() {
	*x = ActionResetBillingPeriod{}
	mi := &file_acquisition_shared_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionResetBillingPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResetBillingPeriod) ProtoMessage() {}

func (x *ActionResetBillingPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ActionResetBillingPeriod_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ActionResetBillingPeriod_builder) Build() *ActionResetBillingPeriod {
	m0 := &ActionResetBillingPeriod{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Sub-message containing firmware update action specification
type ActionFwUpdate struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionFwUpdate) Reset() {
	*x = ActionFwUpdate{}
	mi := &file_acquisition_shared_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionFwUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionFwUpdate) ProtoMessage() {}

func (x *ActionFwUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ActionFwUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ActionFwUpdate_builder) Build() *ActionFwUpdate {
	m0 := &ActionFwUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Sub-message containing constraints for job actions.
type JobActionContraints struct {
	state                                protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_GetRegisterTypeName       map[string]string               `protobuf:"bytes,1,rep,name=get_register_type_name,json=getRegisterTypeName" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_GetRegisterTypeAttributes map[string]*common.ListOfString `protobuf:"bytes,2,rep,name=get_register_type_attributes,json=getRegisterTypeAttributes" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *JobActionContraints) Reset() {
	*x = JobActionContraints{}
	mi := &file_acquisition_shared_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobActionContraints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobActionContraints) ProtoMessage() {}

func (x *JobActionContraints) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobActionContraints) GetGetRegisterTypeName() map[string]string {
	if x != nil {
		return x.xxx_hidden_GetRegisterTypeName
	}
	return nil
}

func (x *JobActionContraints) GetGetRegisterTypeAttributes() map[string]*common.ListOfString {
	if x != nil {
		return x.xxx_hidden_GetRegisterTypeAttributes
	}
	return nil
}

func (x *JobActionContraints) SetGetRegisterTypeName(v map[string]string) {
	x.xxx_hidden_GetRegisterTypeName = v
}

func (x *JobActionContraints) SetGetRegisterTypeAttributes(v map[string]*common.ListOfString) {
	x.xxx_hidden_GetRegisterTypeAttributes = v
}

type JobActionContraints_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Contains all the register types & their names in the English language. For example: [gen]="Generic Register", [vqi]="Quality VQI Register"
	// Action: ACTION_TYPE_GET_REGISTER
	GetRegisterTypeName map[string]string
	// Contains all the register types & their attributes. For example: [gen]=["attribute1", "attribute2"], [vqi]=["attribute1", "attribute3"]
	// See JobActionAttributes for the attribute definitions.
	// Action: ACTION_TYPE_GET_REGISTER
	GetRegisterTypeAttributes map[string]*common.ListOfString
}

func (b0 JobActionContraints_builder) Build() *JobActionContraints {
	m0 := &JobActionContraints{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_GetRegisterTypeName = b.GetRegisterTypeName
	x.xxx_hidden_GetRegisterTypeAttributes = b.GetRegisterTypeAttributes
	return m0
}

// Sub-message containing job status info
type JobStatus struct {
	state                   protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Status       JobStatusCode            `protobuf:"varint,1,opt,name=status,enum=io.clbs.openhes.models.acquisition.JobStatusCode"`
	xxx_hidden_Code         JobErrorCode             `protobuf:"varint,2,opt,name=code,enum=io.clbs.openhes.models.acquisition.JobErrorCode"`
	xxx_hidden_Results      *[]*ActionResult         `protobuf:"bytes,3,rep,name=results"`
	xxx_hidden_StartedAt    *timestamppb.Timestamp   `protobuf:"bytes,4,opt,name=started_at,json=startedAt"`
	xxx_hidden_FinishedAt   *timestamppb.Timestamp   `protobuf:"bytes,5,opt,name=finished_at,json=finishedAt"`
	xxx_hidden_AttemptsDone int32                    `protobuf:"varint,6,opt,name=attempts_done,json=attemptsDone"`
	xxx_hidden_DeviceInfo   *DeviceInfo              `protobuf:"bytes,7,opt,name=device_info,json=deviceInfo"`
	xxx_hidden_QueueId      int64                    `protobuf:"varint,8,opt,name=queue_id,json=queueId"`
	xxx_hidden_ErrorMessage *common.FormattedMessage `protobuf:"bytes,9,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	mi := &file_acquisition_shared_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobStatus) GetStatus() JobStatusCode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Status
		}
	}
	return JobStatusCode_JOB_STATUS_QUEUED
}

func (x *JobStatus) GetCode() JobErrorCode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Code
		}
	}
	return JobErrorCode_JOB_ERROR_CODE_NONE
}

func (x *JobStatus) GetResults() []*ActionResult {
	if x != nil {
		if x.xxx_hidden_Results != nil {
			return *x.xxx_hidden_Results
		}
	}
	return nil
}

func (x *JobStatus) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_StartedAt
	}
	return nil
}

func (x *JobStatus) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_FinishedAt
	}
	return nil
}

func (x *JobStatus) GetAttemptsDone() int32 {
	if x != nil {
		return x.xxx_hidden_AttemptsDone
	}
	return 0
}

func (x *JobStatus) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.xxx_hidden_DeviceInfo
	}
	return nil
}

func (x *JobStatus) GetQueueId() int64 {
	if x != nil {
		return x.xxx_hidden_QueueId
	}
	return 0
}

func (x *JobStatus) GetErrorMessage() *common.FormattedMessage {
	if x != nil {
		return x.xxx_hidden_ErrorMessage
	}
	return nil
}

func (x *JobStatus) SetStatus(v JobStatusCode) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *JobStatus) SetCode(v JobErrorCode) {
	x.xxx_hidden_Code = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *JobStatus) SetResults(v []*ActionResult) {
	x.xxx_hidden_Results = &v
}

func (x *JobStatus) SetStartedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_StartedAt = v
}

func (x *JobStatus) SetFinishedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_FinishedAt = v
}

func (x *JobStatus) SetAttemptsDone(v int32) {
	x.xxx_hidden_AttemptsDone = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *JobStatus) SetDeviceInfo(v *DeviceInfo) {
	x.xxx_hidden_DeviceInfo = v
}

func (x *JobStatus) SetQueueId(v int64) {
	x.xxx_hidden_QueueId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *JobStatus) SetErrorMessage(v *common.FormattedMessage) {
	x.xxx_hidden_ErrorMessage = v
}

func (x *JobStatus) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobStatus) HasCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *JobStatus) HasStartedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StartedAt != nil
}

func (x *JobStatus) HasFinishedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FinishedAt != nil
}

func (x *JobStatus) HasAttemptsDone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *JobStatus) HasDeviceInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DeviceInfo != nil
}

func (x *JobStatus) HasQueueId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *JobStatus) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ErrorMessage != nil
}

func (x *JobStatus) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Status = JobStatusCode_JOB_STATUS_QUEUED
}

func (x *JobStatus) ClearCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Code = JobErrorCode_JOB_ERROR_CODE_NONE
}

func (x *JobStatus) ClearStartedAt() {
	x.xxx_hidden_StartedAt = nil
}

func (x *JobStatus) ClearFinishedAt() {
	x.xxx_hidden_FinishedAt = nil
}

func (x *JobStatus) ClearAttemptsDone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_AttemptsDone = 0
}

func (x *JobStatus) ClearDeviceInfo() {
	x.xxx_hidden_DeviceInfo = nil
}

func (x *JobStatus) ClearQueueId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_QueueId = 0
}

func (x *JobStatus) ClearErrorMessage() {
	x.xxx_hidden_ErrorMessage = nil
}

type JobStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status       *JobStatusCode
	Code         *JobErrorCode
	Results      []*ActionResult
	StartedAt    *timestamppb.Timestamp
	FinishedAt   *timestamppb.Timestamp
	AttemptsDone *int32
	DeviceInfo   *DeviceInfo
	QueueId      *int64
	ErrorMessage *common.FormattedMessage
}

func (b0 JobStatus_builder) Build() *JobStatus {
	m0 := &JobStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Status = *b.Status
	}
	if b.Code != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Code = *b.Code
	}
	x.xxx_hidden_Results = &b.Results
	x.xxx_hidden_StartedAt = b.StartedAt
	x.xxx_hidden_FinishedAt = b.FinishedAt
	if b.AttemptsDone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_AttemptsDone = *b.AttemptsDone
	}
	x.xxx_hidden_DeviceInfo = b.DeviceInfo
	if b.QueueId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_QueueId = *b.QueueId
	}
	x.xxx_hidden_ErrorMessage = b.ErrorMessage
	return m0
}

// Sub-message containing job start request for single device
type StartJobData struct {
	state                       protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_DeviceAttributes map[string]*common.FieldValue `protobuf:"bytes,1,rep,name=device_attributes,json=deviceAttributes" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_JobId            *string                       `protobuf:"bytes,2,opt,name=job_id,json=jobId"`
	xxx_hidden_JobSettings      *JobSettings                  `protobuf:"bytes,3,opt,name=job_settings,json=jobSettings"`
	xxx_hidden_JobActions       *[]*JobAction                 `protobuf:"bytes,4,rep,name=job_actions,json=jobActions"`
	xxx_hidden_AppProtocol      ApplicationProtocol           `protobuf:"varint,5,opt,name=app_protocol,json=appProtocol,enum=io.clbs.openhes.models.acquisition.ApplicationProtocol"`
	xxx_hidden_Timezone         *string                       `protobuf:"bytes,6,opt,name=timezone"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *StartJobData) Reset() {
	*x = StartJobData{}
	mi := &file_acquisition_shared_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartJobData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartJobData) ProtoMessage() {}

func (x *StartJobData) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StartJobData) GetDeviceAttributes() map[string]*common.FieldValue {
	if x != nil {
		return x.xxx_hidden_DeviceAttributes
	}
	return nil
}

func (x *StartJobData) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *StartJobData) GetJobSettings() *JobSettings {
	if x != nil {
		return x.xxx_hidden_JobSettings
	}
	return nil
}

func (x *StartJobData) GetJobActions() []*JobAction {
	if x != nil {
		if x.xxx_hidden_JobActions != nil {
			return *x.xxx_hidden_JobActions
		}
	}
	return nil
}

func (x *StartJobData) GetAppProtocol() ApplicationProtocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_AppProtocol
		}
	}
	return ApplicationProtocol_APPPROTO_IEC_62056_21
}

func (x *StartJobData) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *StartJobData) SetDeviceAttributes(v map[string]*common.FieldValue) {
	x.xxx_hidden_DeviceAttributes = v
}

func (x *StartJobData) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *StartJobData) SetJobSettings(v *JobSettings) {
	x.xxx_hidden_JobSettings = v
}

func (x *StartJobData) SetJobActions(v []*JobAction) {
	x.xxx_hidden_JobActions = &v
}

func (x *StartJobData) SetAppProtocol(v ApplicationProtocol) {
	x.xxx_hidden_AppProtocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *StartJobData) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *StartJobData) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StartJobData) HasJobSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_JobSettings != nil
}

func (x *StartJobData) HasAppProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *StartJobData) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *StartJobData) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_JobId = nil
}

func (x *StartJobData) ClearJobSettings() {
	x.xxx_hidden_JobSettings = nil
}

func (x *StartJobData) ClearAppProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_AppProtocol = ApplicationProtocol_APPPROTO_IEC_62056_21
}

func (x *StartJobData) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Timezone = nil
}

type StartJobData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DeviceAttributes map[string]*common.FieldValue
	JobId            *string
	JobSettings      *JobSettings
	JobActions       []*JobAction
	AppProtocol      *ApplicationProtocol
	Timezone         *string
}

func (b0 StartJobData_builder) Build() *StartJobData {
	m0 := &StartJobData{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DeviceAttributes = b.DeviceAttributes
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_JobId = b.JobId
	}
	x.xxx_hidden_JobSettings = b.JobSettings
	x.xxx_hidden_JobActions = &b.JobActions
	if b.AppProtocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_AppProtocol = *b.AppProtocol
	}
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Timezone = b.Timezone
	}
	return m0
}

// Taskmaster -> Driver cancel job request message
type CancelJobRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId       *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CancelJobRequest) Reset() {
	*x = CancelJobRequest{}
	mi := &file_acquisition_shared_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobRequest) ProtoMessage() {}

func (x *CancelJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CancelJobRequest) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *CancelJobRequest) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *CancelJobRequest) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CancelJobRequest) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

type CancelJobRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId *string
}

func (b0 CancelJobRequest_builder) Build() *CancelJobRequest {
	m0 := &CancelJobRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_JobId = b.JobId
	}
	return m0
}

type DeviceConfigurationRegisterSpec struct {
	state                   protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_DriverType   *string                         `protobuf:"bytes,1,opt,name=driver_type,json=driverType"`
	xxx_hidden_RegisterType DeviceConfigurationRegisterKind `protobuf:"varint,2,opt,name=register_type,json=registerType,enum=io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterKind"`
	xxx_hidden_Attributes   map[string]*common.FieldValue   `protobuf:"bytes,3,rep,name=attributes" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_DataType     common.FieldDataType            `protobuf:"varint,4,opt,name=data_type,json=dataType,enum=io.clbs.openhes.models.common.FieldDataType"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DeviceConfigurationRegisterSpec) Reset() {
	*x = DeviceConfigurationRegisterSpec{}
	mi := &file_acquisition_shared_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceConfigurationRegisterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConfigurationRegisterSpec) ProtoMessage() {}

func (x *DeviceConfigurationRegisterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceConfigurationRegisterSpec) GetDriverType() string {
	if x != nil {
		if x.xxx_hidden_DriverType != nil {
			return *x.xxx_hidden_DriverType
		}
		return ""
	}
	return ""
}

func (x *DeviceConfigurationRegisterSpec) GetRegisterType() DeviceConfigurationRegisterKind {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_RegisterType
		}
	}
	return DeviceConfigurationRegisterKind_Register
}

func (x *DeviceConfigurationRegisterSpec) GetAttributes() map[string]*common.FieldValue {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *DeviceConfigurationRegisterSpec) GetDataType() common.FieldDataType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_DataType
		}
	}
	return common.FieldDataType(0)
}

func (x *DeviceConfigurationRegisterSpec) SetDriverType(v string) {
	x.xxx_hidden_DriverType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeviceConfigurationRegisterSpec) SetRegisterType(v DeviceConfigurationRegisterKind) {
	x.xxx_hidden_RegisterType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeviceConfigurationRegisterSpec) SetAttributes(v map[string]*common.FieldValue) {
	x.xxx_hidden_Attributes = v
}

func (x *DeviceConfigurationRegisterSpec) SetDataType(v common.FieldDataType) {
	x.xxx_hidden_DataType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeviceConfigurationRegisterSpec) HasDriverType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeviceConfigurationRegisterSpec) HasRegisterType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceConfigurationRegisterSpec) HasDataType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeviceConfigurationRegisterSpec) ClearDriverType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DriverType = nil
}

func (x *DeviceConfigurationRegisterSpec) ClearRegisterType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RegisterType = DeviceConfigurationRegisterKind_Register
}

func (x *DeviceConfigurationRegisterSpec) ClearDataType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_DataType = common.FieldDataType_TEXT
}

type DeviceConfigurationRegisterSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DriverType   *string
	RegisterType *DeviceConfigurationRegisterKind
	Attributes   map[string]*common.FieldValue
	DataType     *common.FieldDataType
}

func (b0 DeviceConfigurationRegisterSpec_builder) Build() *DeviceConfigurationRegisterSpec {
	m0 := &DeviceConfigurationRegisterSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DriverType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_DriverType = b.DriverType
	}
	if b.RegisterType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_RegisterType = *b.RegisterType
	}
	x.xxx_hidden_Attributes = b.Attributes
	if b.DataType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_DataType = *b.DataType
	}
	return m0
}

// Addon
type DeviceRegister struct {
	state                       protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_RegisterId       int64                            `protobuf:"varint,1,opt,name=register_id,json=registerId"`
	xxx_hidden_PublicRegisterId *string                          `protobuf:"bytes,2,opt,name=public_register_id,json=publicRegisterId"`
	xxx_hidden_Spec             *DeviceConfigurationRegisterSpec `protobuf:"bytes,3,opt,name=spec"`
	xxx_hidden_VariableName     []string                         `protobuf:"bytes,4,rep,name=variable_name,json=variableName"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *DeviceRegister) Reset() {
	*x = DeviceRegister{}
	mi := &file_acquisition_shared_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceRegister) ProtoMessage() {}

func (x *DeviceRegister) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceRegister) GetRegisterId() int64 {
	if x != nil {
		return x.xxx_hidden_RegisterId
	}
	return 0
}

func (x *DeviceRegister) GetPublicRegisterId() string {
	if x != nil {
		if x.xxx_hidden_PublicRegisterId != nil {
			return *x.xxx_hidden_PublicRegisterId
		}
		return ""
	}
	return ""
}

func (x *DeviceRegister) GetSpec() *DeviceConfigurationRegisterSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *DeviceRegister) GetVariableName() []string {
	if x != nil {
		return x.xxx_hidden_VariableName
	}
	return nil
}

func (x *DeviceRegister) SetRegisterId(v int64) {
	x.xxx_hidden_RegisterId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeviceRegister) SetPublicRegisterId(v string) {
	x.xxx_hidden_PublicRegisterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeviceRegister) SetSpec(v *DeviceConfigurationRegisterSpec) {
	x.xxx_hidden_Spec = v
}

func (x *DeviceRegister) SetVariableName(v []string) {
	x.xxx_hidden_VariableName = v
}

func (x *DeviceRegister) HasRegisterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeviceRegister) HasPublicRegisterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceRegister) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *DeviceRegister) ClearRegisterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RegisterId = 0
}

func (x *DeviceRegister) ClearPublicRegisterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PublicRegisterId = nil
}

func (x *DeviceRegister) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

type DeviceRegister_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RegisterId       *int64
	PublicRegisterId *string
	Spec             *DeviceConfigurationRegisterSpec
	VariableName     []string
}

func (b0 DeviceRegister_builder) Build() *DeviceRegister {
	m0 := &DeviceRegister{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RegisterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_RegisterId = *b.RegisterId
	}
	if b.PublicRegisterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_PublicRegisterId = b.PublicRegisterId
	}
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_VariableName = b.VariableName
	return m0
}

// Addon
type DeviceConnectionInfo struct {
	state                        protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_CommunicationUnit *ConnectionInfo               `protobuf:"bytes,1,opt,name=communication_unit,json=communicationUnit"`
	xxx_hidden_AppProtocol       ApplicationProtocol           `protobuf:"varint,2,opt,name=app_protocol,json=appProtocol,enum=io.clbs.openhes.models.acquisition.ApplicationProtocol"`
	xxx_hidden_DeviceAttributes  map[string]*common.FieldValue `protobuf:"bytes,3,rep,name=device_attributes,json=deviceAttributes" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Timezone          *string                       `protobuf:"bytes,4,opt,name=timezone"`
	xxx_hidden_DriverType        *string                       `protobuf:"bytes,5,opt,name=driver_type,json=driverType"`
	xxx_hidden_DriverVersion     *string                       `protobuf:"bytes,7,opt,name=driver_version,json=driverVersion"`
	xxx_hidden_Registers         *[]*DeviceRegister            `protobuf:"bytes,8,rep,name=registers"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *DeviceConnectionInfo) Reset() {
	*x = DeviceConnectionInfo{}
	mi := &file_acquisition_shared_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConnectionInfo) ProtoMessage() {}

func (x *DeviceConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceConnectionInfo) GetCommunicationUnit() *ConnectionInfo {
	if x != nil {
		return x.xxx_hidden_CommunicationUnit
	}
	return nil
}

func (x *DeviceConnectionInfo) GetAppProtocol() ApplicationProtocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_AppProtocol
		}
	}
	return ApplicationProtocol_APPPROTO_IEC_62056_21
}

func (x *DeviceConnectionInfo) GetDeviceAttributes() map[string]*common.FieldValue {
	if x != nil {
		return x.xxx_hidden_DeviceAttributes
	}
	return nil
}

func (x *DeviceConnectionInfo) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *DeviceConnectionInfo) GetDriverType() string {
	if x != nil {
		if x.xxx_hidden_DriverType != nil {
			return *x.xxx_hidden_DriverType
		}
		return ""
	}
	return ""
}

func (x *DeviceConnectionInfo) GetDriverVersion() string {
	if x != nil {
		if x.xxx_hidden_DriverVersion != nil {
			return *x.xxx_hidden_DriverVersion
		}
		return ""
	}
	return ""
}

func (x *DeviceConnectionInfo) GetRegisters() []*DeviceRegister {
	if x != nil {
		if x.xxx_hidden_Registers != nil {
			return *x.xxx_hidden_Registers
		}
	}
	return nil
}

func (x *DeviceConnectionInfo) SetCommunicationUnit(v *ConnectionInfo) {
	x.xxx_hidden_CommunicationUnit = v
}

func (x *DeviceConnectionInfo) SetAppProtocol(v ApplicationProtocol) {
	x.xxx_hidden_AppProtocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *DeviceConnectionInfo) SetDeviceAttributes(v map[string]*common.FieldValue) {
	x.xxx_hidden_DeviceAttributes = v
}

func (x *DeviceConnectionInfo) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *DeviceConnectionInfo) SetDriverType(v string) {
	x.xxx_hidden_DriverType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *DeviceConnectionInfo) SetDriverVersion(v string) {
	x.xxx_hidden_DriverVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *DeviceConnectionInfo) SetRegisters(v []*DeviceRegister) {
	x.xxx_hidden_Registers = &v
}

func (x *DeviceConnectionInfo) HasCommunicationUnit() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CommunicationUnit != nil
}

func (x *DeviceConnectionInfo) HasAppProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceConnectionInfo) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeviceConnectionInfo) HasDriverType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DeviceConnectionInfo) HasDriverVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DeviceConnectionInfo) ClearCommunicationUnit() {
	x.xxx_hidden_CommunicationUnit = nil
}

func (x *DeviceConnectionInfo) ClearAppProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AppProtocol = ApplicationProtocol_APPPROTO_IEC_62056_21
}

func (x *DeviceConnectionInfo) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Timezone = nil
}

func (x *DeviceConnectionInfo) ClearDriverType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_DriverType = nil
}

func (x *DeviceConnectionInfo) ClearDriverVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_DriverVersion = nil
}

type DeviceConnectionInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CommunicationUnit *ConnectionInfo
	AppProtocol       *ApplicationProtocol
	DeviceAttributes  map[string]*common.FieldValue
	Timezone          *string
	DriverType        *string
	DriverVersion     *string
	Registers         []*DeviceRegister
}

func (b0 DeviceConnectionInfo_builder) Build() *DeviceConnectionInfo {
	m0 := &DeviceConnectionInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CommunicationUnit = b.CommunicationUnit
	if b.AppProtocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_AppProtocol = *b.AppProtocol
	}
	x.xxx_hidden_DeviceAttributes = b.DeviceAttributes
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Timezone = b.Timezone
	}
	if b.DriverType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_DriverType = b.DriverType
	}
	if b.DriverVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_DriverVersion = b.DriverVersion
	}
	x.xxx_hidden_Registers = &b.Registers
	return m0
}

// Addon for DB
type ListOfModemInfo struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items       *[]*ModemInfo          `protobuf:"bytes,1,rep,name=items"`
	xxx_hidden_TotalCount  int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListOfModemInfo) Reset() {
	*x = ListOfModemInfo{}
	mi := &file_acquisition_shared_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfModemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfModemInfo) ProtoMessage() {}

func (x *ListOfModemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfModemInfo) GetItems() []*ModemInfo {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListOfModemInfo) GetTotalCount() int32 {
	if x != nil {
		return x.xxx_hidden_TotalCount
	}
	return 0
}

func (x *ListOfModemInfo) SetItems(v []*ModemInfo) {
	x.xxx_hidden_Items = &v
}

func (x *ListOfModemInfo) SetTotalCount(v int32) {
	x.xxx_hidden_TotalCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListOfModemInfo) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListOfModemInfo) ClearTotalCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalCount = 0
}

type ListOfModemInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items      []*ModemInfo
	TotalCount *int32
}

func (b0 ListOfModemInfo_builder) Build() *ListOfModemInfo {
	m0 := &ListOfModemInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	if b.TotalCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_TotalCount = *b.TotalCount
	}
	return m0
}

// Addon for DB
type ListOfConnectionInfo struct {
	state                  protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Items       *[]*DeviceConnectionInfo `protobuf:"bytes,1,rep,name=items"`
	xxx_hidden_TotalCount  int32                    `protobuf:"varint,2,opt,name=total_count,json=totalCount"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListOfConnectionInfo) Reset() {
	*x = ListOfConnectionInfo{}
	mi := &file_acquisition_shared_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfConnectionInfo) ProtoMessage() {}

func (x *ListOfConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfConnectionInfo) GetItems() []*DeviceConnectionInfo {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListOfConnectionInfo) GetTotalCount() int32 {
	if x != nil {
		return x.xxx_hidden_TotalCount
	}
	return 0
}

func (x *ListOfConnectionInfo) SetItems(v []*DeviceConnectionInfo) {
	x.xxx_hidden_Items = &v
}

func (x *ListOfConnectionInfo) SetTotalCount(v int32) {
	x.xxx_hidden_TotalCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListOfConnectionInfo) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListOfConnectionInfo) ClearTotalCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalCount = 0
}

type ListOfConnectionInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items      []*DeviceConnectionInfo
	TotalCount *int32
}

func (b0 ListOfConnectionInfo_builder) Build() *ListOfConnectionInfo {
	m0 := &ListOfConnectionInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	if b.TotalCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_TotalCount = *b.TotalCount
	}
	return m0
}

// Addon for DB
type FieldValuesList struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*common.FieldValues `protobuf:"bytes,1,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FieldValuesList) Reset() {
	*x = FieldValuesList{}
	mi := &file_acquisition_shared_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldValuesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldValuesList) ProtoMessage() {}

func (x *FieldValuesList) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FieldValuesList) GetItems() []*common.FieldValues {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *FieldValuesList) SetItems(v []*common.FieldValues) {
	x.xxx_hidden_Items = &v
}

type FieldValuesList_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*common.FieldValues
}

func (b0 FieldValuesList_builder) Build() *FieldValuesList {
	m0 := &FieldValuesList{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

// Generic attribute selector using field values
type AttributeSelector struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_FieldId     *string                   `protobuf:"bytes,1,opt,name=field_id,json=fieldId"`
	xxx_hidden_Operator    common.FilterOperator     `protobuf:"varint,2,opt,name=operator,enum=io.clbs.openhes.models.common.FilterOperator"`
	xxx_hidden_DataType    common.FieldDataType      `protobuf:"varint,3,opt,name=data_type,json=dataType,enum=io.clbs.openhes.models.common.FieldDataType"`
	xxx_hidden_Text        []string                  `protobuf:"bytes,4,rep,name=text"`
	xxx_hidden_Integer     []int64                   `protobuf:"zigzag64,5,rep,packed,name=integer"`
	xxx_hidden_Number      []float64                 `protobuf:"fixed64,6,rep,packed,name=number"`
	xxx_hidden_Boolean     []bool                    `protobuf:"varint,7,rep,packed,name=boolean"`
	xxx_hidden_Date        *[]*timestamppb.Timestamp `protobuf:"bytes,8,rep,name=date"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AttributeSelector) Reset() {
	*x = AttributeSelector{}
	mi := &file_acquisition_shared_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeSelector) ProtoMessage() {}

func (x *AttributeSelector) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AttributeSelector) GetFieldId() string {
	if x != nil {
		if x.xxx_hidden_FieldId != nil {
			return *x.xxx_hidden_FieldId
		}
		return ""
	}
	return ""
}

func (x *AttributeSelector) GetOperator() common.FilterOperator {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Operator
		}
	}
	return common.FilterOperator(0)
}

func (x *AttributeSelector) GetDataType() common.FieldDataType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_DataType
		}
	}
	return common.FieldDataType(0)
}

func (x *AttributeSelector) GetText() []string {
	if x != nil {
		return x.xxx_hidden_Text
	}
	return nil
}

func (x *AttributeSelector) GetInteger() []int64 {
	if x != nil {
		return x.xxx_hidden_Integer
	}
	return nil
}

func (x *AttributeSelector) GetNumber() []float64 {
	if x != nil {
		return x.xxx_hidden_Number
	}
	return nil
}

func (x *AttributeSelector) GetBoolean() []bool {
	if x != nil {
		return x.xxx_hidden_Boolean
	}
	return nil
}

func (x *AttributeSelector) GetDate() []*timestamppb.Timestamp {
	if x != nil {
		if x.xxx_hidden_Date != nil {
			return *x.xxx_hidden_Date
		}
	}
	return nil
}

func (x *AttributeSelector) SetFieldId(v string) {
	x.xxx_hidden_FieldId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *AttributeSelector) SetOperator(v common.FilterOperator) {
	x.xxx_hidden_Operator = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *AttributeSelector) SetDataType(v common.FieldDataType) {
	x.xxx_hidden_DataType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *AttributeSelector) SetText(v []string) {
	x.xxx_hidden_Text = v
}

func (x *AttributeSelector) SetInteger(v []int64) {
	x.xxx_hidden_Integer = v
}

func (x *AttributeSelector) SetNumber(v []float64) {
	x.xxx_hidden_Number = v
}

func (x *AttributeSelector) SetBoolean(v []bool) {
	x.xxx_hidden_Boolean = v
}

func (x *AttributeSelector) SetDate(v []*timestamppb.Timestamp) {
	x.xxx_hidden_Date = &v
}

func (x *AttributeSelector) HasFieldId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AttributeSelector) HasOperator() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AttributeSelector) HasDataType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AttributeSelector) ClearFieldId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FieldId = nil
}

func (x *AttributeSelector) ClearOperator() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Operator = common.FilterOperator_EQUAL
}

func (x *AttributeSelector) ClearDataType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DataType = common.FieldDataType_TEXT
}

type AttributeSelector_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FieldId  *string
	Operator *common.FilterOperator
	DataType *common.FieldDataType
	Text     []string
	Integer  []int64
	Number   []float64
	Boolean  []bool
	Date     []*timestamppb.Timestamp
}

func (b0 AttributeSelector_builder) Build() *AttributeSelector {
	m0 := &AttributeSelector{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FieldId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_FieldId = b.FieldId
	}
	if b.Operator != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_Operator = *b.Operator
	}
	if b.DataType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_DataType = *b.DataType
	}
	x.xxx_hidden_Text = b.Text
	x.xxx_hidden_Integer = b.Integer
	x.xxx_hidden_Number = b.Number
	x.xxx_hidden_Boolean = b.Boolean
	x.xxx_hidden_Date = &b.Date
	return m0
}

// Generic attribute selector using field values for devices
type DeviceAttributeSelector struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Attributes *[]*AttributeSelector  `protobuf:"bytes,2,rep,name=attributes"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DeviceAttributeSelector) Reset() {
	*x = DeviceAttributeSelector{}
	mi := &file_acquisition_shared_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceAttributeSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceAttributeSelector) ProtoMessage() {}

func (x *DeviceAttributeSelector) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceAttributeSelector) GetAttributes() []*AttributeSelector {
	if x != nil {
		if x.xxx_hidden_Attributes != nil {
			return *x.xxx_hidden_Attributes
		}
	}
	return nil
}

func (x *DeviceAttributeSelector) SetAttributes(v []*AttributeSelector) {
	x.xxx_hidden_Attributes = &v
}

type DeviceAttributeSelector_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Attributes []*AttributeSelector
}

func (b0 DeviceAttributeSelector_builder) Build() *DeviceAttributeSelector {
	m0 := &DeviceAttributeSelector{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Attributes = &b.Attributes
	return m0
}

// Generic attribute selector using field values for devices
type CommunicationUnitAttributeSelector struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LinkProtocol DataLinkProtocol       `protobuf:"varint,1,opt,name=link_protocol,json=linkProtocol,enum=io.clbs.openhes.models.acquisition.DataLinkProtocol"`
	xxx_hidden_Attributes   *[]*AttributeSelector  `protobuf:"bytes,2,rep,name=attributes"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CommunicationUnitAttributeSelector) Reset() {
	*x = CommunicationUnitAttributeSelector{}
	mi := &file_acquisition_shared_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommunicationUnitAttributeSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunicationUnitAttributeSelector) ProtoMessage() {}

func (x *CommunicationUnitAttributeSelector) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommunicationUnitAttributeSelector) GetLinkProtocol() DataLinkProtocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_LinkProtocol
		}
	}
	return DataLinkProtocol_LINKPROTO_IEC_62056_21
}

func (x *CommunicationUnitAttributeSelector) GetAttributes() []*AttributeSelector {
	if x != nil {
		if x.xxx_hidden_Attributes != nil {
			return *x.xxx_hidden_Attributes
		}
	}
	return nil
}

func (x *CommunicationUnitAttributeSelector) SetLinkProtocol(v DataLinkProtocol) {
	x.xxx_hidden_LinkProtocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *CommunicationUnitAttributeSelector) SetAttributes(v []*AttributeSelector) {
	x.xxx_hidden_Attributes = &v
}

func (x *CommunicationUnitAttributeSelector) HasLinkProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CommunicationUnitAttributeSelector) ClearLinkProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_LinkProtocol = DataLinkProtocol_LINKPROTO_IEC_62056_21
}

type CommunicationUnitAttributeSelector_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LinkProtocol *DataLinkProtocol
	Attributes   []*AttributeSelector
}

func (b0 CommunicationUnitAttributeSelector_builder) Build() *CommunicationUnitAttributeSelector {
	m0 := &CommunicationUnitAttributeSelector{}
	b, x := &b0, m0
	_, _ = b, x
	if b.LinkProtocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_LinkProtocol = *b.LinkProtocol
	}
	x.xxx_hidden_Attributes = &b.Attributes
	return m0
}

// Defines the result of a single action.
type ActionResult struct {
	state                   protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_ActionId     *string                  `protobuf:"bytes,1,opt,name=action_id,json=actionId"`
	xxx_hidden_Status       ActionResultCode         `protobuf:"varint,2,opt,name=status,enum=io.clbs.openhes.models.acquisition.ActionResultCode"`
	xxx_hidden_Data         *ActionData              `protobuf:"bytes,3,opt,name=data"`
	xxx_hidden_RegisterId   *string                  `protobuf:"bytes,4,opt,name=register_id,json=registerId"`
	xxx_hidden_VariableName []string                 `protobuf:"bytes,5,rep,name=variable_name,json=variableName"`
	xxx_hidden_ErrorMessage *common.FormattedMessage `protobuf:"bytes,6,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ActionResult) Reset() {
	*x = ActionResult{}
	mi := &file_acquisition_shared_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResult) ProtoMessage() {}

func (x *ActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActionResult) GetActionId() string {
	if x != nil {
		if x.xxx_hidden_ActionId != nil {
			return *x.xxx_hidden_ActionId
		}
		return ""
	}
	return ""
}

func (x *ActionResult) GetStatus() ActionResultCode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Status
		}
	}
	return ActionResultCode_ERROR_CODE_ACTION_OK
}

func (x *ActionResult) GetData() *ActionData {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *ActionResult) GetRegisterId() string {
	if x != nil {
		if x.xxx_hidden_RegisterId != nil {
			return *x.xxx_hidden_RegisterId
		}
		return ""
	}
	return ""
}

func (x *ActionResult) GetVariableName() []string {
	if x != nil {
		return x.xxx_hidden_VariableName
	}
	return nil
}

func (x *ActionResult) GetErrorMessage() *common.FormattedMessage {
	if x != nil {
		return x.xxx_hidden_ErrorMessage
	}
	return nil
}

func (x *ActionResult) SetActionId(v string) {
	x.xxx_hidden_ActionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *ActionResult) SetStatus(v ActionResultCode) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *ActionResult) SetData(v *ActionData) {
	x.xxx_hidden_Data = v
}

func (x *ActionResult) SetRegisterId(v string) {
	x.xxx_hidden_RegisterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *ActionResult) SetVariableName(v []string) {
	x.xxx_hidden_VariableName = v
}

func (x *ActionResult) SetErrorMessage(v *common.FormattedMessage) {
	x.xxx_hidden_ErrorMessage = v
}

func (x *ActionResult) HasActionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ActionResult) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ActionResult) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *ActionResult) HasRegisterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ActionResult) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ErrorMessage != nil
}

func (x *ActionResult) ClearActionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ActionId = nil
}

func (x *ActionResult) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = ActionResultCode_ERROR_CODE_ACTION_OK
}

func (x *ActionResult) ClearData() {
	x.xxx_hidden_Data = nil
}

func (x *ActionResult) ClearRegisterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_RegisterId = nil
}

func (x *ActionResult) ClearErrorMessage() {
	x.xxx_hidden_ErrorMessage = nil
}

type ActionResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ActionId     *string
	Status       *ActionResultCode
	Data         *ActionData
	RegisterId   *string
	VariableName []string
	ErrorMessage *common.FormattedMessage
}

func (b0 ActionResult_builder) Build() *ActionResult {
	m0 := &ActionResult{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ActionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_ActionId = b.ActionId
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Status = *b.Status
	}
	x.xxx_hidden_Data = b.Data
	if b.RegisterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_RegisterId = b.RegisterId
	}
	x.xxx_hidden_VariableName = b.VariableName
	x.xxx_hidden_ErrorMessage = b.ErrorMessage
	return m0
}

// Taskmaster -> Dataproxy job/action progress update message
type JobEventData struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId       []byte                 `protobuf:"bytes,1,opt,name=job_id,json=jobId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *JobEventData) Reset() {
	*x = JobEventData{}
	mi := &file_acquisition_shared_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEventData) ProtoMessage() {}

func (x *JobEventData) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobEventData) GetJobId() []byte {
	if x != nil {
		return x.xxx_hidden_JobId
	}
	return nil
}

func (x *JobEventData) SetJobId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_JobId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *JobEventData) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobEventData) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

type JobEventData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId []byte
}

func (b0 JobEventData_builder) Build() *JobEventData {
	m0 := &JobEventData{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_JobId = b.JobId
	}
	return m0
}

// Sub-message - the device specification.
type DeviceSpec struct {
	state                            protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_DctId                 *string                     `protobuf:"bytes,1,opt,name=dct_id,json=dctId"`
	xxx_hidden_ExternalId            *string                     `protobuf:"bytes,2,opt,name=external_id,json=externalId"`
	xxx_hidden_CommunicationUnitLink *[]*DeviceCommunicationUnit `protobuf:"bytes,3,rep,name=communication_unit_link,json=communicationUnitLink"`
	xxx_hidden_Timezone              *string                     `protobuf:"bytes,4,opt,name=timezone"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *DeviceSpec) Reset() {
	*x = DeviceSpec{}
	mi := &file_acquisition_shared_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceSpec) ProtoMessage() {}

func (x *DeviceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceSpec) GetDctId() string {
	if x != nil {
		if x.xxx_hidden_DctId != nil {
			return *x.xxx_hidden_DctId
		}
		return ""
	}
	return ""
}

func (x *DeviceSpec) GetExternalId() string {
	if x != nil {
		if x.xxx_hidden_ExternalId != nil {
			return *x.xxx_hidden_ExternalId
		}
		return ""
	}
	return ""
}

func (x *DeviceSpec) GetCommunicationUnitLink() []*DeviceCommunicationUnit {
	if x != nil {
		if x.xxx_hidden_CommunicationUnitLink != nil {
			return *x.xxx_hidden_CommunicationUnitLink
		}
	}
	return nil
}

func (x *DeviceSpec) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *DeviceSpec) SetDctId(v string) {
	x.xxx_hidden_DctId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeviceSpec) SetExternalId(v string) {
	x.xxx_hidden_ExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeviceSpec) SetCommunicationUnitLink(v []*DeviceCommunicationUnit) {
	x.xxx_hidden_CommunicationUnitLink = &v
}

func (x *DeviceSpec) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DeviceSpec) HasDctId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeviceSpec) HasExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceSpec) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeviceSpec) ClearDctId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DctId = nil
}

func (x *DeviceSpec) ClearExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ExternalId = nil
}

func (x *DeviceSpec) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Timezone = nil
}

type DeviceSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// @gqltype: UUID
	DctId                 *string
	ExternalId            *string
	CommunicationUnitLink []*DeviceCommunicationUnit
	Timezone              *string
}

func (b0 DeviceSpec_builder) Build() *DeviceSpec {
	m0 := &DeviceSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DctId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_DctId = b.DctId
	}
	if b.ExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ExternalId = b.ExternalId
	}
	x.xxx_hidden_CommunicationUnitLink = &b.CommunicationUnitLink
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Timezone = b.Timezone
	}
	return m0
}

type DeviceStatus struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Info        *DeviceInfo            `protobuf:"bytes,1,opt,name=info"`
	xxx_hidden_DriverType  *string                `protobuf:"bytes,2,opt,name=driver_type,json=driverType"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeviceStatus) Reset() {
	*x = DeviceStatus{}
	mi := &file_acquisition_shared_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceStatus) ProtoMessage() {}

func (x *DeviceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceStatus) GetInfo() *DeviceInfo {
	if x != nil {
		return x.xxx_hidden_Info
	}
	return nil
}

func (x *DeviceStatus) GetDriverType() string {
	if x != nil {
		if x.xxx_hidden_DriverType != nil {
			return *x.xxx_hidden_DriverType
		}
		return ""
	}
	return ""
}

func (x *DeviceStatus) SetInfo(v *DeviceInfo) {
	x.xxx_hidden_Info = v
}

func (x *DeviceStatus) SetDriverType(v string) {
	x.xxx_hidden_DriverType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DeviceStatus) HasInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Info != nil
}

func (x *DeviceStatus) HasDriverType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceStatus) ClearInfo() {
	x.xxx_hidden_Info = nil
}

func (x *DeviceStatus) ClearDriverType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DriverType = nil
}

type DeviceStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Info       *DeviceInfo
	DriverType *string
}

func (b0 DeviceStatus_builder) Build() *DeviceStatus {
	m0 := &DeviceStatus{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Info = b.Info
	if b.DriverType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_DriverType = b.DriverType
	}
	return m0
}

type DeviceCommunicationUnit struct {
	state                          protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_CommunicationUnitId *string                       `protobuf:"bytes,1,opt,name=communication_unit_id,json=communicationUnitId"`
	xxx_hidden_AppProtocol         ApplicationProtocol           `protobuf:"varint,2,opt,name=app_protocol,json=appProtocol,enum=io.clbs.openhes.models.acquisition.ApplicationProtocol"`
	xxx_hidden_Attributes          map[string]*common.FieldValue `protobuf:"bytes,3,rep,name=attributes" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *DeviceCommunicationUnit) Reset() {
	*x = DeviceCommunicationUnit{}
	mi := &file_acquisition_shared_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceCommunicationUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCommunicationUnit) ProtoMessage() {}

func (x *DeviceCommunicationUnit) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeviceCommunicationUnit) GetCommunicationUnitId() string {
	if x != nil {
		if x.xxx_hidden_CommunicationUnitId != nil {
			return *x.xxx_hidden_CommunicationUnitId
		}
		return ""
	}
	return ""
}

func (x *DeviceCommunicationUnit) GetAppProtocol() ApplicationProtocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_AppProtocol
		}
	}
	return ApplicationProtocol_APPPROTO_IEC_62056_21
}

func (x *DeviceCommunicationUnit) GetAttributes() map[string]*common.FieldValue {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *DeviceCommunicationUnit) SetCommunicationUnitId(v string) {
	x.xxx_hidden_CommunicationUnitId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *DeviceCommunicationUnit) SetAppProtocol(v ApplicationProtocol) {
	x.xxx_hidden_AppProtocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *DeviceCommunicationUnit) SetAttributes(v map[string]*common.FieldValue) {
	x.xxx_hidden_Attributes = v
}

func (x *DeviceCommunicationUnit) HasCommunicationUnitId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeviceCommunicationUnit) HasAppProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeviceCommunicationUnit) ClearCommunicationUnitId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CommunicationUnitId = nil
}

func (x *DeviceCommunicationUnit) ClearAppProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AppProtocol = ApplicationProtocol_APPPROTO_IEC_62056_21
}

type DeviceCommunicationUnit_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CommunicationUnitId *string
	AppProtocol         *ApplicationProtocol
	Attributes          map[string]*common.FieldValue
}

func (b0 DeviceCommunicationUnit_builder) Build() *DeviceCommunicationUnit {
	m0 := &DeviceCommunicationUnit{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CommunicationUnitId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_CommunicationUnitId = b.CommunicationUnitId
	}
	if b.AppProtocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_AppProtocol = *b.AppProtocol
	}
	x.xxx_hidden_Attributes = b.Attributes
	return m0
}

// Sub-message - job specification
type JobSpec struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Device        *JobDevice             `protobuf:"bytes,2,opt,name=device"`
	xxx_hidden_JobSettings   *JobSettings           `protobuf:"bytes,3,opt,name=job_settings,json=jobSettings"`
	xxx_hidden_DriverType    *string                `protobuf:"bytes,4,opt,name=driver_type,json=driverType"`
	xxx_hidden_JobActions    *[]*JobAction          `protobuf:"bytes,5,rep,name=job_actions,json=jobActions"`
	xxx_hidden_JobActionInfo *[]*JobActionMapRecord `protobuf:"bytes,6,rep,name=job_action_info,json=jobActionInfo"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *JobSpec) Reset() {
	*x = JobSpec{}
	mi := &file_acquisition_shared_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSpec) ProtoMessage() {}

func (x *JobSpec) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobSpec) GetDevice() *JobDevice {
	if x != nil {
		return x.xxx_hidden_Device
	}
	return nil
}

func (x *JobSpec) GetJobSettings() *JobSettings {
	if x != nil {
		return x.xxx_hidden_JobSettings
	}
	return nil
}

func (x *JobSpec) GetDriverType() string {
	if x != nil {
		if x.xxx_hidden_DriverType != nil {
			return *x.xxx_hidden_DriverType
		}
		return ""
	}
	return ""
}

func (x *JobSpec) GetJobActions() []*JobAction {
	if x != nil {
		if x.xxx_hidden_JobActions != nil {
			return *x.xxx_hidden_JobActions
		}
	}
	return nil
}

func (x *JobSpec) GetJobActionInfo() []*JobActionMapRecord {
	if x != nil {
		if x.xxx_hidden_JobActionInfo != nil {
			return *x.xxx_hidden_JobActionInfo
		}
	}
	return nil
}

func (x *JobSpec) SetDevice(v *JobDevice) {
	x.xxx_hidden_Device = v
}

func (x *JobSpec) SetJobSettings(v *JobSettings) {
	x.xxx_hidden_JobSettings = v
}

func (x *JobSpec) SetDriverType(v string) {
	x.xxx_hidden_DriverType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *JobSpec) SetJobActions(v []*JobAction) {
	x.xxx_hidden_JobActions = &v
}

func (x *JobSpec) SetJobActionInfo(v []*JobActionMapRecord) {
	x.xxx_hidden_JobActionInfo = &v
}

func (x *JobSpec) HasDevice() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Device != nil
}

func (x *JobSpec) HasJobSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_JobSettings != nil
}

func (x *JobSpec) HasDriverType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *JobSpec) ClearDevice() {
	x.xxx_hidden_Device = nil
}

func (x *JobSpec) ClearJobSettings() {
	x.xxx_hidden_JobSettings = nil
}

func (x *JobSpec) ClearDriverType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DriverType = nil
}

type JobSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Device        *JobDevice
	JobSettings   *JobSettings
	DriverType    *string
	JobActions    []*JobAction
	JobActionInfo []*JobActionMapRecord
}

func (b0 JobSpec_builder) Build() *JobSpec {
	m0 := &JobSpec{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Device = b.Device
	x.xxx_hidden_JobSettings = b.JobSettings
	if b.DriverType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_DriverType = b.DriverType
	}
	x.xxx_hidden_JobActions = &b.JobActions
	x.xxx_hidden_JobActionInfo = &b.JobActionInfo
	return m0
}

type JobActionMapRecord struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ActionIndex      int32                  `protobuf:"varint,1,opt,name=action_index,json=actionIndex"`
	xxx_hidden_RegisterId       int64                  `protobuf:"varint,3,opt,name=register_id,json=registerId"`
	xxx_hidden_PublicRegisterId *string                `protobuf:"bytes,2,opt,name=public_register_id,json=publicRegisterId"`
	xxx_hidden_VariableName     []string               `protobuf:"bytes,4,rep,name=variable_name,json=variableName"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *JobActionMapRecord) Reset() {
	*x = JobActionMapRecord{}
	mi := &file_acquisition_shared_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobActionMapRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobActionMapRecord) ProtoMessage() {}

func (x *JobActionMapRecord) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobActionMapRecord) GetActionIndex() int32 {
	if x != nil {
		return x.xxx_hidden_ActionIndex
	}
	return 0
}

func (x *JobActionMapRecord) GetRegisterId() int64 {
	if x != nil {
		return x.xxx_hidden_RegisterId
	}
	return 0
}

func (x *JobActionMapRecord) GetPublicRegisterId() string {
	if x != nil {
		if x.xxx_hidden_PublicRegisterId != nil {
			return *x.xxx_hidden_PublicRegisterId
		}
		return ""
	}
	return ""
}

func (x *JobActionMapRecord) GetVariableName() []string {
	if x != nil {
		return x.xxx_hidden_VariableName
	}
	return nil
}

func (x *JobActionMapRecord) SetActionIndex(v int32) {
	x.xxx_hidden_ActionIndex = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *JobActionMapRecord) SetRegisterId(v int64) {
	x.xxx_hidden_RegisterId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *JobActionMapRecord) SetPublicRegisterId(v string) {
	x.xxx_hidden_PublicRegisterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *JobActionMapRecord) SetVariableName(v []string) {
	x.xxx_hidden_VariableName = v
}

func (x *JobActionMapRecord) HasActionIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobActionMapRecord) HasRegisterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *JobActionMapRecord) HasPublicRegisterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *JobActionMapRecord) ClearActionIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ActionIndex = 0
}

func (x *JobActionMapRecord) ClearRegisterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RegisterId = 0
}

func (x *JobActionMapRecord) ClearPublicRegisterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PublicRegisterId = nil
}

type JobActionMapRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ActionIndex      *int32
	RegisterId       *int64
	PublicRegisterId *string
	VariableName     []string
}

func (b0 JobActionMapRecord_builder) Build() *JobActionMapRecord {
	m0 := &JobActionMapRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ActionIndex != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ActionIndex = *b.ActionIndex
	}
	if b.RegisterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_RegisterId = *b.RegisterId
	}
	if b.PublicRegisterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_PublicRegisterId = b.PublicRegisterId
	}
	x.xxx_hidden_VariableName = b.VariableName
	return m0
}

// Message used to notify DP that the job is done, sent by Taskmaster
type JobDoneNotification struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec   *JobSpec               `protobuf:"bytes,1,opt,name=spec"`
	xxx_hidden_Status *JobStatus             `protobuf:"bytes,2,opt,name=status"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *JobDoneNotification) Reset() {
	*x = JobDoneNotification{}
	mi := &file_acquisition_shared_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobDoneNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDoneNotification) ProtoMessage() {}

func (x *JobDoneNotification) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobDoneNotification) GetSpec() *JobSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *JobDoneNotification) GetStatus() *JobStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *JobDoneNotification) SetSpec(v *JobSpec) {
	x.xxx_hidden_Spec = v
}

func (x *JobDoneNotification) SetStatus(v *JobStatus) {
	x.xxx_hidden_Status = v
}

func (x *JobDoneNotification) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *JobDoneNotification) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *JobDoneNotification) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *JobDoneNotification) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type JobDoneNotification_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec   *JobSpec
	Status *JobStatus
}

func (b0 JobDoneNotification_builder) Build() *JobDoneNotification {
	m0 := &JobDoneNotification{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Status = b.Status
	return m0
}

// Sub-message containing driver info
type DriverInfo struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DriverType  *string                `protobuf:"bytes,1,opt,name=driver_type,json=driverType"`
	xxx_hidden_Version     *string                `protobuf:"bytes,2,opt,name=version"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DriverInfo) Reset() {
	*x = DriverInfo{}
	mi := &file_acquisition_shared_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverInfo) ProtoMessage() {}

func (x *DriverInfo) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DriverInfo) GetDriverType() string {
	if x != nil {
		if x.xxx_hidden_DriverType != nil {
			return *x.xxx_hidden_DriverType
		}
		return ""
	}
	return ""
}

func (x *DriverInfo) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *DriverInfo) SetDriverType(v string) {
	x.xxx_hidden_DriverType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DriverInfo) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DriverInfo) HasDriverType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DriverInfo) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DriverInfo) ClearDriverType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DriverType = nil
}

func (x *DriverInfo) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Version = nil
}

type DriverInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DriverType *string
	Version    *string
}

func (b0 DriverInfo_builder) Build() *DriverInfo {
	m0 := &DriverInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DriverType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_DriverType = b.DriverType
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Version = b.Version
	}
	return m0
}

type CommunicationUnit struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Spec     *CommunicationUnitSpec `protobuf:"bytes,1,opt,name=spec"`
	xxx_hidden_Metadata *common.MetadataFields `protobuf:"bytes,3,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CommunicationUnit) Reset() {
	*x = CommunicationUnit{}
	mi := &file_acquisition_shared_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommunicationUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunicationUnit) ProtoMessage() {}

func (x *CommunicationUnit) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommunicationUnit) GetSpec() *CommunicationUnitSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *CommunicationUnit) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CommunicationUnit) SetSpec(v *CommunicationUnitSpec) {
	x.xxx_hidden_Spec = v
}

func (x *CommunicationUnit) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *CommunicationUnit) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *CommunicationUnit) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *CommunicationUnit) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *CommunicationUnit) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type CommunicationUnit_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Spec     *CommunicationUnitSpec
	Metadata *common.MetadataFields
}

func (b0 CommunicationUnit_builder) Build() *CommunicationUnit {
	m0 := &CommunicationUnit{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type CommunicationUnitSpec struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ExternalId     *string                `protobuf:"bytes,1,opt,name=external_id,json=externalId"`
	xxx_hidden_ConnectionInfo *ConnectionInfo        `protobuf:"bytes,2,opt,name=connection_info,json=connectionInfo"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CommunicationUnitSpec) Reset() {
	*x = CommunicationUnitSpec{}
	mi := &file_acquisition_shared_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommunicationUnitSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunicationUnitSpec) ProtoMessage() {}

func (x *CommunicationUnitSpec) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommunicationUnitSpec) GetExternalId() string {
	if x != nil {
		if x.xxx_hidden_ExternalId != nil {
			return *x.xxx_hidden_ExternalId
		}
		return ""
	}
	return ""
}

func (x *CommunicationUnitSpec) GetConnectionInfo() *ConnectionInfo {
	if x != nil {
		return x.xxx_hidden_ConnectionInfo
	}
	return nil
}

func (x *CommunicationUnitSpec) SetExternalId(v string) {
	x.xxx_hidden_ExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *CommunicationUnitSpec) SetConnectionInfo(v *ConnectionInfo) {
	x.xxx_hidden_ConnectionInfo = v
}

func (x *CommunicationUnitSpec) HasExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CommunicationUnitSpec) HasConnectionInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ConnectionInfo != nil
}

func (x *CommunicationUnitSpec) ClearExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ExternalId = nil
}

func (x *CommunicationUnitSpec) ClearConnectionInfo() {
	x.xxx_hidden_ConnectionInfo = nil
}

type CommunicationUnitSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ExternalId     *string
	ConnectionInfo *ConnectionInfo
}

func (b0 CommunicationUnitSpec_builder) Build() *CommunicationUnitSpec {
	m0 := &CommunicationUnitSpec{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ExternalId = b.ExternalId
	}
	x.xxx_hidden_ConnectionInfo = b.ConnectionInfo
	return m0
}

type CommunicationBus struct {
	state               protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Status   *CommunicationBusStatus `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_Metadata *common.MetadataFields  `protobuf:"bytes,3,opt,name=metadata"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CommunicationBus) Reset() {
	*x = CommunicationBus{}
	mi := &file_acquisition_shared_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommunicationBus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunicationBus) ProtoMessage() {}

func (x *CommunicationBus) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommunicationBus) GetStatus() *CommunicationBusStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *CommunicationBus) GetMetadata() *common.MetadataFields {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *CommunicationBus) SetStatus(v *CommunicationBusStatus) {
	x.xxx_hidden_Status = v
}

func (x *CommunicationBus) SetMetadata(v *common.MetadataFields) {
	x.xxx_hidden_Metadata = v
}

func (x *CommunicationBus) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *CommunicationBus) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *CommunicationBus) ClearStatus() {
	x.xxx_hidden_Status = nil
}

func (x *CommunicationBus) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type CommunicationBus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status   *CommunicationBusStatus
	Metadata *common.MetadataFields
}

func (b0 CommunicationBus_builder) Build() *CommunicationBus {
	m0 := &CommunicationBus{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type CommunicationBusStatus struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CommunicationUnitId []string               `protobuf:"bytes,1,rep,name=communication_unit_id,json=communicationUnitId"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *CommunicationBusStatus) Reset() {
	*x = CommunicationBusStatus{}
	mi := &file_acquisition_shared_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommunicationBusStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunicationBusStatus) ProtoMessage() {}

func (x *CommunicationBusStatus) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommunicationBusStatus) GetCommunicationUnitId() []string {
	if x != nil {
		return x.xxx_hidden_CommunicationUnitId
	}
	return nil
}

func (x *CommunicationBusStatus) SetCommunicationUnitId(v []string) {
	x.xxx_hidden_CommunicationUnitId = v
}

type CommunicationBusStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CommunicationUnitId []string
}

func (b0 CommunicationBusStatus_builder) Build() *CommunicationBusStatus {
	m0 := &CommunicationBusStatus{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CommunicationUnitId = b.CommunicationUnitId
	return m0
}

type TopologyNode struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_XId         int64                  `protobuf:"varint,1,opt,name=x_id,json=xId"`
	xxx_hidden_Type        TopologyNodeType       `protobuf:"varint,2,opt,name=type,enum=io.clbs.openhes.models.acquisition.TopologyNodeType"`
	xxx_hidden_Attributes  *common.FieldValues    `protobuf:"bytes,3,opt,name=attributes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TopologyNode) Reset() {
	*x = TopologyNode{}
	mi := &file_acquisition_shared_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologyNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyNode) ProtoMessage() {}

func (x *TopologyNode) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TopologyNode) GetXId() int64 {
	if x != nil {
		return x.xxx_hidden_XId
	}
	return 0
}

func (x *TopologyNode) GetType() TopologyNodeType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Type
		}
	}
	return TopologyNodeType_TOPOLOGY_NODE_DEVICE
}

func (x *TopologyNode) GetAttributes() *common.FieldValues {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *TopologyNode) SetXId(v int64) {
	x.xxx_hidden_XId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *TopologyNode) SetType(v TopologyNodeType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *TopologyNode) SetAttributes(v *common.FieldValues) {
	x.xxx_hidden_Attributes = v
}

func (x *TopologyNode) HasXId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TopologyNode) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TopologyNode) HasAttributes() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Attributes != nil
}

func (x *TopologyNode) ClearXId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_XId = 0
}

func (x *TopologyNode) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = TopologyNodeType_TOPOLOGY_NODE_DEVICE
}

func (x *TopologyNode) ClearAttributes() {
	x.xxx_hidden_Attributes = nil
}

type TopologyNode_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	XId        *int64
	Type       *TopologyNodeType
	Attributes *common.FieldValues
}

func (b0 TopologyNode_builder) Build() *TopologyNode {
	m0 := &TopologyNode{}
	b, x := &b0, m0
	_, _ = b, x
	if b.XId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_XId = *b.XId
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Type = *b.Type
	}
	x.xxx_hidden_Attributes = b.Attributes
	return m0
}

type TopologyEdge struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FromXId     int64                  `protobuf:"varint,1,opt,name=from_x_id,json=fromXId"`
	xxx_hidden_ToXId       int64                  `protobuf:"varint,2,opt,name=to_x_id,json=toXId"`
	xxx_hidden_Attributes  *common.FieldValues    `protobuf:"bytes,3,opt,name=attributes"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TopologyEdge) Reset() {
	*x = TopologyEdge{}
	mi := &file_acquisition_shared_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologyEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyEdge) ProtoMessage() {}

func (x *TopologyEdge) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TopologyEdge) GetFromXId() int64 {
	if x != nil {
		return x.xxx_hidden_FromXId
	}
	return 0
}

func (x *TopologyEdge) GetToXId() int64 {
	if x != nil {
		return x.xxx_hidden_ToXId
	}
	return 0
}

func (x *TopologyEdge) GetAttributes() *common.FieldValues {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *TopologyEdge) SetFromXId(v int64) {
	x.xxx_hidden_FromXId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *TopologyEdge) SetToXId(v int64) {
	x.xxx_hidden_ToXId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *TopologyEdge) SetAttributes(v *common.FieldValues) {
	x.xxx_hidden_Attributes = v
}

func (x *TopologyEdge) HasFromXId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TopologyEdge) HasToXId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TopologyEdge) HasAttributes() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Attributes != nil
}

func (x *TopologyEdge) ClearFromXId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FromXId = 0
}

func (x *TopologyEdge) ClearToXId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ToXId = 0
}

func (x *TopologyEdge) ClearAttributes() {
	x.xxx_hidden_Attributes = nil
}

type TopologyEdge_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FromXId    *int64
	ToXId      *int64
	Attributes *common.FieldValues
}

func (b0 TopologyEdge_builder) Build() *TopologyEdge {
	m0 := &TopologyEdge{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FromXId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_FromXId = *b.FromXId
	}
	if b.ToXId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ToXId = *b.ToXId
	}
	x.xxx_hidden_Attributes = b.Attributes
	return m0
}

type NetworkMap struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Nodes *[]*TopologyNode       `protobuf:"bytes,1,rep,name=nodes"`
	xxx_hidden_Edges *[]*TopologyEdge       `protobuf:"bytes,2,rep,name=edges"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NetworkMap) Reset() {
	*x = NetworkMap{}
	mi := &file_acquisition_shared_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkMap) ProtoMessage() {}

func (x *NetworkMap) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkMap) GetNodes() []*TopologyNode {
	if x != nil {
		if x.xxx_hidden_Nodes != nil {
			return *x.xxx_hidden_Nodes
		}
	}
	return nil
}

func (x *NetworkMap) GetEdges() []*TopologyEdge {
	if x != nil {
		if x.xxx_hidden_Edges != nil {
			return *x.xxx_hidden_Edges
		}
	}
	return nil
}

func (x *NetworkMap) SetNodes(v []*TopologyNode) {
	x.xxx_hidden_Nodes = &v
}

func (x *NetworkMap) SetEdges(v []*TopologyEdge) {
	x.xxx_hidden_Edges = &v
}

type NetworkMap_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Flat or hierarchical list of topology devices
	Nodes []*TopologyNode
	Edges []*TopologyEdge
}

func (b0 NetworkMap_builder) Build() *NetworkMap {
	m0 := &NetworkMap{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Nodes = &b.Nodes
	x.xxx_hidden_Edges = &b.Edges
	return m0
}

type CommunicationUnitLogRecord struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                  *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_CommunicationUnitId *string                `protobuf:"bytes,2,opt,name=communication_unit_id,json=communicationUnitId"`
	xxx_hidden_Timestamp           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp"`
	xxx_hidden_Level               LogRecordLevel         `protobuf:"varint,4,opt,name=level,enum=io.clbs.openhes.models.acquisition.LogRecordLevel"`
	xxx_hidden_Message             *string                `protobuf:"bytes,5,opt,name=message"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *CommunicationUnitLogRecord) Reset() {
	*x = CommunicationUnitLogRecord{}
	mi := &file_acquisition_shared_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommunicationUnitLogRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunicationUnitLogRecord) ProtoMessage() {}

func (x *CommunicationUnitLogRecord) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommunicationUnitLogRecord) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *CommunicationUnitLogRecord) GetCommunicationUnitId() string {
	if x != nil {
		if x.xxx_hidden_CommunicationUnitId != nil {
			return *x.xxx_hidden_CommunicationUnitId
		}
		return ""
	}
	return ""
}

func (x *CommunicationUnitLogRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *CommunicationUnitLogRecord) GetLevel() LogRecordLevel {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_Level
		}
	}
	return LogRecordLevel_LOG_RECORD_LEVEL_DEBUG
}

func (x *CommunicationUnitLogRecord) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *CommunicationUnitLogRecord) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *CommunicationUnitLogRecord) SetCommunicationUnitId(v string) {
	x.xxx_hidden_CommunicationUnitId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *CommunicationUnitLogRecord) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *CommunicationUnitLogRecord) SetLevel(v LogRecordLevel) {
	x.xxx_hidden_Level = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *CommunicationUnitLogRecord) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *CommunicationUnitLogRecord) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CommunicationUnitLogRecord) HasCommunicationUnitId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CommunicationUnitLogRecord) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *CommunicationUnitLogRecord) HasLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CommunicationUnitLogRecord) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *CommunicationUnitLogRecord) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *CommunicationUnitLogRecord) ClearCommunicationUnitId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CommunicationUnitId = nil
}

func (x *CommunicationUnitLogRecord) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *CommunicationUnitLogRecord) ClearLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Level = LogRecordLevel_LOG_RECORD_LEVEL_DEBUG
}

func (x *CommunicationUnitLogRecord) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Message = nil
}

type CommunicationUnitLogRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                  *string
	CommunicationUnitId *string
	Timestamp           *timestamppb.Timestamp
	Level               *LogRecordLevel
	Message             *string
}

func (b0 CommunicationUnitLogRecord_builder) Build() *CommunicationUnitLogRecord {
	m0 := &CommunicationUnitLogRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Id = b.Id
	}
	if b.CommunicationUnitId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_CommunicationUnitId = b.CommunicationUnitId
	}
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.Level != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Level = *b.Level
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Message = b.Message
	}
	return m0
}

type ListOfCommunicationUnitLogRecord struct {
	state                  protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Items       *[]*CommunicationUnitLogRecord `protobuf:"bytes,1,rep,name=items"`
	xxx_hidden_TotalCount  int32                          `protobuf:"varint,2,opt,name=total_count,json=totalCount"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListOfCommunicationUnitLogRecord) Reset() {
	*x = ListOfCommunicationUnitLogRecord{}
	mi := &file_acquisition_shared_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOfCommunicationUnitLogRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfCommunicationUnitLogRecord) ProtoMessage() {}

func (x *ListOfCommunicationUnitLogRecord) ProtoReflect() protoreflect.Message {
	mi := &file_acquisition_shared_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListOfCommunicationUnitLogRecord) GetItems() []*CommunicationUnitLogRecord {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ListOfCommunicationUnitLogRecord) GetTotalCount() int32 {
	if x != nil {
		return x.xxx_hidden_TotalCount
	}
	return 0
}

func (x *ListOfCommunicationUnitLogRecord) SetItems(v []*CommunicationUnitLogRecord) {
	x.xxx_hidden_Items = &v
}

func (x *ListOfCommunicationUnitLogRecord) SetTotalCount(v int32) {
	x.xxx_hidden_TotalCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListOfCommunicationUnitLogRecord) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListOfCommunicationUnitLogRecord) ClearTotalCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalCount = 0
}

type ListOfCommunicationUnitLogRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items      []*CommunicationUnitLogRecord
	TotalCount *int32
}

func (b0 ListOfCommunicationUnitLogRecord_builder) Build() *ListOfCommunicationUnitLogRecord {
	m0 := &ListOfCommunicationUnitLogRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	if b.TotalCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_TotalCount = *b.TotalCount
	}
	return m0
}

var File_acquisition_shared_proto protoreflect.FileDescriptor

const file_acquisition_shared_proto_rawDesc = "" +
	"\n" +
	"\x18acquisition/shared.proto\x12\"io.clbs.openhes.models.acquisition\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x15common/messages.proto\x1a\x13common/fields.proto\x1a\x15common/metadata.proto\x1a\x12common/types.proto\x1a%acquisition/timeofuse/timeofuse.proto\"\xc5\x03\n" +
	"\vJobSettings\x12<\n" +
	"\fmax_duration\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\vmaxDuration\x12K\n" +
	"\bpriority\x18\x02 \x01(\x0e2/.io.clbs.openhes.models.acquisition.JobPriorityR\bpriority\x12\x1a\n" +
	"\battempts\x18\x03 \x03(\x05R\battempts\x12:\n" +
	"\vretry_delay\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"retryDelay\x12:\n" +
	"\vdefer_start\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"deferStart\x129\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12\\\n" +
	"\x10read_path_policy\x18\a \x01(\x0e22.io.clbs.openhes.models.acquisition.ReadPathPolicyR\x0ereadPathPolicy\"\xe6\v\n" +
	"\tJobAction\x12\x1b\n" +
	"\taction_id\x18\x01 \x01(\tR\bactionId\x12]\n" +
	"\n" +
	"attributes\x18\x02 \x03(\v2=.io.clbs.openhes.models.acquisition.JobAction.AttributesEntryR\n" +
	"attributes\x12Z\n" +
	"\fget_register\x18\x03 \x01(\v25.io.clbs.openhes.models.acquisition.ActionGetRegisterH\x00R\vgetRegister\x12v\n" +
	"\x16get_periodical_profile\x18\x04 \x01(\v2>.io.clbs.openhes.models.acquisition.ActionGetPeriodicalProfileH\x00R\x14getPeriodicalProfile\x12s\n" +
	"\x15get_irregular_profile\x18\x05 \x01(\v2=.io.clbs.openhes.models.acquisition.ActionGetIrregularProfileH\x00R\x13getIrregularProfile\x12T\n" +
	"\n" +
	"get_events\x18\x06 \x01(\v23.io.clbs.openhes.models.acquisition.ActionGetEventsH\x00R\tgetEvents\x12a\n" +
	"\x0fget_device_info\x18\a \x01(\v27.io.clbs.openhes.models.acquisition.ActionGetDeviceInfoH\x00R\rgetDeviceInfo\x12T\n" +
	"\n" +
	"sync_clock\x18\b \x01(\v23.io.clbs.openhes.models.acquisition.ActionSyncClockH\x00R\tsyncClock\x12a\n" +
	"\x0fset_relay_state\x18\n" +
	" \x01(\v27.io.clbs.openhes.models.acquisition.ActionSetRelayStateH\x00R\rsetRelayState\x12v\n" +
	"\x16set_disconnector_state\x18\f \x01(\v2>.io.clbs.openhes.models.acquisition.ActionSetDisconnectorStateH\x00R\x14setDisconnectorState\x12K\n" +
	"\aget_tou\x18\r \x01(\v20.io.clbs.openhes.models.acquisition.ActionGetTouH\x00R\x06getTou\x12K\n" +
	"\aset_tou\x18\x0e \x01(\v20.io.clbs.openhes.models.acquisition.ActionSetTouH\x00R\x06setTou\x12W\n" +
	"\vset_limiter\x18\x10 \x01(\v24.io.clbs.openhes.models.acquisition.ActionSetLimiterH\x00R\n" +
	"setLimiter\x12p\n" +
	"\x14reset_billing_period\x18\x11 \x01(\v2<.io.clbs.openhes.models.acquisition.ActionResetBillingPeriodH\x00R\x12resetBillingPeriod\x12Q\n" +
	"\tfw_update\x18\x12 \x01(\v22.io.clbs.openhes.models.acquisition.ActionFwUpdateH\x00R\bfwUpdate\x1ah\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12?\n" +
	"\x05value\x18\x02 \x01(\v2).io.clbs.openhes.models.common.FieldValueR\x05value:\x028\x01B\b\n" +
	"\x06action\"\xa1\n" +
	"\n" +
	"\fJobActionSet\x12\x1c\n" +
	"\tvariables\x18\x02 \x03(\tR\tvariables\x12Z\n" +
	"\fget_register\x18\x03 \x01(\v25.io.clbs.openhes.models.acquisition.ActionGetRegisterH\x00R\vgetRegister\x12v\n" +
	"\x16get_periodical_profile\x18\x04 \x01(\v2>.io.clbs.openhes.models.acquisition.ActionGetPeriodicalProfileH\x00R\x14getPeriodicalProfile\x12s\n" +
	"\x15get_irregular_profile\x18\x05 \x01(\v2=.io.clbs.openhes.models.acquisition.ActionGetIrregularProfileH\x00R\x13getIrregularProfile\x12T\n" +
	"\n" +
	"get_events\x18\x06 \x01(\v23.io.clbs.openhes.models.acquisition.ActionGetEventsH\x00R\tgetEvents\x12a\n" +
	"\x0fget_device_info\x18\a \x01(\v27.io.clbs.openhes.models.acquisition.ActionGetDeviceInfoH\x00R\rgetDeviceInfo\x12T\n" +
	"\n" +
	"sync_clock\x18\b \x01(\v23.io.clbs.openhes.models.acquisition.ActionSyncClockH\x00R\tsyncClock\x12a\n" +
	"\x0fset_relay_state\x18\n" +
	" \x01(\v27.io.clbs.openhes.models.acquisition.ActionSetRelayStateH\x00R\rsetRelayState\x12v\n" +
	"\x16set_disconnector_state\x18\f \x01(\v2>.io.clbs.openhes.models.acquisition.ActionSetDisconnectorStateH\x00R\x14setDisconnectorState\x12K\n" +
	"\aget_tou\x18\r \x01(\v20.io.clbs.openhes.models.acquisition.ActionGetTouH\x00R\x06getTou\x12K\n" +
	"\aset_tou\x18\x0e \x01(\v20.io.clbs.openhes.models.acquisition.ActionSetTouH\x00R\x06setTou\x12W\n" +
	"\vset_limiter\x18\x10 \x01(\v24.io.clbs.openhes.models.acquisition.ActionSetLimiterH\x00R\n" +
	"setLimiter\x12p\n" +
	"\x14reset_billing_period\x18\x11 \x01(\v2<.io.clbs.openhes.models.acquisition.ActionResetBillingPeriodH\x00R\x12resetBillingPeriod\x12Q\n" +
	"\tfw_update\x18\x12 \x01(\v22.io.clbs.openhes.models.acquisition.ActionFwUpdateH\x00R\bfwUpdateB\b\n" +
	"\x06action\"u\n" +
	"\x0fListOfJobDevice\x12A\n" +
	"\x04list\x18\x01 \x03(\v2-.io.clbs.openhes.models.acquisition.JobDeviceR\x04list\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"y\n" +
	"\x11ListOfJobDeviceId\x12C\n" +
	"\x04list\x18\x01 \x03(\v2/.io.clbs.openhes.models.acquisition.JobDeviceIdR\x04list\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"A\n" +
	"\vJobDeviceId\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\"\x97\x04\n" +
	"\tJobDevice\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vexternal_id\x18\x03 \x01(\tR\n" +
	"externalId\x12p\n" +
	"\x11device_attributes\x18\x04 \x03(\v2C.io.clbs.openhes.models.acquisition.JobDevice.DeviceAttributesEntryR\x10deviceAttributes\x12[\n" +
	"\x0fconnection_info\x18\x05 \x03(\v22.io.clbs.openhes.models.acquisition.ConnectionInfoR\x0econnectionInfo\x12Z\n" +
	"\fapp_protocol\x18\x06 \x01(\x0e27.io.clbs.openhes.models.acquisition.ApplicationProtocolR\vappProtocol\x12\x1a\n" +
	"\btimezone\x18\a \x01(\tR\btimezone\x1an\n" +
	"\x15DeviceAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12?\n" +
	"\x05value\x18\x02 \x01(\v2).io.clbs.openhes.models.common.FieldValueR\x05value:\x028\x01\"\xaf\x04\n" +
	"\tModemInfo\x12\x19\n" +
	"\bmodem_id\x18\x01 \x01(\tR\amodemId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x17\n" +
	"\aat_init\x18\x03 \x01(\tR\x06atInit\x12\x17\n" +
	"\aat_dial\x18\x04 \x01(\tR\x06atDial\x12\x1b\n" +
	"\tat_hangup\x18\x05 \x01(\tR\batHangup\x12\x1b\n" +
	"\tat_escape\x18\x06 \x01(\tR\batEscape\x12B\n" +
	"\x0fconnect_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\x0econnectTimeout\x12B\n" +
	"\x0fcommand_timeout\x18\b \x01(\v2\x19.google.protobuf.DurationR\x0ecommandTimeout\x12U\n" +
	"\x05tcpip\x18\t \x01(\v2=.io.clbs.openhes.models.acquisition.ConnectionTypeDirectTcpIpH\x00R\x05tcpip\x12j\n" +
	"\x0eserial_over_ip\x18\n" +
	" \x01(\v2B.io.clbs.openhes.models.acquisition.ConnectionTypeControlledSerialH\x00R\fserialOverIp\x12(\n" +
	"\x10serial_baud_rate\x18\v \x01(\rR\x0eserialBaudRateB\x12\n" +
	"\x10modem_connection\"\xe3\x02\n" +
	"\fSerialConfig\x12U\n" +
	"\tbaud_rate\x18\x01 \x01(\x0e28.io.clbs.openhes.models.acquisition.SerialConfigBaudRateR\bbaudRate\x12N\n" +
	"\x06parity\x18\x02 \x01(\x0e26.io.clbs.openhes.models.acquisition.SerialConfigParityR\x06parity\x12U\n" +
	"\tdata_bits\x18\x03 \x01(\x0e28.io.clbs.openhes.models.acquisition.SerialConfigDataBitsR\bdataBits\x12U\n" +
	"\tstop_bits\x18\x04 \x01(\x0e28.io.clbs.openhes.models.acquisition.SerialConfigStopBitsR\bstopBits\"\x9a\x05\n" +
	"\x0eConnectionInfo\x12U\n" +
	"\x05tcpip\x18\x01 \x01(\v2=.io.clbs.openhes.models.acquisition.ConnectionTypeDirectTcpIpH\x00R\x05tcpip\x12\\\n" +
	"\n" +
	"modem_pool\x18\x02 \x01(\v2;.io.clbs.openhes.models.acquisition.ConnectionTypeModemPoolH\x00R\tmodemPool\x12j\n" +
	"\x0eserial_over_ip\x18\x03 \x01(\v2B.io.clbs.openhes.models.acquisition.ConnectionTypeControlledSerialH\x00R\fserialOverIp\x12Y\n" +
	"\rlink_protocol\x18\x04 \x01(\x0e24.io.clbs.openhes.models.acquisition.DataLinkProtocolR\flinkProtocol\x120\n" +
	"\x14communication_bus_id\x18\x05 \x01(\tR\x12communicationBusId\x12b\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2B.io.clbs.openhes.models.acquisition.ConnectionInfo.AttributesEntryR\n" +
	"attributes\x1ah\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12?\n" +
	"\x05value\x18\x02 \x01(\v2).io.clbs.openhes.models.common.FieldValueR\x05value:\x028\x01B\f\n" +
	"\n" +
	"connection\"x\n" +
	"\x19ConnectionTypeDirectTcpIp\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"\x8f\x01\n" +
	"\x17ConnectionTypeModemPool\x12\x16\n" +
	"\x06number\x18\x01 \x01(\tR\x06number\x12\x17\n" +
	"\apool_id\x18\x02 \x01(\tR\x06poolId\x12C\n" +
	"\x05modem\x18\x04 \x01(\v2-.io.clbs.openhes.models.acquisition.ModemInfoR\x05modem\"y\n" +
	"\x1aConnectionTypeSerialDirect\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"\xa2\x01\n" +
	"\x18ConnectionTypeSerialMoxa\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x1a\n" +
	"\bdataPort\x18\x02 \x01(\rR\bdataPort\x12!\n" +
	"\fcommand_port\x18\x03 \x01(\rR\vcommandPort\x123\n" +
	"\atimeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"z\n" +
	"\x1bConnectionTypeSerialRfc2217\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"\xc2\x01\n" +
	"\x1bApplicationProtocolTemplate\x12S\n" +
	"\bprotocol\x18\x01 \x01(\x0e27.io.clbs.openhes.models.acquisition.ApplicationProtocolR\bprotocol\x12N\n" +
	"\n" +
	"attributes\x18\x02 \x03(\v2..io.clbs.openhes.models.common.FieldDescriptorR\n" +
	"attributes\"\xa2\x02\n" +
	"\x10DataLinkTemplate\x12Y\n" +
	"\rlink_protocol\x18\x01 \x01(\x0e24.io.clbs.openhes.models.acquisition.DataLinkProtocolR\flinkProtocol\x12c\n" +
	"\x11app_protocol_refs\x18\x02 \x03(\x0e27.io.clbs.openhes.models.acquisition.ApplicationProtocolR\x0fappProtocolRefs\x12N\n" +
	"\n" +
	"attributes\x18\x03 \x03(\v2..io.clbs.openhes.models.common.FieldDescriptorR\n" +
	"attributes\"\xb6\x01\n" +
	"\x15CommunicationTemplate\x12I\n" +
	"\x04type\x18\x01 \x01(\x0e25.io.clbs.openhes.models.acquisition.CommunicationTypeR\x04type\x12R\n" +
	"\tdatalinks\x18\x02 \x03(\v24.io.clbs.openhes.models.acquisition.DataLinkTemplateR\tdatalinks\"9\n" +
	"\x13AccessLevelTemplate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\x89\x05\n" +
	"\x0fDriverTemplates\x12r\n" +
	"\x17communication_templates\x18\x01 \x03(\v29.io.clbs.openhes.models.acquisition.CommunicationTemplateR\x16communicationTemplates\x12d\n" +
	"\rapp_protocols\x18\x02 \x03(\v2?.io.clbs.openhes.models.acquisition.ApplicationProtocolTemplateR\fappProtocols\x12d\n" +
	"\x11action_attributes\x18\x03 \x03(\v27.io.clbs.openhes.models.acquisition.JobActionAttributesR\x10actionAttributes\x12b\n" +
	"\x10access_templates\x18\x04 \x03(\v27.io.clbs.openhes.models.acquisition.AccessLevelTemplateR\x0faccessTemplates\x12f\n" +
	"\x12action_constraints\x18\x05 \x01(\v27.io.clbs.openhes.models.acquisition.JobActionContraintsR\x11actionConstraints\x12j\n" +
	"\x19uknown_device_descriptors\x18\x06 \x03(\v2..io.clbs.openhes.models.common.FieldDescriptorR\x17uknownDeviceDescriptors\"\xae\x02\n" +
	"\x14ActionProgressUpdate\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1b\n" +
	"\taction_id\x18\x02 \x01(\tR\bactionId\x12H\n" +
	"\x04code\x18\x03 \x01(\x0e24.io.clbs.openhes.models.acquisition.ActionResultCodeR\x04code\x12B\n" +
	"\x04data\x18\x04 \x01(\v2..io.clbs.openhes.models.acquisition.ActionDataR\x04data\x12T\n" +
	"\rerror_message\x18\x05 \x01(\v2/.io.clbs.openhes.models.common.FormattedMessageR\ferrorMessage\"\xfd\x01\n" +
	"\x11JobProgressUpdate\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12D\n" +
	"\x04code\x18\x02 \x01(\x0e20.io.clbs.openhes.models.acquisition.JobErrorCodeR\x04code\x125\n" +
	"\bduration\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\bduration\x12T\n" +
	"\rerror_message\x18\x04 \x01(\v2/.io.clbs.openhes.models.common.FormattedMessageR\ferrorMessage\"\xd4\x04\n" +
	"\n" +
	"ActionData\x120\n" +
	"\x06nodata\x18\x01 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x06nodata\x12R\n" +
	"\tregisters\x18\x02 \x01(\v22.io.clbs.openhes.models.acquisition.RegisterValuesH\x00R\tregisters\x12M\n" +
	"\aprofile\x18\x03 \x01(\v21.io.clbs.openhes.models.acquisition.ProfileValuesH\x00R\aprofile\x12i\n" +
	"\x11irregular_profile\x18\x04 \x01(\v2:.io.clbs.openhes.models.acquisition.IrregularProfileValuesH\x00R\x10irregularProfile\x12Q\n" +
	"\vdevice_info\x18\x05 \x01(\v2..io.clbs.openhes.models.acquisition.DeviceInfoH\x00R\n" +
	"deviceInfo\x12J\n" +
	"\x06events\x18\x06 \x01(\v20.io.clbs.openhes.models.acquisition.EventRecordsH\x00R\x06events\x12_\n" +
	"\ttou_table\x18\a \x01(\v2@.io.clbs.openhes.models.acquisition.timeofuse.TimeOfUseTableSpecH\x00R\btouTableB\x06\n" +
	"\x04data\"W\n" +
	"\fEventRecords\x12G\n" +
	"\x06values\x18\x01 \x03(\v2/.io.clbs.openhes.models.acquisition.EventRecordR\x06values\"\xc3\x01\n" +
	"\vEventRecord\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\x03R\aeventId\x12\x1d\n" +
	"\n" +
	"event_code\x18\x03 \x01(\x03R\teventCode\x12!\n" +
	"\fevent_source\x18\x05 \x01(\tR\veventSource\x12\x1d\n" +
	"\n" +
	"event_text\x18\x04 \x01(\tR\teventText\"\xe6\x01\n" +
	"\x11DeviceEventRecord\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x19\n" +
	"\bevent_id\x18\x03 \x01(\x03R\aeventId\x12\x1d\n" +
	"\n" +
	"event_code\x18\x04 \x01(\x03R\teventCode\x12!\n" +
	"\fevent_source\x18\x05 \x01(\tR\veventSource\x12\x1d\n" +
	"\n" +
	"event_text\x18\x06 \x01(\tR\teventText\"]\n" +
	"\fDeviceEvents\x12M\n" +
	"\x06events\x18\x01 \x03(\v25.io.clbs.openhes.models.acquisition.DeviceEventRecordR\x06events\"\xbe\x03\n" +
	"\n" +
	"DeviceInfo\x12A\n" +
	"\x0einfo_timestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\rinfoTimestamp\x12<\n" +
	"\x1amanufacturer_serial_number\x18\x02 \x01(\tR\x18manufacturerSerialNumber\x120\n" +
	"\x14device_serial_number\x18\x03 \x01(\tR\x12deviceSerialNumber\x12)\n" +
	"\x10firmware_version\x18\x04 \x01(\tR\x0ffirmwareVersion\x12:\n" +
	"\vclock_delta\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"clockDelta\x12!\n" +
	"\fdevice_model\x18\x06 \x01(\tR\vdeviceModel\x12%\n" +
	"\x0eerror_register\x18\a \x01(\x04R\rerrorRegister\x12!\n" +
	"\frelay_states\x18\b \x03(\bR\vrelayStates\x12)\n" +
	"\x10connection_state\x18\t \x01(\bR\x0fconnectionState\"\x85\x01\n" +
	"\rProfileValues\x12\x16\n" +
	"\x06period\x18\x01 \x01(\x05R\x06period\x12\x12\n" +
	"\x04unit\x18\x02 \x01(\tR\x04unit\x12H\n" +
	"\x06blocks\x18\x03 \x03(\v20.io.clbs.openhes.models.acquisition.ProfileBlockR\x06blocks\"x\n" +
	"\x16IrregularProfileValues\x12\x12\n" +
	"\x04unit\x18\x01 \x01(\tR\x04unit\x12J\n" +
	"\x06values\x18\x02 \x03(\v22.io.clbs.openhes.models.acquisition.IrregularValueR\x06values\"\x93\x01\n" +
	"\x0eIrregularValue\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12G\n" +
	"\x05value\x18\x02 \x01(\v21.io.clbs.openhes.models.acquisition.MeasuredValueR\x05value\"\x9e\x01\n" +
	"\fProfileBlock\x12C\n" +
	"\x0fstart_timestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x0estartTimestamp\x12I\n" +
	"\x06values\x18\x02 \x03(\v21.io.clbs.openhes.models.acquisition.MeasuredValueR\x06values\"[\n" +
	"\x0eRegisterValues\x12I\n" +
	"\x06values\x18\x01 \x03(\v21.io.clbs.openhes.models.acquisition.RegisterValueR\x06values\"\xa6\x01\n" +
	"\rRegisterValue\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x12\n" +
	"\x04unit\x18\x02 \x01(\tR\x04unit\x12G\n" +
	"\x05value\x18\x03 \x01(\v21.io.clbs.openhes.models.acquisition.MeasuredValueR\x05value\"\xa3\x03\n" +
	"\rMeasuredValue\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x03R\x06status\x12\x1a\n" +
	"\bexponent\x18\x02 \x01(\x05R\bexponent\x12#\n" +
	"\fdouble_value\x18\x03 \x01(\x01H\x00R\vdoubleValue\x12%\n" +
	"\rinteger_value\x18\x04 \x01(\x03H\x00R\fintegerValue\x12#\n" +
	"\fstring_value\x18\x05 \x01(\tH\x00R\vstringValue\x12E\n" +
	"\x0ftimestamp_value\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x0etimestampValue\x12.\n" +
	"\x12timestamp_tz_value\x18\a \x01(\tH\x00R\x10timestampTzValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\b \x01(\bH\x00R\tboolValue\x12\x18\n" +
	"\anstatus\x18\t \x01(\x04R\anstatus\x123\n" +
	"\apeak_ts\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x06peakTsB\x06\n" +
	"\x04kind\"\xa9\x01\n" +
	"\x13JobActionAttributes\x12B\n" +
	"\x04type\x18\x01 \x01(\x0e2..io.clbs.openhes.models.acquisition.ActionTypeR\x04type\x12N\n" +
	"\n" +
	"attributes\x18\x02 \x03(\v2..io.clbs.openhes.models.common.FieldDescriptorR\n" +
	"attributes\"\xb8\x02\n" +
	"\x1eConnectionTypeControlledSerial\x12X\n" +
	"\x06direct\x18\x01 \x01(\v2>.io.clbs.openhes.models.acquisition.ConnectionTypeSerialDirectH\x00R\x06direct\x12R\n" +
	"\x04moxa\x18\x02 \x01(\v2<.io.clbs.openhes.models.acquisition.ConnectionTypeSerialMoxaH\x00R\x04moxa\x12[\n" +
	"\arfc2217\x18\x03 \x01(\v2?.io.clbs.openhes.models.acquisition.ConnectionTypeSerialRfc2217H\x00R\arfc2217B\v\n" +
	"\tconverter\"^\n" +
	"\x11ActionGetRegister\x12I\n" +
	"\tdata_type\x18\x01 \x01(\x0e2,.io.clbs.openhes.models.common.FieldDataTypeR\bdataType\"\xdd\x01\n" +
	"\x1aActionGetPeriodicalProfile\x12;\n" +
	"\vrange_start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"rangeStart\x127\n" +
	"\trange_end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\brangeEnd\x12I\n" +
	"\tdata_type\x18\x03 \x01(\x0e2,.io.clbs.openhes.models.common.FieldDataTypeR\bdataType\"\xdc\x01\n" +
	"\x19ActionGetIrregularProfile\x12;\n" +
	"\vrange_start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"rangeStart\x127\n" +
	"\trange_end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\brangeEnd\x12I\n" +
	"\tdata_type\x18\x03 \x01(\x0e2,.io.clbs.openhes.models.common.FieldDataTypeR\bdataType\"\x87\x01\n" +
	"\x0fActionGetEvents\x12;\n" +
	"\vrange_start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"rangeStart\x127\n" +
	"\trange_end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\brangeEnd\"\x15\n" +
	"\x13ActionGetDeviceInfo\"\x11\n" +
	"\x0fActionSyncClock\"\x15\n" +
	"\x13ActionSetRelayState\"\x1c\n" +
	"\x1aActionSetDisconnectorState\"(\n" +
	"\fActionGetTou\x12\x18\n" +
	"\apassive\x18\x01 \x01(\bR\apassive\"f\n" +
	"\fActionSetTou\x12V\n" +
	"\x05table\x18\x01 \x01(\v2@.io.clbs.openhes.models.acquisition.timeofuse.TimeOfUseTableSpecR\x05table\"\x12\n" +
	"\x10ActionSetLimiter\"\x1a\n" +
	"\x18ActionResetBillingPeriod\"\x10\n" +
	"\x0eActionFwUpdate\"\xfa\x03\n" +
	"\x13JobActionContraints\x12\x85\x01\n" +
	"\x16get_register_type_name\x18\x01 \x03(\v2P.io.clbs.openhes.models.acquisition.JobActionContraints.GetRegisterTypeNameEntryR\x13getRegisterTypeName\x12\x97\x01\n" +
	"\x1cget_register_type_attributes\x18\x02 \x03(\v2V.io.clbs.openhes.models.acquisition.JobActionContraints.GetRegisterTypeAttributesEntryR\x19getRegisterTypeAttributes\x1aF\n" +
	"\x18GetRegisterTypeNameEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1ay\n" +
	"\x1eGetRegisterTypeAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12A\n" +
	"\x05value\x18\x02 \x01(\v2+.io.clbs.openhes.models.common.ListOfStringR\x05value:\x028\x01\"\xc7\x04\n" +
	"\tJobStatus\x12I\n" +
	"\x06status\x18\x01 \x01(\x0e21.io.clbs.openhes.models.acquisition.JobStatusCodeR\x06status\x12D\n" +
	"\x04code\x18\x02 \x01(\x0e20.io.clbs.openhes.models.acquisition.JobErrorCodeR\x04code\x12J\n" +
	"\aresults\x18\x03 \x03(\v20.io.clbs.openhes.models.acquisition.ActionResultR\aresults\x129\n" +
	"\n" +
	"started_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12;\n" +
	"\vfinished_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"finishedAt\x12#\n" +
	"\rattempts_done\x18\x06 \x01(\x05R\fattemptsDone\x12O\n" +
	"\vdevice_info\x18\a \x01(\v2..io.clbs.openhes.models.acquisition.DeviceInfoR\n" +
	"deviceInfo\x12\x19\n" +
	"\bqueue_id\x18\b \x01(\x03R\aqueueId\x12T\n" +
	"\rerror_message\x18\t \x01(\v2/.io.clbs.openhes.models.common.FormattedMessageR\ferrorMessage\"\xa6\x04\n" +
	"\fStartJobData\x12s\n" +
	"\x11device_attributes\x18\x01 \x03(\v2F.io.clbs.openhes.models.acquisition.StartJobData.DeviceAttributesEntryR\x10deviceAttributes\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\x12R\n" +
	"\fjob_settings\x18\x03 \x01(\v2/.io.clbs.openhes.models.acquisition.JobSettingsR\vjobSettings\x12N\n" +
	"\vjob_actions\x18\x04 \x03(\v2-.io.clbs.openhes.models.acquisition.JobActionR\n" +
	"jobActions\x12Z\n" +
	"\fapp_protocol\x18\x05 \x01(\x0e27.io.clbs.openhes.models.acquisition.ApplicationProtocolR\vappProtocol\x12\x1a\n" +
	"\btimezone\x18\x06 \x01(\tR\btimezone\x1an\n" +
	"\x15DeviceAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12?\n" +
	"\x05value\x18\x02 \x01(\v2).io.clbs.openhes.models.common.FieldValueR\x05value:\x028\x01\")\n" +
	"\x10CancelJobRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\"\xd6\x03\n" +
	"\x1fDeviceConfigurationRegisterSpec\x12\x1f\n" +
	"\vdriver_type\x18\x01 \x01(\tR\n" +
	"driverType\x12h\n" +
	"\rregister_type\x18\x02 \x01(\x0e2C.io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterKindR\fregisterType\x12s\n" +
	"\n" +
	"attributes\x18\x03 \x03(\v2S.io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpec.AttributesEntryR\n" +
	"attributes\x12I\n" +
	"\tdata_type\x18\x04 \x01(\x0e2,.io.clbs.openhes.models.common.FieldDataTypeR\bdataType\x1ah\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12?\n" +
	"\x05value\x18\x02 \x01(\v2).io.clbs.openhes.models.common.FieldValueR\x05value:\x028\x01\"\xdd\x01\n" +
	"\x0eDeviceRegister\x12\x1f\n" +
	"\vregister_id\x18\x01 \x01(\x03R\n" +
	"registerId\x12,\n" +
	"\x12public_register_id\x18\x02 \x01(\tR\x10publicRegisterId\x12W\n" +
	"\x04spec\x18\x03 \x01(\v2C.io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpecR\x04spec\x12#\n" +
	"\rvariable_name\x18\x04 \x03(\tR\fvariableName\"\xf8\x04\n" +
	"\x14DeviceConnectionInfo\x12a\n" +
	"\x12communication_unit\x18\x01 \x01(\v22.io.clbs.openhes.models.acquisition.ConnectionInfoR\x11communicationUnit\x12Z\n" +
	"\fapp_protocol\x18\x02 \x01(\x0e27.io.clbs.openhes.models.acquisition.ApplicationProtocolR\vappProtocol\x12{\n" +
	"\x11device_attributes\x18\x03 \x03(\v2N.io.clbs.openhes.models.acquisition.DeviceConnectionInfo.DeviceAttributesEntryR\x10deviceAttributes\x12\x1a\n" +
	"\btimezone\x18\x04 \x01(\tR\btimezone\x12\x1f\n" +
	"\vdriver_type\x18\x05 \x01(\tR\n" +
	"driverType\x12%\n" +
	"\x0edriver_version\x18\a \x01(\tR\rdriverVersion\x12P\n" +
	"\tregisters\x18\b \x03(\v22.io.clbs.openhes.models.acquisition.DeviceRegisterR\tregisters\x1an\n" +
	"\x15DeviceAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12?\n" +
	"\x05value\x18\x02 \x01(\v2).io.clbs.openhes.models.common.FieldValueR\x05value:\x028\x01\"w\n" +
	"\x0fListOfModemInfo\x12C\n" +
	"\x05items\x18\x01 \x03(\v2-.io.clbs.openhes.models.acquisition.ModemInfoR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x87\x01\n" +
	"\x14ListOfConnectionInfo\x12N\n" +
	"\x05items\x18\x01 \x03(\v28.io.clbs.openhes.models.acquisition.DeviceConnectionInfoR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"S\n" +
	"\x0fFieldValuesList\x12@\n" +
	"\x05items\x18\x01 \x03(\v2*.io.clbs.openhes.models.common.FieldValuesR\x05items\"\xd4\x02\n" +
	"\x11AttributeSelector\x12\x19\n" +
	"\bfield_id\x18\x01 \x01(\tR\afieldId\x12I\n" +
	"\boperator\x18\x02 \x01(\x0e2-.io.clbs.openhes.models.common.FilterOperatorR\boperator\x12I\n" +
	"\tdata_type\x18\x03 \x01(\x0e2,.io.clbs.openhes.models.common.FieldDataTypeR\bdataType\x12\x12\n" +
	"\x04text\x18\x04 \x03(\tR\x04text\x12\x18\n" +
	"\ainteger\x18\x05 \x03(\x12R\ainteger\x12\x16\n" +
	"\x06number\x18\x06 \x03(\x01R\x06number\x12\x18\n" +
	"\aboolean\x18\a \x03(\bR\aboolean\x12.\n" +
	"\x04date\x18\b \x03(\v2\x1a.google.protobuf.TimestampR\x04date\"p\n" +
	"\x17DeviceAttributeSelector\x12U\n" +
	"\n" +
	"attributes\x18\x02 \x03(\v25.io.clbs.openhes.models.acquisition.AttributeSelectorR\n" +
	"attributes\"\xd6\x01\n" +
	"\"CommunicationUnitAttributeSelector\x12Y\n" +
	"\rlink_protocol\x18\x01 \x01(\x0e24.io.clbs.openhes.models.acquisition.DataLinkProtocolR\flinkProtocol\x12U\n" +
	"\n" +
	"attributes\x18\x02 \x03(\v25.io.clbs.openhes.models.acquisition.AttributeSelectorR\n" +
	"attributes\"\xd9\x02\n" +
	"\fActionResult\x12\x1b\n" +
	"\taction_id\x18\x01 \x01(\tR\bactionId\x12L\n" +
	"\x06status\x18\x02 \x01(\x0e24.io.clbs.openhes.models.acquisition.ActionResultCodeR\x06status\x12B\n" +
	"\x04data\x18\x03 \x01(\v2..io.clbs.openhes.models.acquisition.ActionDataR\x04data\x12\x1f\n" +
	"\vregister_id\x18\x04 \x01(\tR\n" +
	"registerId\x12#\n" +
	"\rvariable_name\x18\x05 \x03(\tR\fvariableName\x12T\n" +
	"\rerror_message\x18\x06 \x01(\v2/.io.clbs.openhes.models.common.FormattedMessageR\ferrorMessage\"%\n" +
	"\fJobEventData\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\fR\x05jobId\"\xd5\x01\n" +
	"\n" +
	"DeviceSpec\x12\x15\n" +
	"\x06dct_id\x18\x01 \x01(\tR\x05dctId\x12\x1f\n" +
	"\vexternal_id\x18\x02 \x01(\tR\n" +
	"externalId\x12s\n" +
	"\x17communication_unit_link\x18\x03 \x03(\v2;.io.clbs.openhes.models.acquisition.DeviceCommunicationUnitR\x15communicationUnitLink\x12\x1a\n" +
	"\btimezone\x18\x04 \x01(\tR\btimezone\"s\n" +
	"\fDeviceStatus\x12B\n" +
	"\x04info\x18\x01 \x01(\v2..io.clbs.openhes.models.acquisition.DeviceInfoR\x04info\x12\x1f\n" +
	"\vdriver_type\x18\x02 \x01(\tR\n" +
	"driverType\"\x80\x03\n" +
	"\x17DeviceCommunicationUnit\x122\n" +
	"\x15communication_unit_id\x18\x01 \x01(\tR\x13communicationUnitId\x12Z\n" +
	"\fapp_protocol\x18\x02 \x01(\x0e27.io.clbs.openhes.models.acquisition.ApplicationProtocolR\vappProtocol\x12k\n" +
	"\n" +
	"attributes\x18\x03 \x03(\v2K.io.clbs.openhes.models.acquisition.DeviceCommunicationUnit.AttributesEntryR\n" +
	"attributes\x1ah\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12?\n" +
	"\x05value\x18\x02 \x01(\v2).io.clbs.openhes.models.common.FieldValueR\x05value:\x028\x01\"\xf5\x02\n" +
	"\aJobSpec\x12E\n" +
	"\x06device\x18\x02 \x01(\v2-.io.clbs.openhes.models.acquisition.JobDeviceR\x06device\x12R\n" +
	"\fjob_settings\x18\x03 \x01(\v2/.io.clbs.openhes.models.acquisition.JobSettingsR\vjobSettings\x12\x1f\n" +
	"\vdriver_type\x18\x04 \x01(\tR\n" +
	"driverType\x12N\n" +
	"\vjob_actions\x18\x05 \x03(\v2-.io.clbs.openhes.models.acquisition.JobActionR\n" +
	"jobActions\x12^\n" +
	"\x0fjob_action_info\x18\x06 \x03(\v26.io.clbs.openhes.models.acquisition.JobActionMapRecordR\rjobActionInfo\"\xab\x01\n" +
	"\x12JobActionMapRecord\x12!\n" +
	"\faction_index\x18\x01 \x01(\x05R\vactionIndex\x12\x1f\n" +
	"\vregister_id\x18\x03 \x01(\x03R\n" +
	"registerId\x12,\n" +
	"\x12public_register_id\x18\x02 \x01(\tR\x10publicRegisterId\x12#\n" +
	"\rvariable_name\x18\x04 \x03(\tR\fvariableName\"\x9d\x01\n" +
	"\x13JobDoneNotification\x12?\n" +
	"\x04spec\x18\x01 \x01(\v2+.io.clbs.openhes.models.acquisition.JobSpecR\x04spec\x12E\n" +
	"\x06status\x18\x02 \x01(\v2-.io.clbs.openhes.models.acquisition.JobStatusR\x06status\"G\n" +
	"\n" +
	"DriverInfo\x12\x1f\n" +
	"\vdriver_type\x18\x01 \x01(\tR\n" +
	"driverType\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"\xb3\x01\n" +
	"\x11CommunicationUnit\x12M\n" +
	"\x04spec\x18\x01 \x01(\v29.io.clbs.openhes.models.acquisition.CommunicationUnitSpecR\x04spec\x12I\n" +
	"\bmetadata\x18\x03 \x01(\v2-.io.clbs.openhes.models.common.MetadataFieldsR\bmetadataJ\x04\b\x02\x10\x03\"\x95\x01\n" +
	"\x15CommunicationUnitSpec\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12[\n" +
	"\x0fconnection_info\x18\x02 \x01(\v22.io.clbs.openhes.models.acquisition.ConnectionInfoR\x0econnectionInfo\"\xb7\x01\n" +
	"\x10CommunicationBus\x12R\n" +
	"\x06status\x18\x02 \x01(\v2:.io.clbs.openhes.models.acquisition.CommunicationBusStatusR\x06status\x12I\n" +
	"\bmetadata\x18\x03 \x01(\v2-.io.clbs.openhes.models.common.MetadataFieldsR\bmetadataJ\x04\b\x01\x10\x02\"L\n" +
	"\x16CommunicationBusStatus\x122\n" +
	"\x15communication_unit_id\x18\x01 \x03(\tR\x13communicationUnitId\"\xb7\x01\n" +
	"\fTopologyNode\x12\x11\n" +
	"\x04x_id\x18\x01 \x01(\x03R\x03xId\x12H\n" +
	"\x04type\x18\x02 \x01(\x0e24.io.clbs.openhes.models.acquisition.TopologyNodeTypeR\x04type\x12J\n" +
	"\n" +
	"attributes\x18\x03 \x01(\v2*.io.clbs.openhes.models.common.FieldValuesR\n" +
	"attributes\"\x8e\x01\n" +
	"\fTopologyEdge\x12\x1a\n" +
	"\tfrom_x_id\x18\x01 \x01(\x03R\afromXId\x12\x16\n" +
	"\ato_x_id\x18\x02 \x01(\x03R\x05toXId\x12J\n" +
	"\n" +
	"attributes\x18\x03 \x01(\v2*.io.clbs.openhes.models.common.FieldValuesR\n" +
	"attributes\"\x9c\x01\n" +
	"\n" +
	"NetworkMap\x12F\n" +
	"\x05nodes\x18\x01 \x03(\v20.io.clbs.openhes.models.acquisition.TopologyNodeR\x05nodes\x12F\n" +
	"\x05edges\x18\x02 \x03(\v20.io.clbs.openhes.models.acquisition.TopologyEdgeR\x05edges\"\xfe\x01\n" +
	"\x1aCommunicationUnitLogRecord\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x15communication_unit_id\x18\x02 \x01(\tR\x13communicationUnitId\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12H\n" +
	"\x05level\x18\x04 \x01(\x0e22.io.clbs.openhes.models.acquisition.LogRecordLevelR\x05level\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"\x99\x01\n" +
	" ListOfCommunicationUnitLogRecord\x12T\n" +
	"\x05items\x18\x01 \x03(\v2>.io.clbs.openhes.models.acquisition.CommunicationUnitLogRecordR\x05items\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount*\xc1\x01\n" +
	"\vJobPriority\x12\x12\n" +
	"\x0eJOB_PRIORITY_0\x10\x00\x12\x12\n" +
	"\x0eJOB_PRIORITY_1\x10\x01\x12\x12\n" +
	"\x0eJOB_PRIORITY_2\x10\x02\x12\x12\n" +
	"\x0eJOB_PRIORITY_3\x10\x03\x12\x12\n" +
	"\x0eJOB_PRIORITY_4\x10\x04\x12\x12\n" +
	"\x0eJOB_PRIORITY_5\x10\x05\x12\x12\n" +
	"\x0eJOB_PRIORITY_6\x10\x06\x12\x12\n" +
	"\x0eJOB_PRIORITY_7\x10\a\x12\x12\n" +
	"\x0eJOB_PRIORITY_8\x10\b*Q\n" +
	"\x0eReadPathPolicy\x12 \n" +
	"\x1cREAD_PATH_POLICY_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vMETER_FIRST\x10\x01\x12\f\n" +
	"\bDC_FIRST\x10\x02*i\n" +
	"\x12SerialConfigParity\x12\x0f\n" +
	"\vPARITY_NONE\x10\x00\x12\x0f\n" +
	"\vPARITY_EVEN\x10\x01\x12\x0e\n" +
	"\n" +
	"PARITY_ODD\x10\x02\x12\x0f\n" +
	"\vPARITY_MARK\x10\x03\x12\x10\n" +
	"\fPARITY_SPACE\x10\x04*\xcb\x02\n" +
	"\x14SerialConfigBaudRate\x12\x11\n" +
	"\rBAUD_RATE_110\x10\x00\x12\x11\n" +
	"\rBAUD_RATE_300\x10\x01\x12\x11\n" +
	"\rBAUD_RATE_600\x10\x02\x12\x12\n" +
	"\x0eBAUD_RATE_1200\x10\x03\x12\x12\n" +
	"\x0eBAUD_RATE_2400\x10\x04\x12\x12\n" +
	"\x0eBAUD_RATE_4800\x10\x05\x12\x12\n" +
	"\x0eBAUD_RATE_9600\x10\x06\x12\x13\n" +
	"\x0fBAUD_RATE_14400\x10\a\x12\x13\n" +
	"\x0fBAUD_RATE_19200\x10\b\x12\x13\n" +
	"\x0fBAUD_RATE_38400\x10\t\x12\x13\n" +
	"\x0fBAUD_RATE_57600\x10\n" +
	"\x12\x14\n" +
	"\x10BAUD_RATE_115200\x10\v\x12\x14\n" +
	"\x10BAUD_RATE_230400\x10\f\x12\x14\n" +
	"\x10BAUD_RATE_460800\x10\r\x12\x14\n" +
	"\x10BAUD_RATE_921600\x10\x0e*Z\n" +
	"\x14SerialConfigDataBits\x12\x0f\n" +
	"\vDATA_BITS_5\x10\x00\x12\x0f\n" +
	"\vDATA_BITS_6\x10\x01\x12\x0f\n" +
	"\vDATA_BITS_7\x10\x02\x12\x0f\n" +
	"\vDATA_BITS_8\x10\x03*K\n" +
	"\x14SerialConfigStopBits\x12\x0f\n" +
	"\vSTOP_BITS_1\x10\x00\x12\x11\n" +
	"\rSTOP_BITS_1_5\x10\x01\x12\x0f\n" +
	"\vSTOP_BITS_2\x10\x02*\xca\x01\n" +
	"\x11CommunicationType\x12\x1c\n" +
	"\x18COMMUNICATION_TYPE_TCPIP\x10\x00\x12!\n" +
	"\x1dCOMMUNICATION_TYPE_MODEM_POOL\x10\x01\x12)\n" +
	"%COMMUNICATION_TYPE_SERIAL_LINE_DIRECT\x10\x02\x12'\n" +
	"#COMMUNICATION_TYPE_SERIAL_LINE_MOXA\x10\x03\x12 \n" +
	"\x1cCOMMUNICATION_TYPE_LISTENING\x10c*\xbd\x01\n" +
	"\x10DataLinkProtocol\x12\x1a\n" +
	"\x16LINKPROTO_IEC_62056_21\x10\x00\x12\x12\n" +
	"\x0eLINKPROTO_HDLC\x10\x01\x12\x1b\n" +
	"\x17LINKPROTO_COSEM_WRAPPER\x10\x02\x12\x14\n" +
	"\x10LINKPROTO_MODBUS\x10\x03\x12\x12\n" +
	"\x0eLINKPROTO_MBUS\x10\x04\x12\x14\n" +
	"\x10LINKPROTO_VIKTOR\x10\x05\x12\x1c\n" +
	"\x18LINKPROTO_NOT_APPLICABLE\x10c*\xd6\x01\n" +
	"\x13ApplicationProtocol\x12\x19\n" +
	"\x15APPPROTO_IEC_62056_21\x10\x00\x12\x14\n" +
	"\x10APPPROTO_DLMS_SN\x10\x01\x12\x14\n" +
	"\x10APPPROTO_DLMS_LN\x10\x02\x12\x11\n" +
	"\rAPPPROTO_SCTM\x10\x03\x12\x13\n" +
	"\x0fAPPPROTO_LIS200\x10\x04\x12\x15\n" +
	"\x11APPPROTO_ANSI_C12\x10\x05\x12\x11\n" +
	"\rAPPPROTO_MQTT\x10\x06\x12\x13\n" +
	"\x0fAPPPROTO_MODBUS\x10\a\x12\x11\n" +
	"\rAPPPROTO_MBUS\x10\b*\xd3\x03\n" +
	"\n" +
	"ActionType\x12\x1c\n" +
	"\x18ACTION_TYPE_GET_REGISTER\x10\x00\x12&\n" +
	"\"ACTION_TYPE_GET_PERIODICAL_PROFILE\x10\x01\x12%\n" +
	"!ACTION_TYPE_GET_IRREGULAR_PROFILE\x10\x02\x12\x1a\n" +
	"\x16ACTION_TYPE_GET_EVENTS\x10\x03\x12\x1f\n" +
	"\x1bACTION_TYPE_GET_DEVICE_INFO\x10\n" +
	"\x12\x1a\n" +
	"\x16ACTION_TYPE_SYNC_CLOCK\x10\v\x12\x1f\n" +
	"\x1bACTION_TYPE_SET_RELAY_STATE\x10\x15\x12&\n" +
	"\"ACTION_TYPE_GET_DISCONNECTOR_STATE\x10\x16\x12&\n" +
	"\"ACTION_TYPE_SET_DISCONNECTOR_STATE\x10\x17\x12\x17\n" +
	"\x13ACTION_TYPE_GET_TOU\x10\x18\x12\x17\n" +
	"\x13ACTION_TYPE_SET_TOU\x10\x19\x12\x1b\n" +
	"\x17ACTION_TYPE_SET_LIMITER\x10\x1b\x12$\n" +
	" ACTION_TYPE_RESET_BILLING_PERIOD\x10(\x12\x19\n" +
	"\x15ACTION_TYPE_FW_UPDATE\x102*\x8b\x01\n" +
	"\x10ActionResultCode\x12\x18\n" +
	"\x14ERROR_CODE_ACTION_OK\x10\x00\x12!\n" +
	"\x1dERROR_CODE_ACTION_UNSUPPORTED\x10\x01\x12\x1d\n" +
	"\x19ERROR_CODE_ACTION_PENDING\x10\x03\x12\x1b\n" +
	"\x17ERROR_CODE_ACTION_ERROR\x10\x05*\x97\x01\n" +
	"\fJobErrorCode\x12\x17\n" +
	"\x13JOB_ERROR_CODE_NONE\x10\x00\x12\x17\n" +
	"\x13JOB_ERROR_CODE_BUSY\x10\x01\x12\x18\n" +
	"\x14JOB_ERROR_CODE_ERROR\x10\x05\x12!\n" +
	"\x1dJOB_ERROR_CODE_ALREADY_EXISTS\x10\b\x12\x18\n" +
	"\x14JOB_ERROR_CODE_FATAL\x10\t*\x90\x01\n" +
	"\x0eBulkStatusCode\x12\x16\n" +
	"\x12BULK_STATUS_QUEUED\x10\x00\x12\x17\n" +
	"\x13BULK_STATUS_RUNNING\x10\x01\x12\x19\n" +
	"\x15BULK_STATUS_COMPLETED\x10\x02\x12\x19\n" +
	"\x15BULK_STATUS_CANCELLED\x10\x03\x12\x17\n" +
	"\x13BULK_STATUS_EXPIRED\x10\x04*k\n" +
	"\x1fDeviceConfigurationRegisterKind\x12\f\n" +
	"\bRegister\x10\x00\x12\x15\n" +
	"\x11PeriodicalProfile\x10\x01\x12\x14\n" +
	"\x10IrregularProfile\x10\x02\x12\r\n" +
	"\tSynthetic\x10c*\xc1\x01\n" +
	"\rJobStatusCode\x12\x15\n" +
	"\x11JOB_STATUS_QUEUED\x10\x00\x12\x16\n" +
	"\x12JOB_STATUS_RUNNING\x10\x01\x12\x1e\n" +
	"\x1aJOB_STATUS_PROCESSING_DATA\x10\x02\x12\x18\n" +
	"\x14JOB_STATUS_COMPLETED\x10\x03\x12\x15\n" +
	"\x11JOB_STATUS_FAILED\x10\x04\x12\x18\n" +
	"\x14JOB_STATUS_CANCELLED\x10\x05\x12\x16\n" +
	"\x12JOB_STATUS_EXPIRED\x10\x06*R\n" +
	"\x10TopologyNodeType\x12\x18\n" +
	"\x14TOPOLOGY_NODE_DEVICE\x10\x00\x12$\n" +
	" TOPOLOGY_NODE_COMMUNICATION_UNIT\x10\x01*\x9d\x01\n" +
	"\x0eLogRecordLevel\x12\x1a\n" +
	"\x16LOG_RECORD_LEVEL_DEBUG\x10\x00\x12\x19\n" +
	"\x15LOG_RECORD_LEVEL_INFO\x10\x01\x12\x1c\n" +
	"\x18LOG_RECORD_LEVEL_WARNING\x10\x02\x12\x1a\n" +
	"\x16LOG_RECORD_LEVEL_ERROR\x10\x03\x12\x1a\n" +
	"\x16LOG_RECORD_LEVEL_FATAL\x10\x04B:Z8github.com/cybroslabs/ouro-api-shared/gen/go/acquisitionb\beditionsp\xe8\a"

var file_acquisition_shared_proto_enumTypes = make([]protoimpl.EnumInfo, 17)
var file_acquisition_shared_proto_msgTypes = make([]protoimpl.MessageInfo, 90)
var file_acquisition_shared_proto_goTypes = []any{
	(JobPriority)(0),                           // 0: io.clbs.openhes.models.acquisition.JobPriority
	(ReadPathPolicy)(0),                        // 1: io.clbs.openhes.models.acquisition.ReadPathPolicy
	(SerialConfigParity)(0),                    // 2: io.clbs.openhes.models.acquisition.SerialConfigParity
	(SerialConfigBaudRate)(0),                  // 3: io.clbs.openhes.models.acquisition.SerialConfigBaudRate
	(SerialConfigDataBits)(0),                  // 4: io.clbs.openhes.models.acquisition.SerialConfigDataBits
	(SerialConfigStopBits)(0),                  // 5: io.clbs.openhes.models.acquisition.SerialConfigStopBits
	(CommunicationType)(0),                     // 6: io.clbs.openhes.models.acquisition.CommunicationType
	(DataLinkProtocol)(0),                      // 7: io.clbs.openhes.models.acquisition.DataLinkProtocol
	(ApplicationProtocol)(0),                   // 8: io.clbs.openhes.models.acquisition.ApplicationProtocol
	(ActionType)(0),                            // 9: io.clbs.openhes.models.acquisition.ActionType
	(ActionResultCode)(0),                      // 10: io.clbs.openhes.models.acquisition.ActionResultCode
	(JobErrorCode)(0),                          // 11: io.clbs.openhes.models.acquisition.JobErrorCode
	(BulkStatusCode)(0),                        // 12: io.clbs.openhes.models.acquisition.BulkStatusCode
	(DeviceConfigurationRegisterKind)(0),       // 13: io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterKind
	(JobStatusCode)(0),                         // 14: io.clbs.openhes.models.acquisition.JobStatusCode
	(TopologyNodeType)(0),                      // 15: io.clbs.openhes.models.acquisition.TopologyNodeType
	(LogRecordLevel)(0),                        // 16: io.clbs.openhes.models.acquisition.LogRecordLevel
	(*JobSettings)(nil),                        // 17: io.clbs.openhes.models.acquisition.JobSettings
	(*JobAction)(nil),                          // 18: io.clbs.openhes.models.acquisition.JobAction
	(*JobActionSet)(nil),                       // 19: io.clbs.openhes.models.acquisition.JobActionSet
	(*ListOfJobDevice)(nil),                    // 20: io.clbs.openhes.models.acquisition.ListOfJobDevice
	(*ListOfJobDeviceId)(nil),                  // 21: io.clbs.openhes.models.acquisition.ListOfJobDeviceId
	(*JobDeviceId)(nil),                        // 22: io.clbs.openhes.models.acquisition.JobDeviceId
	(*JobDevice)(nil),                          // 23: io.clbs.openhes.models.acquisition.JobDevice
	(*ModemInfo)(nil),                          // 24: io.clbs.openhes.models.acquisition.ModemInfo
	(*SerialConfig)(nil),                       // 25: io.clbs.openhes.models.acquisition.SerialConfig
	(*ConnectionInfo)(nil),                     // 26: io.clbs.openhes.models.acquisition.ConnectionInfo
	(*ConnectionTypeDirectTcpIp)(nil),          // 27: io.clbs.openhes.models.acquisition.ConnectionTypeDirectTcpIp
	(*ConnectionTypeModemPool)(nil),            // 28: io.clbs.openhes.models.acquisition.ConnectionTypeModemPool
	(*ConnectionTypeSerialDirect)(nil),         // 29: io.clbs.openhes.models.acquisition.ConnectionTypeSerialDirect
	(*ConnectionTypeSerialMoxa)(nil),           // 30: io.clbs.openhes.models.acquisition.ConnectionTypeSerialMoxa
	(*ConnectionTypeSerialRfc2217)(nil),        // 31: io.clbs.openhes.models.acquisition.ConnectionTypeSerialRfc2217
	(*ApplicationProtocolTemplate)(nil),        // 32: io.clbs.openhes.models.acquisition.ApplicationProtocolTemplate
	(*DataLinkTemplate)(nil),                   // 33: io.clbs.openhes.models.acquisition.DataLinkTemplate
	(*CommunicationTemplate)(nil),              // 34: io.clbs.openhes.models.acquisition.CommunicationTemplate
	(*AccessLevelTemplate)(nil),                // 35: io.clbs.openhes.models.acquisition.AccessLevelTemplate
	(*DriverTemplates)(nil),                    // 36: io.clbs.openhes.models.acquisition.DriverTemplates
	(*ActionProgressUpdate)(nil),               // 37: io.clbs.openhes.models.acquisition.ActionProgressUpdate
	(*JobProgressUpdate)(nil),                  // 38: io.clbs.openhes.models.acquisition.JobProgressUpdate
	(*ActionData)(nil),                         // 39: io.clbs.openhes.models.acquisition.ActionData
	(*EventRecords)(nil),                       // 40: io.clbs.openhes.models.acquisition.EventRecords
	(*EventRecord)(nil),                        // 41: io.clbs.openhes.models.acquisition.EventRecord
	(*DeviceEventRecord)(nil),                  // 42: io.clbs.openhes.models.acquisition.DeviceEventRecord
	(*DeviceEvents)(nil),                       // 43: io.clbs.openhes.models.acquisition.DeviceEvents
	(*DeviceInfo)(nil),                         // 44: io.clbs.openhes.models.acquisition.DeviceInfo
	(*ProfileValues)(nil),                      // 45: io.clbs.openhes.models.acquisition.ProfileValues
	(*IrregularProfileValues)(nil),             // 46: io.clbs.openhes.models.acquisition.IrregularProfileValues
	(*IrregularValue)(nil),                     // 47: io.clbs.openhes.models.acquisition.IrregularValue
	(*ProfileBlock)(nil),                       // 48: io.clbs.openhes.models.acquisition.ProfileBlock
	(*RegisterValues)(nil),                     // 49: io.clbs.openhes.models.acquisition.RegisterValues
	(*RegisterValue)(nil),                      // 50: io.clbs.openhes.models.acquisition.RegisterValue
	(*MeasuredValue)(nil),                      // 51: io.clbs.openhes.models.acquisition.MeasuredValue
	(*JobActionAttributes)(nil),                // 52: io.clbs.openhes.models.acquisition.JobActionAttributes
	(*ConnectionTypeControlledSerial)(nil),     // 53: io.clbs.openhes.models.acquisition.ConnectionTypeControlledSerial
	(*ActionGetRegister)(nil),                  // 54: io.clbs.openhes.models.acquisition.ActionGetRegister
	(*ActionGetPeriodicalProfile)(nil),         // 55: io.clbs.openhes.models.acquisition.ActionGetPeriodicalProfile
	(*ActionGetIrregularProfile)(nil),          // 56: io.clbs.openhes.models.acquisition.ActionGetIrregularProfile
	(*ActionGetEvents)(nil),                    // 57: io.clbs.openhes.models.acquisition.ActionGetEvents
	(*ActionGetDeviceInfo)(nil),                // 58: io.clbs.openhes.models.acquisition.ActionGetDeviceInfo
	(*ActionSyncClock)(nil),                    // 59: io.clbs.openhes.models.acquisition.ActionSyncClock
	(*ActionSetRelayState)(nil),                // 60: io.clbs.openhes.models.acquisition.ActionSetRelayState
	(*ActionSetDisconnectorState)(nil),         // 61: io.clbs.openhes.models.acquisition.ActionSetDisconnectorState
	(*ActionGetTou)(nil),                       // 62: io.clbs.openhes.models.acquisition.ActionGetTou
	(*ActionSetTou)(nil),                       // 63: io.clbs.openhes.models.acquisition.ActionSetTou
	(*ActionSetLimiter)(nil),                   // 64: io.clbs.openhes.models.acquisition.ActionSetLimiter
	(*ActionResetBillingPeriod)(nil),           // 65: io.clbs.openhes.models.acquisition.ActionResetBillingPeriod
	(*ActionFwUpdate)(nil),                     // 66: io.clbs.openhes.models.acquisition.ActionFwUpdate
	(*JobActionContraints)(nil),                // 67: io.clbs.openhes.models.acquisition.JobActionContraints
	(*JobStatus)(nil),                          // 68: io.clbs.openhes.models.acquisition.JobStatus
	(*StartJobData)(nil),                       // 69: io.clbs.openhes.models.acquisition.StartJobData
	(*CancelJobRequest)(nil),                   // 70: io.clbs.openhes.models.acquisition.CancelJobRequest
	(*DeviceConfigurationRegisterSpec)(nil),    // 71: io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpec
	(*DeviceRegister)(nil),                     // 72: io.clbs.openhes.models.acquisition.DeviceRegister
	(*DeviceConnectionInfo)(nil),               // 73: io.clbs.openhes.models.acquisition.DeviceConnectionInfo
	(*ListOfModemInfo)(nil),                    // 74: io.clbs.openhes.models.acquisition.ListOfModemInfo
	(*ListOfConnectionInfo)(nil),               // 75: io.clbs.openhes.models.acquisition.ListOfConnectionInfo
	(*FieldValuesList)(nil),                    // 76: io.clbs.openhes.models.acquisition.FieldValuesList
	(*AttributeSelector)(nil),                  // 77: io.clbs.openhes.models.acquisition.AttributeSelector
	(*DeviceAttributeSelector)(nil),            // 78: io.clbs.openhes.models.acquisition.DeviceAttributeSelector
	(*CommunicationUnitAttributeSelector)(nil), // 79: io.clbs.openhes.models.acquisition.CommunicationUnitAttributeSelector
	(*ActionResult)(nil),                       // 80: io.clbs.openhes.models.acquisition.ActionResult
	(*JobEventData)(nil),                       // 81: io.clbs.openhes.models.acquisition.JobEventData
	(*DeviceSpec)(nil),                         // 82: io.clbs.openhes.models.acquisition.DeviceSpec
	(*DeviceStatus)(nil),                       // 83: io.clbs.openhes.models.acquisition.DeviceStatus
	(*DeviceCommunicationUnit)(nil),            // 84: io.clbs.openhes.models.acquisition.DeviceCommunicationUnit
	(*JobSpec)(nil),                            // 85: io.clbs.openhes.models.acquisition.JobSpec
	(*JobActionMapRecord)(nil),                 // 86: io.clbs.openhes.models.acquisition.JobActionMapRecord
	(*JobDoneNotification)(nil),                // 87: io.clbs.openhes.models.acquisition.JobDoneNotification
	(*DriverInfo)(nil),                         // 88: io.clbs.openhes.models.acquisition.DriverInfo
	(*CommunicationUnit)(nil),                  // 89: io.clbs.openhes.models.acquisition.CommunicationUnit
	(*CommunicationUnitSpec)(nil),              // 90: io.clbs.openhes.models.acquisition.CommunicationUnitSpec
	(*CommunicationBus)(nil),                   // 91: io.clbs.openhes.models.acquisition.CommunicationBus
	(*CommunicationBusStatus)(nil),             // 92: io.clbs.openhes.models.acquisition.CommunicationBusStatus
	(*TopologyNode)(nil),                       // 93: io.clbs.openhes.models.acquisition.TopologyNode
	(*TopologyEdge)(nil),                       // 94: io.clbs.openhes.models.acquisition.TopologyEdge
	(*NetworkMap)(nil),                         // 95: io.clbs.openhes.models.acquisition.NetworkMap
	(*CommunicationUnitLogRecord)(nil),         // 96: io.clbs.openhes.models.acquisition.CommunicationUnitLogRecord
	(*ListOfCommunicationUnitLogRecord)(nil),   // 97: io.clbs.openhes.models.acquisition.ListOfCommunicationUnitLogRecord
	nil,                                        // 98: io.clbs.openhes.models.acquisition.JobAction.AttributesEntry
	nil,                                        // 99: io.clbs.openhes.models.acquisition.JobDevice.DeviceAttributesEntry
	nil,                                        // 100: io.clbs.openhes.models.acquisition.ConnectionInfo.AttributesEntry
	nil,                                        // 101: io.clbs.openhes.models.acquisition.JobActionContraints.GetRegisterTypeNameEntry
	nil,                                        // 102: io.clbs.openhes.models.acquisition.JobActionContraints.GetRegisterTypeAttributesEntry
	nil,                                        // 103: io.clbs.openhes.models.acquisition.StartJobData.DeviceAttributesEntry
	nil,                                        // 104: io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpec.AttributesEntry
	nil,                                        // 105: io.clbs.openhes.models.acquisition.DeviceConnectionInfo.DeviceAttributesEntry
	nil,                                        // 106: io.clbs.openhes.models.acquisition.DeviceCommunicationUnit.AttributesEntry
	(*durationpb.Duration)(nil),                // 107: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),              // 108: google.protobuf.Timestamp
	(*common.FieldDescriptor)(nil),             // 109: io.clbs.openhes.models.common.FieldDescriptor
	(*common.FormattedMessage)(nil),            // 110: io.clbs.openhes.models.common.FormattedMessage
	(*emptypb.Empty)(nil),                      // 111: google.protobuf.Empty
	(*timeofuse.TimeOfUseTableSpec)(nil),       // 112: io.clbs.openhes.models.acquisition.timeofuse.TimeOfUseTableSpec
	(common.FieldDataType)(0),                  // 113: io.clbs.openhes.models.common.FieldDataType
	(*common.FieldValues)(nil),                 // 114: io.clbs.openhes.models.common.FieldValues
	(common.FilterOperator)(0),                 // 115: io.clbs.openhes.models.common.FilterOperator
	(*common.MetadataFields)(nil),              // 116: io.clbs.openhes.models.common.MetadataFields
	(*common.FieldValue)(nil),                  // 117: io.clbs.openhes.models.common.FieldValue
	(*common.ListOfString)(nil),                // 118: io.clbs.openhes.models.common.ListOfString
}
var file_acquisition_shared_proto_depIdxs = []int32{
	107, // 0: io.clbs.openhes.models.acquisition.JobSettings.max_duration:type_name -> google.protobuf.Duration
	0,   // 1: io.clbs.openhes.models.acquisition.JobSettings.priority:type_name -> io.clbs.openhes.models.acquisition.JobPriority
	107, // 2: io.clbs.openhes.models.acquisition.JobSettings.retry_delay:type_name -> google.protobuf.Duration
	107, // 3: io.clbs.openhes.models.acquisition.JobSettings.defer_start:type_name -> google.protobuf.Duration
	108, // 4: io.clbs.openhes.models.acquisition.JobSettings.expires_at:type_name -> google.protobuf.Timestamp
	1,   // 5: io.clbs.openhes.models.acquisition.JobSettings.read_path_policy:type_name -> io.clbs.openhes.models.acquisition.ReadPathPolicy
	98,  // 6: io.clbs.openhes.models.acquisition.JobAction.attributes:type_name -> io.clbs.openhes.models.acquisition.JobAction.AttributesEntry
	54,  // 7: io.clbs.openhes.models.acquisition.JobAction.get_register:type_name -> io.clbs.openhes.models.acquisition.ActionGetRegister
	55,  // 8: io.clbs.openhes.models.acquisition.JobAction.get_periodical_profile:type_name -> io.clbs.openhes.models.acquisition.ActionGetPeriodicalProfile
	56,  // 9: io.clbs.openhes.models.acquisition.JobAction.get_irregular_profile:type_name -> io.clbs.openhes.models.acquisition.ActionGetIrregularProfile
	57,  // 10: io.clbs.openhes.models.acquisition.JobAction.get_events:type_name -> io.clbs.openhes.models.acquisition.ActionGetEvents
	58,  // 11: io.clbs.openhes.models.acquisition.JobAction.get_device_info:type_name -> io.clbs.openhes.models.acquisition.ActionGetDeviceInfo
	59,  // 12: io.clbs.openhes.models.acquisition.JobAction.sync_clock:type_name -> io.clbs.openhes.models.acquisition.ActionSyncClock
	60,  // 13: io.clbs.openhes.models.acquisition.JobAction.set_relay_state:type_name -> io.clbs.openhes.models.acquisition.ActionSetRelayState
	61,  // 14: io.clbs.openhes.models.acquisition.JobAction.set_disconnector_state:type_name -> io.clbs.openhes.models.acquisition.ActionSetDisconnectorState
	62,  // 15: io.clbs.openhes.models.acquisition.JobAction.get_tou:type_name -> io.clbs.openhes.models.acquisition.ActionGetTou
	63,  // 16: io.clbs.openhes.models.acquisition.JobAction.set_tou:type_name -> io.clbs.openhes.models.acquisition.ActionSetTou
	64,  // 17: io.clbs.openhes.models.acquisition.JobAction.set_limiter:type_name -> io.clbs.openhes.models.acquisition.ActionSetLimiter
	65,  // 18: io.clbs.openhes.models.acquisition.JobAction.reset_billing_period:type_name -> io.clbs.openhes.models.acquisition.ActionResetBillingPeriod
	66,  // 19: io.clbs.openhes.models.acquisition.JobAction.fw_update:type_name -> io.clbs.openhes.models.acquisition.ActionFwUpdate
	54,  // 20: io.clbs.openhes.models.acquisition.JobActionSet.get_register:type_name -> io.clbs.openhes.models.acquisition.ActionGetRegister
	55,  // 21: io.clbs.openhes.models.acquisition.JobActionSet.get_periodical_profile:type_name -> io.clbs.openhes.models.acquisition.ActionGetPeriodicalProfile
	56,  // 22: io.clbs.openhes.models.acquisition.JobActionSet.get_irregular_profile:type_name -> io.clbs.openhes.models.acquisition.ActionGetIrregularProfile
	57,  // 23: io.clbs.openhes.models.acquisition.JobActionSet.get_events:type_name -> io.clbs.openhes.models.acquisition.ActionGetEvents
	58,  // 24: io.clbs.openhes.models.acquisition.JobActionSet.get_device_info:type_name -> io.clbs.openhes.models.acquisition.ActionGetDeviceInfo
	59,  // 25: io.clbs.openhes.models.acquisition.JobActionSet.sync_clock:type_name -> io.clbs.openhes.models.acquisition.ActionSyncClock
	60,  // 26: io.clbs.openhes.models.acquisition.JobActionSet.set_relay_state:type_name -> io.clbs.openhes.models.acquisition.ActionSetRelayState
	61,  // 27: io.clbs.openhes.models.acquisition.JobActionSet.set_disconnector_state:type_name -> io.clbs.openhes.models.acquisition.ActionSetDisconnectorState
	62,  // 28: io.clbs.openhes.models.acquisition.JobActionSet.get_tou:type_name -> io.clbs.openhes.models.acquisition.ActionGetTou
	63,  // 29: io.clbs.openhes.models.acquisition.JobActionSet.set_tou:type_name -> io.clbs.openhes.models.acquisition.ActionSetTou
	64,  // 30: io.clbs.openhes.models.acquisition.JobActionSet.set_limiter:type_name -> io.clbs.openhes.models.acquisition.ActionSetLimiter
	65,  // 31: io.clbs.openhes.models.acquisition.JobActionSet.reset_billing_period:type_name -> io.clbs.openhes.models.acquisition.ActionResetBillingPeriod
	66,  // 32: io.clbs.openhes.models.acquisition.JobActionSet.fw_update:type_name -> io.clbs.openhes.models.acquisition.ActionFwUpdate
	23,  // 33: io.clbs.openhes.models.acquisition.ListOfJobDevice.list:type_name -> io.clbs.openhes.models.acquisition.JobDevice
	22,  // 34: io.clbs.openhes.models.acquisition.ListOfJobDeviceId.list:type_name -> io.clbs.openhes.models.acquisition.JobDeviceId
	99,  // 35: io.clbs.openhes.models.acquisition.JobDevice.device_attributes:type_name -> io.clbs.openhes.models.acquisition.JobDevice.DeviceAttributesEntry
	26,  // 36: io.clbs.openhes.models.acquisition.JobDevice.connection_info:type_name -> io.clbs.openhes.models.acquisition.ConnectionInfo
	8,   // 37: io.clbs.openhes.models.acquisition.JobDevice.app_protocol:type_name -> io.clbs.openhes.models.acquisition.ApplicationProtocol
	107, // 38: io.clbs.openhes.models.acquisition.ModemInfo.connect_timeout:type_name -> google.protobuf.Duration
	107, // 39: io.clbs.openhes.models.acquisition.ModemInfo.command_timeout:type_name -> google.protobuf.Duration
	27,  // 40: io.clbs.openhes.models.acquisition.ModemInfo.tcpip:type_name -> io.clbs.openhes.models.acquisition.ConnectionTypeDirectTcpIp
	53,  // 41: io.clbs.openhes.models.acquisition.ModemInfo.serial_over_ip:type_name -> io.clbs.openhes.models.acquisition.ConnectionTypeControlledSerial
	3,   // 42: io.clbs.openhes.models.acquisition.SerialConfig.baud_rate:type_name -> io.clbs.openhes.models.acquisition.SerialConfigBaudRate
	2,   // 43: io.clbs.openhes.models.acquisition.SerialConfig.parity:type_name -> io.clbs.openhes.models.acquisition.SerialConfigParity
	4,   // 44: io.clbs.openhes.models.acquisition.SerialConfig.data_bits:type_name -> io.clbs.openhes.models.acquisition.SerialConfigDataBits
	5,   // 45: io.clbs.openhes.models.acquisition.SerialConfig.stop_bits:type_name -> io.clbs.openhes.models.acquisition.SerialConfigStopBits
	27,  // 46: io.clbs.openhes.models.acquisition.ConnectionInfo.tcpip:type_name -> io.clbs.openhes.models.acquisition.ConnectionTypeDirectTcpIp
	28,  // 47: io.clbs.openhes.models.acquisition.ConnectionInfo.modem_pool:type_name -> io.clbs.openhes.models.acquisition.ConnectionTypeModemPool
	53,  // 48: io.clbs.openhes.models.acquisition.ConnectionInfo.serial_over_ip:type_name -> io.clbs.openhes.models.acquisition.ConnectionTypeControlledSerial
	7,   // 49: io.clbs.openhes.models.acquisition.ConnectionInfo.link_protocol:type_name -> io.clbs.openhes.models.acquisition.DataLinkProtocol
	100, // 50: io.clbs.openhes.models.acquisition.ConnectionInfo.attributes:type_name -> io.clbs.openhes.models.acquisition.ConnectionInfo.AttributesEntry
	107, // 51: io.clbs.openhes.models.acquisition.ConnectionTypeDirectTcpIp.timeout:type_name -> google.protobuf.Duration
	24,  // 52: io.clbs.openhes.models.acquisition.ConnectionTypeModemPool.modem:type_name -> io.clbs.openhes.models.acquisition.ModemInfo
	107, // 53: io.clbs.openhes.models.acquisition.ConnectionTypeSerialDirect.timeout:type_name -> google.protobuf.Duration
	107, // 54: io.clbs.openhes.models.acquisition.ConnectionTypeSerialMoxa.timeout:type_name -> google.protobuf.Duration
	107, // 55: io.clbs.openhes.models.acquisition.ConnectionTypeSerialRfc2217.timeout:type_name -> google.protobuf.Duration
	8,   // 56: io.clbs.openhes.models.acquisition.ApplicationProtocolTemplate.protocol:type_name -> io.clbs.openhes.models.acquisition.ApplicationProtocol
	109, // 57: io.clbs.openhes.models.acquisition.ApplicationProtocolTemplate.attributes:type_name -> io.clbs.openhes.models.common.FieldDescriptor
	7,   // 58: io.clbs.openhes.models.acquisition.DataLinkTemplate.link_protocol:type_name -> io.clbs.openhes.models.acquisition.DataLinkProtocol
	8,   // 59: io.clbs.openhes.models.acquisition.DataLinkTemplate.app_protocol_refs:type_name -> io.clbs.openhes.models.acquisition.ApplicationProtocol
	109, // 60: io.clbs.openhes.models.acquisition.DataLinkTemplate.attributes:type_name -> io.clbs.openhes.models.common.FieldDescriptor
	6,   // 61: io.clbs.openhes.models.acquisition.CommunicationTemplate.type:type_name -> io.clbs.openhes.models.acquisition.CommunicationType
	33,  // 62: io.clbs.openhes.models.acquisition.CommunicationTemplate.datalinks:type_name -> io.clbs.openhes.models.acquisition.DataLinkTemplate
	34,  // 63: io.clbs.openhes.models.acquisition.DriverTemplates.communication_templates:type_name -> io.clbs.openhes.models.acquisition.CommunicationTemplate
	32,  // 64: io.clbs.openhes.models.acquisition.DriverTemplates.app_protocols:type_name -> io.clbs.openhes.models.acquisition.ApplicationProtocolTemplate
	52,  // 65: io.clbs.openhes.models.acquisition.DriverTemplates.action_attributes:type_name -> io.clbs.openhes.models.acquisition.JobActionAttributes
	35,  // 66: io.clbs.openhes.models.acquisition.DriverTemplates.access_templates:type_name -> io.clbs.openhes.models.acquisition.AccessLevelTemplate
	67,  // 67: io.clbs.openhes.models.acquisition.DriverTemplates.action_constraints:type_name -> io.clbs.openhes.models.acquisition.JobActionContraints
	109, // 68: io.clbs.openhes.models.acquisition.DriverTemplates.uknown_device_descriptors:type_name -> io.clbs.openhes.models.common.FieldDescriptor
	10,  // 69: io.clbs.openhes.models.acquisition.ActionProgressUpdate.code:type_name -> io.clbs.openhes.models.acquisition.ActionResultCode
	39,  // 70: io.clbs.openhes.models.acquisition.ActionProgressUpdate.data:type_name -> io.clbs.openhes.models.acquisition.ActionData
	110, // 71: io.clbs.openhes.models.acquisition.ActionProgressUpdate.error_message:type_name -> io.clbs.openhes.models.common.FormattedMessage
	11,  // 72: io.clbs.openhes.models.acquisition.JobProgressUpdate.code:type_name -> io.clbs.openhes.models.acquisition.JobErrorCode
	107, // 73: io.clbs.openhes.models.acquisition.JobProgressUpdate.duration:type_name -> google.protobuf.Duration
	110, // 74: io.clbs.openhes.models.acquisition.JobProgressUpdate.error_message:type_name -> io.clbs.openhes.models.common.FormattedMessage
	111, // 75: io.clbs.openhes.models.acquisition.ActionData.nodata:type_name -> google.protobuf.Empty
	49,  // 76: io.clbs.openhes.models.acquisition.ActionData.registers:type_name -> io.clbs.openhes.models.acquisition.RegisterValues
	45,  // 77: io.clbs.openhes.models.acquisition.ActionData.profile:type_name -> io.clbs.openhes.models.acquisition.ProfileValues
	46,  // 78: io.clbs.openhes.models.acquisition.ActionData.irregular_profile:type_name -> io.clbs.openhes.models.acquisition.IrregularProfileValues
	44,  // 79: io.clbs.openhes.models.acquisition.ActionData.device_info:type_name -> io.clbs.openhes.models.acquisition.DeviceInfo
	40,  // 80: io.clbs.openhes.models.acquisition.ActionData.events:type_name -> io.clbs.openhes.models.acquisition.EventRecords
	112, // 81: io.clbs.openhes.models.acquisition.ActionData.tou_table:type_name -> io.clbs.openhes.models.acquisition.timeofuse.TimeOfUseTableSpec
	41,  // 82: io.clbs.openhes.models.acquisition.EventRecords.values:type_name -> io.clbs.openhes.models.acquisition.EventRecord
	108, // 83: io.clbs.openhes.models.acquisition.EventRecord.timestamp:type_name -> google.protobuf.Timestamp
	108, // 84: io.clbs.openhes.models.acquisition.DeviceEventRecord.timestamp:type_name -> google.protobuf.Timestamp
	42,  // 85: io.clbs.openhes.models.acquisition.DeviceEvents.events:type_name -> io.clbs.openhes.models.acquisition.DeviceEventRecord
	108, // 86: io.clbs.openhes.models.acquisition.DeviceInfo.info_timestamp:type_name -> google.protobuf.Timestamp
	107, // 87: io.clbs.openhes.models.acquisition.DeviceInfo.clock_delta:type_name -> google.protobuf.Duration
	48,  // 88: io.clbs.openhes.models.acquisition.ProfileValues.blocks:type_name -> io.clbs.openhes.models.acquisition.ProfileBlock
	47,  // 89: io.clbs.openhes.models.acquisition.IrregularProfileValues.values:type_name -> io.clbs.openhes.models.acquisition.IrregularValue
	108, // 90: io.clbs.openhes.models.acquisition.IrregularValue.timestamp:type_name -> google.protobuf.Timestamp
	51,  // 91: io.clbs.openhes.models.acquisition.IrregularValue.value:type_name -> io.clbs.openhes.models.acquisition.MeasuredValue
	108, // 92: io.clbs.openhes.models.acquisition.ProfileBlock.start_timestamp:type_name -> google.protobuf.Timestamp
	51,  // 93: io.clbs.openhes.models.acquisition.ProfileBlock.values:type_name -> io.clbs.openhes.models.acquisition.MeasuredValue
	50,  // 94: io.clbs.openhes.models.acquisition.RegisterValues.values:type_name -> io.clbs.openhes.models.acquisition.RegisterValue
	108, // 95: io.clbs.openhes.models.acquisition.RegisterValue.timestamp:type_name -> google.protobuf.Timestamp
	51,  // 96: io.clbs.openhes.models.acquisition.RegisterValue.value:type_name -> io.clbs.openhes.models.acquisition.MeasuredValue
	108, // 97: io.clbs.openhes.models.acquisition.MeasuredValue.timestamp_value:type_name -> google.protobuf.Timestamp
	108, // 98: io.clbs.openhes.models.acquisition.MeasuredValue.peak_ts:type_name -> google.protobuf.Timestamp
	9,   // 99: io.clbs.openhes.models.acquisition.JobActionAttributes.type:type_name -> io.clbs.openhes.models.acquisition.ActionType
	109, // 100: io.clbs.openhes.models.acquisition.JobActionAttributes.attributes:type_name -> io.clbs.openhes.models.common.FieldDescriptor
	29,  // 101: io.clbs.openhes.models.acquisition.ConnectionTypeControlledSerial.direct:type_name -> io.clbs.openhes.models.acquisition.ConnectionTypeSerialDirect
	30,  // 102: io.clbs.openhes.models.acquisition.ConnectionTypeControlledSerial.moxa:type_name -> io.clbs.openhes.models.acquisition.ConnectionTypeSerialMoxa
	31,  // 103: io.clbs.openhes.models.acquisition.ConnectionTypeControlledSerial.rfc2217:type_name -> io.clbs.openhes.models.acquisition.ConnectionTypeSerialRfc2217
	113, // 104: io.clbs.openhes.models.acquisition.ActionGetRegister.data_type:type_name -> io.clbs.openhes.models.common.FieldDataType
	108, // 105: io.clbs.openhes.models.acquisition.ActionGetPeriodicalProfile.range_start:type_name -> google.protobuf.Timestamp
	108, // 106: io.clbs.openhes.models.acquisition.ActionGetPeriodicalProfile.range_end:type_name -> google.protobuf.Timestamp
	113, // 107: io.clbs.openhes.models.acquisition.ActionGetPeriodicalProfile.data_type:type_name -> io.clbs.openhes.models.common.FieldDataType
	108, // 108: io.clbs.openhes.models.acquisition.ActionGetIrregularProfile.range_start:type_name -> google.protobuf.Timestamp
	108, // 109: io.clbs.openhes.models.acquisition.ActionGetIrregularProfile.range_end:type_name -> google.protobuf.Timestamp
	113, // 110: io.clbs.openhes.models.acquisition.ActionGetIrregularProfile.data_type:type_name -> io.clbs.openhes.models.common.FieldDataType
	108, // 111: io.clbs.openhes.models.acquisition.ActionGetEvents.range_start:type_name -> google.protobuf.Timestamp
	108, // 112: io.clbs.openhes.models.acquisition.ActionGetEvents.range_end:type_name -> google.protobuf.Timestamp
	112, // 113: io.clbs.openhes.models.acquisition.ActionSetTou.table:type_name -> io.clbs.openhes.models.acquisition.timeofuse.TimeOfUseTableSpec
	101, // 114: io.clbs.openhes.models.acquisition.JobActionContraints.get_register_type_name:type_name -> io.clbs.openhes.models.acquisition.JobActionContraints.GetRegisterTypeNameEntry
	102, // 115: io.clbs.openhes.models.acquisition.JobActionContraints.get_register_type_attributes:type_name -> io.clbs.openhes.models.acquisition.JobActionContraints.GetRegisterTypeAttributesEntry
	14,  // 116: io.clbs.openhes.models.acquisition.JobStatus.status:type_name -> io.clbs.openhes.models.acquisition.JobStatusCode
	11,  // 117: io.clbs.openhes.models.acquisition.JobStatus.code:type_name -> io.clbs.openhes.models.acquisition.JobErrorCode
	80,  // 118: io.clbs.openhes.models.acquisition.JobStatus.results:type_name -> io.clbs.openhes.models.acquisition.ActionResult
	108, // 119: io.clbs.openhes.models.acquisition.JobStatus.started_at:type_name -> google.protobuf.Timestamp
	108, // 120: io.clbs.openhes.models.acquisition.JobStatus.finished_at:type_name -> google.protobuf.Timestamp
	44,  // 121: io.clbs.openhes.models.acquisition.JobStatus.device_info:type_name -> io.clbs.openhes.models.acquisition.DeviceInfo
	110, // 122: io.clbs.openhes.models.acquisition.JobStatus.error_message:type_name -> io.clbs.openhes.models.common.FormattedMessage
	103, // 123: io.clbs.openhes.models.acquisition.StartJobData.device_attributes:type_name -> io.clbs.openhes.models.acquisition.StartJobData.DeviceAttributesEntry
	17,  // 124: io.clbs.openhes.models.acquisition.StartJobData.job_settings:type_name -> io.clbs.openhes.models.acquisition.JobSettings
	18,  // 125: io.clbs.openhes.models.acquisition.StartJobData.job_actions:type_name -> io.clbs.openhes.models.acquisition.JobAction
	8,   // 126: io.clbs.openhes.models.acquisition.StartJobData.app_protocol:type_name -> io.clbs.openhes.models.acquisition.ApplicationProtocol
	13,  // 127: io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpec.register_type:type_name -> io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterKind
	104, // 128: io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpec.attributes:type_name -> io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpec.AttributesEntry
	113, // 129: io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpec.data_type:type_name -> io.clbs.openhes.models.common.FieldDataType
	71,  // 130: io.clbs.openhes.models.acquisition.DeviceRegister.spec:type_name -> io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpec
	26,  // 131: io.clbs.openhes.models.acquisition.DeviceConnectionInfo.communication_unit:type_name -> io.clbs.openhes.models.acquisition.ConnectionInfo
	8,   // 132: io.clbs.openhes.models.acquisition.DeviceConnectionInfo.app_protocol:type_name -> io.clbs.openhes.models.acquisition.ApplicationProtocol
	105, // 133: io.clbs.openhes.models.acquisition.DeviceConnectionInfo.device_attributes:type_name -> io.clbs.openhes.models.acquisition.DeviceConnectionInfo.DeviceAttributesEntry
	72,  // 134: io.clbs.openhes.models.acquisition.DeviceConnectionInfo.registers:type_name -> io.clbs.openhes.models.acquisition.DeviceRegister
	24,  // 135: io.clbs.openhes.models.acquisition.ListOfModemInfo.items:type_name -> io.clbs.openhes.models.acquisition.ModemInfo
	73,  // 136: io.clbs.openhes.models.acquisition.ListOfConnectionInfo.items:type_name -> io.clbs.openhes.models.acquisition.DeviceConnectionInfo
	114, // 137: io.clbs.openhes.models.acquisition.FieldValuesList.items:type_name -> io.clbs.openhes.models.common.FieldValues
	115, // 138: io.clbs.openhes.models.acquisition.AttributeSelector.operator:type_name -> io.clbs.openhes.models.common.FilterOperator
	113, // 139: io.clbs.openhes.models.acquisition.AttributeSelector.data_type:type_name -> io.clbs.openhes.models.common.FieldDataType
	108, // 140: io.clbs.openhes.models.acquisition.AttributeSelector.date:type_name -> google.protobuf.Timestamp
	77,  // 141: io.clbs.openhes.models.acquisition.DeviceAttributeSelector.attributes:type_name -> io.clbs.openhes.models.acquisition.AttributeSelector
	7,   // 142: io.clbs.openhes.models.acquisition.CommunicationUnitAttributeSelector.link_protocol:type_name -> io.clbs.openhes.models.acquisition.DataLinkProtocol
	77,  // 143: io.clbs.openhes.models.acquisition.CommunicationUnitAttributeSelector.attributes:type_name -> io.clbs.openhes.models.acquisition.AttributeSelector
	10,  // 144: io.clbs.openhes.models.acquisition.ActionResult.status:type_name -> io.clbs.openhes.models.acquisition.ActionResultCode
	39,  // 145: io.clbs.openhes.models.acquisition.ActionResult.data:type_name -> io.clbs.openhes.models.acquisition.ActionData
	110, // 146: io.clbs.openhes.models.acquisition.ActionResult.error_message:type_name -> io.clbs.openhes.models.common.FormattedMessage
	84,  // 147: io.clbs.openhes.models.acquisition.DeviceSpec.communication_unit_link:type_name -> io.clbs.openhes.models.acquisition.DeviceCommunicationUnit
	44,  // 148: io.clbs.openhes.models.acquisition.DeviceStatus.info:type_name -> io.clbs.openhes.models.acquisition.DeviceInfo
	8,   // 149: io.clbs.openhes.models.acquisition.DeviceCommunicationUnit.app_protocol:type_name -> io.clbs.openhes.models.acquisition.ApplicationProtocol
	106, // 150: io.clbs.openhes.models.acquisition.DeviceCommunicationUnit.attributes:type_name -> io.clbs.openhes.models.acquisition.DeviceCommunicationUnit.AttributesEntry
	23,  // 151: io.clbs.openhes.models.acquisition.JobSpec.device:type_name -> io.clbs.openhes.models.acquisition.JobDevice
	17,  // 152: io.clbs.openhes.models.acquisition.JobSpec.job_settings:type_name -> io.clbs.openhes.models.acquisition.JobSettings
	18,  // 153: io.clbs.openhes.models.acquisition.JobSpec.job_actions:type_name -> io.clbs.openhes.models.acquisition.JobAction
	86,  // 154: io.clbs.openhes.models.acquisition.JobSpec.job_action_info:type_name -> io.clbs.openhes.models.acquisition.JobActionMapRecord
	85,  // 155: io.clbs.openhes.models.acquisition.JobDoneNotification.spec:type_name -> io.clbs.openhes.models.acquisition.JobSpec
	68,  // 156: io.clbs.openhes.models.acquisition.JobDoneNotification.status:type_name -> io.clbs.openhes.models.acquisition.JobStatus
	90,  // 157: io.clbs.openhes.models.acquisition.CommunicationUnit.spec:type_name -> io.clbs.openhes.models.acquisition.CommunicationUnitSpec
	116, // 158: io.clbs.openhes.models.acquisition.CommunicationUnit.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	26,  // 159: io.clbs.openhes.models.acquisition.CommunicationUnitSpec.connection_info:type_name -> io.clbs.openhes.models.acquisition.ConnectionInfo
	92,  // 160: io.clbs.openhes.models.acquisition.CommunicationBus.status:type_name -> io.clbs.openhes.models.acquisition.CommunicationBusStatus
	116, // 161: io.clbs.openhes.models.acquisition.CommunicationBus.metadata:type_name -> io.clbs.openhes.models.common.MetadataFields
	15,  // 162: io.clbs.openhes.models.acquisition.TopologyNode.type:type_name -> io.clbs.openhes.models.acquisition.TopologyNodeType
	114, // 163: io.clbs.openhes.models.acquisition.TopologyNode.attributes:type_name -> io.clbs.openhes.models.common.FieldValues
	114, // 164: io.clbs.openhes.models.acquisition.TopologyEdge.attributes:type_name -> io.clbs.openhes.models.common.FieldValues
	93,  // 165: io.clbs.openhes.models.acquisition.NetworkMap.nodes:type_name -> io.clbs.openhes.models.acquisition.TopologyNode
	94,  // 166: io.clbs.openhes.models.acquisition.NetworkMap.edges:type_name -> io.clbs.openhes.models.acquisition.TopologyEdge
	108, // 167: io.clbs.openhes.models.acquisition.CommunicationUnitLogRecord.timestamp:type_name -> google.protobuf.Timestamp
	16,  // 168: io.clbs.openhes.models.acquisition.CommunicationUnitLogRecord.level:type_name -> io.clbs.openhes.models.acquisition.LogRecordLevel
	96,  // 169: io.clbs.openhes.models.acquisition.ListOfCommunicationUnitLogRecord.items:type_name -> io.clbs.openhes.models.acquisition.CommunicationUnitLogRecord
	117, // 170: io.clbs.openhes.models.acquisition.JobAction.AttributesEntry.value:type_name -> io.clbs.openhes.models.common.FieldValue
	117, // 171: io.clbs.openhes.models.acquisition.JobDevice.DeviceAttributesEntry.value:type_name -> io.clbs.openhes.models.common.FieldValue
	117, // 172: io.clbs.openhes.models.acquisition.ConnectionInfo.AttributesEntry.value:type_name -> io.clbs.openhes.models.common.FieldValue
	118, // 173: io.clbs.openhes.models.acquisition.JobActionContraints.GetRegisterTypeAttributesEntry.value:type_name -> io.clbs.openhes.models.common.ListOfString
	117, // 174: io.clbs.openhes.models.acquisition.StartJobData.DeviceAttributesEntry.value:type_name -> io.clbs.openhes.models.common.FieldValue
	117, // 175: io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpec.AttributesEntry.value:type_name -> io.clbs.openhes.models.common.FieldValue
	117, // 176: io.clbs.openhes.models.acquisition.DeviceConnectionInfo.DeviceAttributesEntry.value:type_name -> io.clbs.openhes.models.common.FieldValue
	117, // 177: io.clbs.openhes.models.acquisition.DeviceCommunicationUnit.AttributesEntry.value:type_name -> io.clbs.openhes.models.common.FieldValue
	178, // [178:178] is the sub-list for method output_type
	178, // [178:178] is the sub-list for method input_type
	178, // [178:178] is the sub-list for extension type_name
	178, // [178:178] is the sub-list for extension extendee
	0,   // [0:178] is the sub-list for field type_name
}

func init() { file_acquisition_shared_proto_init() }
func file_acquisition_shared_proto_init() {
	if File_acquisition_shared_proto != nil {
		return
	}
	file_acquisition_shared_proto_msgTypes[1].OneofWrappers = []any{
		(*jobAction_GetRegister)(nil),
		(*jobAction_GetPeriodicalProfile)(nil),
		(*jobAction_GetIrregularProfile)(nil),
		(*jobAction_GetEvents)(nil),
		(*jobAction_GetDeviceInfo)(nil),
		(*jobAction_SyncClock)(nil),
		(*jobAction_SetRelayState)(nil),
		(*jobAction_SetDisconnectorState)(nil),
		(*jobAction_GetTou)(nil),
		(*jobAction_SetTou)(nil),
		(*jobAction_SetLimiter)(nil),
		(*jobAction_ResetBillingPeriod)(nil),
		(*jobAction_FwUpdate)(nil),
	}
	file_acquisition_shared_proto_msgTypes[2].OneofWrappers = []any{
		(*jobActionSet_GetRegister)(nil),
		(*jobActionSet_GetPeriodicalProfile)(nil),
		(*jobActionSet_GetIrregularProfile)(nil),
		(*jobActionSet_GetEvents)(nil),
		(*jobActionSet_GetDeviceInfo)(nil),
		(*jobActionSet_SyncClock)(nil),
		(*jobActionSet_SetRelayState)(nil),
		(*jobActionSet_SetDisconnectorState)(nil),
		(*jobActionSet_GetTou)(nil),
		(*jobActionSet_SetTou)(nil),
		(*jobActionSet_SetLimiter)(nil),
		(*jobActionSet_ResetBillingPeriod)(nil),
		(*jobActionSet_FwUpdate)(nil),
	}
	file_acquisition_shared_proto_msgTypes[7].OneofWrappers = []any{
		(*modemInfo_Tcpip)(nil),
		(*modemInfo_SerialOverIp)(nil),
	}
	file_acquisition_shared_proto_msgTypes[9].OneofWrappers = []any{
		(*connectionInfo_Tcpip)(nil),
		(*connectionInfo_ModemPool)(nil),
		(*connectionInfo_SerialOverIp)(nil),
	}
	file_acquisition_shared_proto_msgTypes[22].OneofWrappers = []any{
		(*actionData_Nodata)(nil),
		(*actionData_Registers)(nil),
		(*actionData_Profile)(nil),
		(*actionData_IrregularProfile)(nil),
		(*actionData_DeviceInfo)(nil),
		(*actionData_Events)(nil),
		(*actionData_TouTable)(nil),
	}
	file_acquisition_shared_proto_msgTypes[34].OneofWrappers = []any{
		(*measuredValue_DoubleValue)(nil),
		(*measuredValue_IntegerValue)(nil),
		(*measuredValue_StringValue)(nil),
		(*measuredValue_TimestampValue)(nil),
		(*measuredValue_TimestampTzValue)(nil),
		(*measuredValue_BoolValue)(nil),
	}
	file_acquisition_shared_proto_msgTypes[36].OneofWrappers = []any{
		(*connectionTypeControlledSerial_Direct)(nil),
		(*connectionTypeControlledSerial_Moxa)(nil),
		(*connectionTypeControlledSerial_Rfc2217)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_acquisition_shared_proto_rawDesc), len(file_acquisition_shared_proto_rawDesc)),
			NumEnums:      17,
			NumMessages:   90,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_acquisition_shared_proto_goTypes,
		DependencyIndexes: file_acquisition_shared_proto_depIdxs,
		EnumInfos:         file_acquisition_shared_proto_enumTypes,
		MessageInfos:      file_acquisition_shared_proto_msgTypes,
	}.Build()
	File_acquisition_shared_proto = out.File
	file_acquisition_shared_proto_goTypes = nil
	file_acquisition_shared_proto_depIdxs = nil
}
