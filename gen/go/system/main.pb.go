// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: system/main.proto

package system

import (
	common "github.com/cybroslabs/ouro-api-shared/gen/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines a specification for application configuration.
type ApplicationConfig struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Items *[]*ComponentConfig    `protobuf:"bytes,2,rep,name=items"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ApplicationConfig) Reset() {
	*x = ApplicationConfig{}
	mi := &file_system_main_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationConfig) ProtoMessage() {}

func (x *ApplicationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_system_main_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ApplicationConfig) GetItems() []*ComponentConfig {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ApplicationConfig) SetItems(v []*ComponentConfig) {
	x.xxx_hidden_Items = &v
}

type ApplicationConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Items []*ComponentConfig
}

func (b0 ApplicationConfig_builder) Build() *ApplicationConfig {
	m0 := &ApplicationConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Items = &b.Items
	return m0
}

// Defines a specification for a single component configuration.
type ComponentConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Items       *common.FieldValues    `protobuf:"bytes,2,opt,name=items"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComponentConfig) Reset() {
	*x = ComponentConfig{}
	mi := &file_system_main_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentConfig) ProtoMessage() {}

func (x *ComponentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_system_main_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComponentConfig) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComponentConfig) GetItems() *common.FieldValues {
	if x != nil {
		return x.xxx_hidden_Items
	}
	return nil
}

func (x *ComponentConfig) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComponentConfig) SetItems(v *common.FieldValues) {
	x.xxx_hidden_Items = v
}

func (x *ComponentConfig) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComponentConfig) HasItems() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Items != nil
}

func (x *ComponentConfig) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *ComponentConfig) ClearItems() {
	x.xxx_hidden_Items = nil
}

type ComponentConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name  *string
	Items *common.FieldValues
}

func (b0 ComponentConfig_builder) Build() *ComponentConfig {
	m0 := &ComponentConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Items = b.Items
	return m0
}

// Defines a specification for component configuration descriptors.
type ComponentConfigDescriptor struct {
	state                  protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                    `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Items       *[]*common.FieldDescriptor `protobuf:"bytes,2,rep,name=items"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComponentConfigDescriptor) Reset() {
	*x = ComponentConfigDescriptor{}
	mi := &file_system_main_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentConfigDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentConfigDescriptor) ProtoMessage() {}

func (x *ComponentConfigDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_system_main_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComponentConfigDescriptor) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComponentConfigDescriptor) GetItems() []*common.FieldDescriptor {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ComponentConfigDescriptor) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComponentConfigDescriptor) SetItems(v []*common.FieldDescriptor) {
	x.xxx_hidden_Items = &v
}

func (x *ComponentConfigDescriptor) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComponentConfigDescriptor) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type ComponentConfigDescriptor_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name  *string
	Items []*common.FieldDescriptor
}

func (b0 ComponentConfigDescriptor_builder) Build() *ComponentConfigDescriptor {
	m0 := &ComponentConfigDescriptor{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Items = &b.Items
	return m0
}

// Defines a specification for application configuration descriptors.
type ApplicationConfigDescriptor struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Descriptors *[]*ComponentConfigDescriptor `protobuf:"bytes,1,rep,name=descriptors"`
	xxx_hidden_Items       *[]*ComponentConfig           `protobuf:"bytes,2,rep,name=items"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ApplicationConfigDescriptor) Reset() {
	*x = ApplicationConfigDescriptor{}
	mi := &file_system_main_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationConfigDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationConfigDescriptor) ProtoMessage() {}

func (x *ApplicationConfigDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_system_main_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ApplicationConfigDescriptor) GetDescriptors() []*ComponentConfigDescriptor {
	if x != nil {
		if x.xxx_hidden_Descriptors != nil {
			return *x.xxx_hidden_Descriptors
		}
	}
	return nil
}

func (x *ApplicationConfigDescriptor) GetItems() []*ComponentConfig {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ApplicationConfigDescriptor) SetDescriptors(v []*ComponentConfigDescriptor) {
	x.xxx_hidden_Descriptors = &v
}

func (x *ApplicationConfigDescriptor) SetItems(v []*ComponentConfig) {
	x.xxx_hidden_Items = &v
}

type ApplicationConfigDescriptor_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Descriptors []*ComponentConfigDescriptor
	Items       []*ComponentConfig
}

func (b0 ApplicationConfigDescriptor_builder) Build() *ApplicationConfigDescriptor {
	m0 := &ApplicationConfigDescriptor{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Descriptors = &b.Descriptors
	x.xxx_hidden_Items = &b.Items
	return m0
}

// Defines the license information for the application.
type License struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Token             *string                `protobuf:"bytes,1,opt,name=token"`
	xxx_hidden_Id                *string                `protobuf:"bytes,2,opt,name=id"`
	xxx_hidden_Name              *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Description       *string                `protobuf:"bytes,4,opt,name=description"`
	xxx_hidden_Options           map[string]string      `protobuf:"bytes,5,rep,name=options" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Version           int32                  `protobuf:"varint,6,opt,name=version"`
	xxx_hidden_TokenExpiration   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=token_expiration,json=tokenExpiration"`
	xxx_hidden_LicenseExpiration *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=license_expiration,json=licenseExpiration"`
	xxx_hidden_ServiceExpiration *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=service_expiration,json=serviceExpiration"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *License) Reset() {
	*x = License{}
	mi := &file_system_main_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_system_main_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *License) GetToken() string {
	if x != nil {
		if x.xxx_hidden_Token != nil {
			return *x.xxx_hidden_Token
		}
		return ""
	}
	return ""
}

func (x *License) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *License) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *License) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *License) GetOptions() map[string]string {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *License) GetVersion() int32 {
	if x != nil {
		return x.xxx_hidden_Version
	}
	return 0
}

func (x *License) GetTokenExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_TokenExpiration
	}
	return nil
}

func (x *License) GetLicenseExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LicenseExpiration
	}
	return nil
}

func (x *License) GetServiceExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ServiceExpiration
	}
	return nil
}

func (x *License) SetToken(v string) {
	x.xxx_hidden_Token = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *License) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *License) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *License) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *License) SetOptions(v map[string]string) {
	x.xxx_hidden_Options = v
}

func (x *License) SetVersion(v int32) {
	x.xxx_hidden_Version = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *License) SetTokenExpiration(v *timestamppb.Timestamp) {
	x.xxx_hidden_TokenExpiration = v
}

func (x *License) SetLicenseExpiration(v *timestamppb.Timestamp) {
	x.xxx_hidden_LicenseExpiration = v
}

func (x *License) SetServiceExpiration(v *timestamppb.Timestamp) {
	x.xxx_hidden_ServiceExpiration = v
}

func (x *License) HasToken() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *License) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *License) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *License) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *License) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *License) HasTokenExpiration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TokenExpiration != nil
}

func (x *License) HasLicenseExpiration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LicenseExpiration != nil
}

func (x *License) HasServiceExpiration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ServiceExpiration != nil
}

func (x *License) ClearToken() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Token = nil
}

func (x *License) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Id = nil
}

func (x *License) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *License) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Description = nil
}

func (x *License) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Version = 0
}

func (x *License) ClearTokenExpiration() {
	x.xxx_hidden_TokenExpiration = nil
}

func (x *License) ClearLicenseExpiration() {
	x.xxx_hidden_LicenseExpiration = nil
}

func (x *License) ClearServiceExpiration() {
	x.xxx_hidden_ServiceExpiration = nil
}

type License_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Token             *string
	Id                *string
	Name              *string
	Description       *string
	Options           map[string]string
	Version           *int32
	TokenExpiration   *timestamppb.Timestamp
	LicenseExpiration *timestamppb.Timestamp
	ServiceExpiration *timestamppb.Timestamp
}

func (b0 License_builder) Build() *License {
	m0 := &License{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Token != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Token = b.Token
	}
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_Name = b.Name
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_Options = b.Options
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_Version = *b.Version
	}
	x.xxx_hidden_TokenExpiration = b.TokenExpiration
	x.xxx_hidden_LicenseExpiration = b.LicenseExpiration
	x.xxx_hidden_ServiceExpiration = b.ServiceExpiration
	return m0
}

// Defines the user information structure.
type UserProfile struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_DisplayName *string                `protobuf:"bytes,2,opt,name=display_name,json=displayName"`
	xxx_hidden_Roles       *string                `protobuf:"bytes,3,opt,name=roles"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	mi := &file_system_main_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_system_main_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UserProfile) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *UserProfile) GetDisplayName() string {
	if x != nil {
		if x.xxx_hidden_DisplayName != nil {
			return *x.xxx_hidden_DisplayName
		}
		return ""
	}
	return ""
}

func (x *UserProfile) GetRoles() string {
	if x != nil {
		if x.xxx_hidden_Roles != nil {
			return *x.xxx_hidden_Roles
		}
		return ""
	}
	return ""
}

func (x *UserProfile) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *UserProfile) SetDisplayName(v string) {
	x.xxx_hidden_DisplayName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *UserProfile) SetRoles(v string) {
	x.xxx_hidden_Roles = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *UserProfile) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UserProfile) HasDisplayName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UserProfile) HasRoles() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UserProfile) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *UserProfile) ClearDisplayName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DisplayName = nil
}

func (x *UserProfile) ClearRoles() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Roles = nil
}

type UserProfile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	DisplayName *string
	Roles       *string
}

func (b0 UserProfile_builder) Build() *UserProfile {
	m0 := &UserProfile{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.DisplayName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_DisplayName = b.DisplayName
	}
	if b.Roles != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Roles = b.Roles
	}
	return m0
}

// Defines the
type SetScreenConfigRequest struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ApplicationId *string                `protobuf:"bytes,1,opt,name=application_id,json=applicationId"`
	xxx_hidden_ScreenId      *string                `protobuf:"bytes,2,opt,name=screen_id,json=screenId"`
	xxx_hidden_Settings      *structpb.Struct       `protobuf:"bytes,3,opt,name=settings"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *SetScreenConfigRequest) Reset() {
	*x = SetScreenConfigRequest{}
	mi := &file_system_main_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetScreenConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetScreenConfigRequest) ProtoMessage() {}

func (x *SetScreenConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_main_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetScreenConfigRequest) GetApplicationId() string {
	if x != nil {
		if x.xxx_hidden_ApplicationId != nil {
			return *x.xxx_hidden_ApplicationId
		}
		return ""
	}
	return ""
}

func (x *SetScreenConfigRequest) GetScreenId() string {
	if x != nil {
		if x.xxx_hidden_ScreenId != nil {
			return *x.xxx_hidden_ScreenId
		}
		return ""
	}
	return ""
}

func (x *SetScreenConfigRequest) GetSettings() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Settings
	}
	return nil
}

func (x *SetScreenConfigRequest) SetApplicationId(v string) {
	x.xxx_hidden_ApplicationId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *SetScreenConfigRequest) SetScreenId(v string) {
	x.xxx_hidden_ScreenId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *SetScreenConfigRequest) SetSettings(v *structpb.Struct) {
	x.xxx_hidden_Settings = v
}

func (x *SetScreenConfigRequest) HasApplicationId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SetScreenConfigRequest) HasScreenId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SetScreenConfigRequest) HasSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Settings != nil
}

func (x *SetScreenConfigRequest) ClearApplicationId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ApplicationId = nil
}

func (x *SetScreenConfigRequest) ClearScreenId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ScreenId = nil
}

func (x *SetScreenConfigRequest) ClearSettings() {
	x.xxx_hidden_Settings = nil
}

type SetScreenConfigRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ApplicationId *string
	ScreenId      *string
	Settings      *structpb.Struct
}

func (b0 SetScreenConfigRequest_builder) Build() *SetScreenConfigRequest {
	m0 := &SetScreenConfigRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ApplicationId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ApplicationId = b.ApplicationId
	}
	if b.ScreenId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ScreenId = b.ScreenId
	}
	x.xxx_hidden_Settings = b.Settings
	return m0
}

// Defines the selection criteria for UI screen configuration.
type ScreenConfigSelector struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ApplicationId *string                `protobuf:"bytes,1,opt,name=application_id,json=applicationId"`
	xxx_hidden_ScreenId      *string                `protobuf:"bytes,2,opt,name=screen_id,json=screenId"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ScreenConfigSelector) Reset() {
	*x = ScreenConfigSelector{}
	mi := &file_system_main_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScreenConfigSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenConfigSelector) ProtoMessage() {}

func (x *ScreenConfigSelector) ProtoReflect() protoreflect.Message {
	mi := &file_system_main_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ScreenConfigSelector) GetApplicationId() string {
	if x != nil {
		if x.xxx_hidden_ApplicationId != nil {
			return *x.xxx_hidden_ApplicationId
		}
		return ""
	}
	return ""
}

func (x *ScreenConfigSelector) GetScreenId() string {
	if x != nil {
		if x.xxx_hidden_ScreenId != nil {
			return *x.xxx_hidden_ScreenId
		}
		return ""
	}
	return ""
}

func (x *ScreenConfigSelector) SetApplicationId(v string) {
	x.xxx_hidden_ApplicationId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ScreenConfigSelector) SetScreenId(v string) {
	x.xxx_hidden_ScreenId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ScreenConfigSelector) HasApplicationId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ScreenConfigSelector) HasScreenId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ScreenConfigSelector) ClearApplicationId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ApplicationId = nil
}

func (x *ScreenConfigSelector) ClearScreenId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ScreenId = nil
}

type ScreenConfigSelector_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ApplicationId *string
	ScreenId      *string
}

func (b0 ScreenConfigSelector_builder) Build() *ScreenConfigSelector {
	m0 := &ScreenConfigSelector{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ApplicationId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ApplicationId = b.ApplicationId
	}
	if b.ScreenId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ScreenId = b.ScreenId
	}
	return m0
}

var File_system_main_proto protoreflect.FileDescriptor

const file_system_main_proto_rawDesc = "" +
	"\n" +
	"\x11system/main.proto\x12\x1dio.clbs.openhes.models.system\x1a\x13common/fields.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"Y\n" +
	"\x11ApplicationConfig\x12D\n" +
	"\x05items\x18\x02 \x03(\v2..io.clbs.openhes.models.system.ComponentConfigR\x05items\"g\n" +
	"\x0fComponentConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12@\n" +
	"\x05items\x18\x02 \x01(\v2*.io.clbs.openhes.models.common.FieldValuesR\x05items\"u\n" +
	"\x19ComponentConfigDescriptor\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12D\n" +
	"\x05items\x18\x02 \x03(\v2..io.clbs.openhes.models.common.FieldDescriptorR\x05items\"\xbf\x01\n" +
	"\x1bApplicationConfigDescriptor\x12Z\n" +
	"\vdescriptors\x18\x01 \x03(\v28.io.clbs.openhes.models.system.ComponentConfigDescriptorR\vdescriptors\x12D\n" +
	"\x05items\x18\x02 \x03(\v2..io.clbs.openhes.models.system.ComponentConfigR\x05items\"\xe7\x03\n" +
	"\aLicense\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12M\n" +
	"\aoptions\x18\x05 \x03(\v23.io.clbs.openhes.models.system.License.OptionsEntryR\aoptions\x12\x18\n" +
	"\aversion\x18\x06 \x01(\x05R\aversion\x12E\n" +
	"\x10token_expiration\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x0ftokenExpiration\x12I\n" +
	"\x12license_expiration\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x11licenseExpiration\x12I\n" +
	"\x12service_expiration\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x11serviceExpiration\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"V\n" +
	"\vUserProfile\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x14\n" +
	"\x05roles\x18\x03 \x01(\tR\x05roles\"\x91\x01\n" +
	"\x16SetScreenConfigRequest\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\x12\x1b\n" +
	"\tscreen_id\x18\x02 \x01(\tR\bscreenId\x123\n" +
	"\bsettings\x18\x03 \x01(\v2\x17.google.protobuf.StructR\bsettings\"Z\n" +
	"\x14ScreenConfigSelector\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\x12\x1b\n" +
	"\tscreen_id\x18\x02 \x01(\tR\bscreenIdB5Z3github.com/cybroslabs/ouro-api-shared/gen/go/systemb\beditionsp\xe8\a"

var file_system_main_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_system_main_proto_goTypes = []any{
	(*ApplicationConfig)(nil),           // 0: io.clbs.openhes.models.system.ApplicationConfig
	(*ComponentConfig)(nil),             // 1: io.clbs.openhes.models.system.ComponentConfig
	(*ComponentConfigDescriptor)(nil),   // 2: io.clbs.openhes.models.system.ComponentConfigDescriptor
	(*ApplicationConfigDescriptor)(nil), // 3: io.clbs.openhes.models.system.ApplicationConfigDescriptor
	(*License)(nil),                     // 4: io.clbs.openhes.models.system.License
	(*UserProfile)(nil),                 // 5: io.clbs.openhes.models.system.UserProfile
	(*SetScreenConfigRequest)(nil),      // 6: io.clbs.openhes.models.system.SetScreenConfigRequest
	(*ScreenConfigSelector)(nil),        // 7: io.clbs.openhes.models.system.ScreenConfigSelector
	nil,                                 // 8: io.clbs.openhes.models.system.License.OptionsEntry
	(*common.FieldValues)(nil),          // 9: io.clbs.openhes.models.common.FieldValues
	(*common.FieldDescriptor)(nil),      // 10: io.clbs.openhes.models.common.FieldDescriptor
	(*timestamppb.Timestamp)(nil),       // 11: google.protobuf.Timestamp
	(*structpb.Struct)(nil),             // 12: google.protobuf.Struct
}
var file_system_main_proto_depIdxs = []int32{
	1,  // 0: io.clbs.openhes.models.system.ApplicationConfig.items:type_name -> io.clbs.openhes.models.system.ComponentConfig
	9,  // 1: io.clbs.openhes.models.system.ComponentConfig.items:type_name -> io.clbs.openhes.models.common.FieldValues
	10, // 2: io.clbs.openhes.models.system.ComponentConfigDescriptor.items:type_name -> io.clbs.openhes.models.common.FieldDescriptor
	2,  // 3: io.clbs.openhes.models.system.ApplicationConfigDescriptor.descriptors:type_name -> io.clbs.openhes.models.system.ComponentConfigDescriptor
	1,  // 4: io.clbs.openhes.models.system.ApplicationConfigDescriptor.items:type_name -> io.clbs.openhes.models.system.ComponentConfig
	8,  // 5: io.clbs.openhes.models.system.License.options:type_name -> io.clbs.openhes.models.system.License.OptionsEntry
	11, // 6: io.clbs.openhes.models.system.License.token_expiration:type_name -> google.protobuf.Timestamp
	11, // 7: io.clbs.openhes.models.system.License.license_expiration:type_name -> google.protobuf.Timestamp
	11, // 8: io.clbs.openhes.models.system.License.service_expiration:type_name -> google.protobuf.Timestamp
	12, // 9: io.clbs.openhes.models.system.SetScreenConfigRequest.settings:type_name -> google.protobuf.Struct
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_system_main_proto_init() }
func file_system_main_proto_init() {
	if File_system_main_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_system_main_proto_rawDesc), len(file_system_main_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_system_main_proto_goTypes,
		DependencyIndexes: file_system_main_proto_depIdxs,
		MessageInfos:      file_system_main_proto_msgTypes,
	}.Build()
	File_system_main_proto = out.File
	file_system_main_proto_goTypes = nil
	file_system_main_proto_depIdxs = nil
}
