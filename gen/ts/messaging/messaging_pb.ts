// @generated by protoc-gen-es v2.7.0 with parameter "target=ts,json_types=true"
// @generated from file messaging/messaging.proto (package io.clbs.openhes.models.messaging, edition 2023)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { StringValue, StringValueJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import { file_common_fields } from "../common/fields_pb";
import type { MetadataFields, MetadataFieldsJson } from "../common/metadata_pb";
import { file_common_metadata } from "../common/metadata_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file messaging/messaging.proto.
 */
export const file_messaging_messaging: GenFile = /*@__PURE__*/
  fileDesc("ChltZXNzYWdpbmcvbWVzc2FnaW5nLnByb3RvEiBpby5jbGJzLm9wZW5oZXMubW9kZWxzLm1lc3NhZ2luZyLGAQoXTWVzc2FnaW5nQ29uc3VtZXJDbGllbnQSSQoFc2V0dXAYASABKAsyOC5pby5jbGJzLm9wZW5oZXMubW9kZWxzLm1lc3NhZ2luZy5NZXNzYWdpbmdDb25zdW1lclNldHVwSAASKwoDYWNrGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlSAASKwoDbmFrGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlSABCBgoEa2luZCJvChdNZXNzYWdpbmdDb25zdW1lclNlcnZlchJMCgdyZWNlaXZlGAEgASgLMjkuaW8uY2xicy5vcGVuaGVzLm1vZGVscy5tZXNzYWdpbmcuTWVzc2FnaW5nUmVjZWl2ZU1lc3NhZ2VIAEIGCgRraW5lIrwBChhNZXNzYWdpbmdQdWJsaXNoZXJDbGllbnQSSgoFc2V0dXAYASABKAsyOS5pby5jbGJzLm9wZW5oZXMubW9kZWxzLm1lc3NhZ2luZy5NZXNzYWdpbmdQdWJsaXNoZXJTZXR1cEgAEkwKB3B1Ymxpc2gYAiABKAsyOS5pby5jbGJzLm9wZW5oZXMubW9kZWxzLm1lc3NhZ2luZy5NZXNzYWdpbmdQdWJsaXNoTWVzc2FnZUgAQgYKBGtpbmQiZgoXTWVzc2FnaW5nUHVibGlzaGVyU2V0dXASPwoIbWV0YWRhdGEYAyABKAsyLS5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5NZXRhZGF0YUZpZWxkc0oECAEQAkoECAIQAyI4ChdNZXNzYWdpbmdQdWJsaXNoTWVzc2FnZRIPCgdzdWJqZWN0GAEgASgJEgwKBGRhdGEYAiABKAwitwEKFk1lc3NhZ2luZ0NvbnN1bWVyU2V0dXASVgoIc2V0dGluZ3MYAiABKAsyRC5pby5jbGJzLm9wZW5oZXMubW9kZWxzLm1lc3NhZ2luZy5NZXNzYWdpbmdDb21wb25lbnRDb25zdW1lclNldHRpbmdzEj8KCG1ldGFkYXRhGAMgASgLMi0uaW8uY2xicy5vcGVuaGVzLm1vZGVscy5jb21tb24uTWV0YWRhdGFGaWVsZHNKBAgBEAIiTAoXTWVzc2FnaW5nUmVjZWl2ZU1lc3NhZ2USEgoKbWVzc2FnZV9pZBgBIAEoCRIPCgdzdWJqZWN0GAIgASgJEgwKBGRhdGEYAyABKAwidAoYTGlzdE9mTWVzc2FnaW5nQ29tcG9uZW50EkMKBWl0ZW1zGAEgAygLMjQuaW8uY2xicy5vcGVuaGVzLm1vZGVscy5tZXNzYWdpbmcuTWVzc2FnaW5nQ29tcG9uZW50EhMKC3RvdGFsX2NvdW50GAIgASgFIukBChJNZXNzYWdpbmdDb21wb25lbnQSRgoEc3BlYxgBIAEoCzI4LmlvLmNsYnMub3Blbmhlcy5tb2RlbHMubWVzc2FnaW5nLk1lc3NhZ2luZ0NvbXBvbmVudFNwZWMSSgoGc3RhdHVzGAIgASgLMjouaW8uY2xicy5vcGVuaGVzLm1vZGVscy5tZXNzYWdpbmcuTWVzc2FnaW5nQ29tcG9uZW50U3RhdHVzEj8KCG1ldGFkYXRhGAMgASgLMi0uaW8uY2xicy5vcGVuaGVzLm1vZGVscy5jb21tb24uTWV0YWRhdGFGaWVsZHMivwEKIk1lc3NhZ2luZ0NvbXBvbmVudENvbnN1bWVyU2V0dGluZ3MSEwoLY29uc3VtZXJfaWQYASABKAkSUgoPZGVsaXZlcnlfcG9saWN5GAIgASgOMjkuaW8uY2xicy5vcGVuaGVzLm1vZGVscy5tZXNzYWdpbmcuTWVzc2FnaW5nRGVsaXZlcnlQb2xpY3kSHgoWbWF4X2luX2ZsaWdodF9tZXNzYWdlcxgDIAEoBRIQCghzdWJqZWN0cxgEIAMoCSKCAQoWTWVzc2FnaW5nQ29tcG9uZW50U3BlYxIPCgdlbmFibGVkGAEgASgIElcKCWNvbnN1bWVycxgCIAMoCzJELmlvLmNsYnMub3Blbmhlcy5tb2RlbHMubWVzc2FnaW5nLk1lc3NhZ2luZ0NvbXBvbmVudENvbnN1bWVyU2V0dGluZ3MiGgoYTWVzc2FnaW5nQ29tcG9uZW50U3RhdHVzKnwKF01lc3NhZ2luZ0RlbGl2ZXJ5UG9saWN5EiIKHk1FU1NBR0lOR19ERUxJVkVSWV9VTlNQRUNJRklFRBAAEiEKHU1FU1NBR0lOR19ERUxJVkVSWV9XT1JLX1FVRVVFEAESGgoWTUVTU0FHSU5HX0RFTElWRVJZX0FMTBACQjhaNmdpdGh1Yi5jb20vY3licm9zbGFicy9vdXJvLWFwaS1zaGFyZWQvZ2VuL2dvL21lc3NhZ2luZ2IIZWRpdGlvbnNw6Ac", [file_google_protobuf_wrappers, file_common_fields, file_common_metadata]);

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingConsumerClient
 */
export type MessagingConsumerClient = Message<"io.clbs.openhes.models.messaging.MessagingConsumerClient"> & {
  /**
   * @generated from oneof io.clbs.openhes.models.messaging.MessagingConsumerClient.kind
   */
  kind: {
    /**
     * Setup action to initialize the consumer. It must be the first message sent defining the consumer. Any other subsequent setup message will be rejected.
     *
     * @generated from field: io.clbs.openhes.models.messaging.MessagingConsumerSetup setup = 1;
     */
    value: MessagingConsumerSetup;
    case: "setup";
  } | {
    /**
     * Acknowledgement action to confirm the message with the given message ID.
     *
     * @generated from field: google.protobuf.StringValue ack = 2;
     */
    value: StringValue;
    case: "ack";
  } | {
    /**
     * Negative-acknowledgement action to reject and requeue the message with the given message ID.
     *
     * @generated from field: google.protobuf.StringValue nak = 3;
     */
    value: StringValue;
    case: "nak";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingConsumerClient
 */
export type MessagingConsumerClientJson = {
  /**
   * Setup action to initialize the consumer. It must be the first message sent defining the consumer. Any other subsequent setup message will be rejected.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingConsumerSetup setup = 1;
   */
  setup?: MessagingConsumerSetupJson;

  /**
   * Acknowledgement action to confirm the message with the given message ID.
   *
   * @generated from field: google.protobuf.StringValue ack = 2;
   */
  ack?: StringValueJson;

  /**
   * Negative-acknowledgement action to reject and requeue the message with the given message ID.
   *
   * @generated from field: google.protobuf.StringValue nak = 3;
   */
  nak?: StringValueJson;
};

/**
 * Describes the message io.clbs.openhes.models.messaging.MessagingConsumerClient.
 * Use `create(MessagingConsumerClientSchema)` to create a new message.
 */
export const MessagingConsumerClientSchema: GenMessage<MessagingConsumerClient, {jsonType: MessagingConsumerClientJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 0);

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingConsumerServer
 */
export type MessagingConsumerServer = Message<"io.clbs.openhes.models.messaging.MessagingConsumerServer"> & {
  /**
   * @generated from oneof io.clbs.openhes.models.messaging.MessagingConsumerServer.kine
   */
  kine: {
    /**
     * Receive action to deliver a message to the consumer.
     *
     * @generated from field: io.clbs.openhes.models.messaging.MessagingReceiveMessage receive = 1;
     */
    value: MessagingReceiveMessage;
    case: "receive";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingConsumerServer
 */
export type MessagingConsumerServerJson = {
  /**
   * Receive action to deliver a message to the consumer.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingReceiveMessage receive = 1;
   */
  receive?: MessagingReceiveMessageJson;
};

/**
 * Describes the message io.clbs.openhes.models.messaging.MessagingConsumerServer.
 * Use `create(MessagingConsumerServerSchema)` to create a new message.
 */
export const MessagingConsumerServerSchema: GenMessage<MessagingConsumerServer, {jsonType: MessagingConsumerServerJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 1);

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingPublisherClient
 */
export type MessagingPublisherClient = Message<"io.clbs.openhes.models.messaging.MessagingPublisherClient"> & {
  /**
   * @generated from oneof io.clbs.openhes.models.messaging.MessagingPublisherClient.kind
   */
  kind: {
    /**
     * Setup action to initialize the publisher. It must be the first message sent defining the publisher. Any other subsequent setup message will be rejected.
     *
     * @generated from field: io.clbs.openhes.models.messaging.MessagingPublisherSetup setup = 1;
     */
    value: MessagingPublisherSetup;
    case: "setup";
  } | {
    /**
     * Publish action to send a message to be published.
     *
     * @generated from field: io.clbs.openhes.models.messaging.MessagingPublishMessage publish = 2;
     */
    value: MessagingPublishMessage;
    case: "publish";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingPublisherClient
 */
export type MessagingPublisherClientJson = {
  /**
   * Setup action to initialize the publisher. It must be the first message sent defining the publisher. Any other subsequent setup message will be rejected.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingPublisherSetup setup = 1;
   */
  setup?: MessagingPublisherSetupJson;

  /**
   * Publish action to send a message to be published.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingPublishMessage publish = 2;
   */
  publish?: MessagingPublishMessageJson;
};

/**
 * Describes the message io.clbs.openhes.models.messaging.MessagingPublisherClient.
 * Use `create(MessagingPublisherClientSchema)` to create a new message.
 */
export const MessagingPublisherClientSchema: GenMessage<MessagingPublisherClient, {jsonType: MessagingPublisherClientJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 2);

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingPublisherSetup
 */
export type MessagingPublisherSetup = Message<"io.clbs.openhes.models.messaging.MessagingPublisherSetup"> & {
  /**
   * The metadata fields. The ID and name represents the component ID and name and must be the same for all publishers and consumers of the same component.
   *
   * @generated from field: io.clbs.openhes.models.common.MetadataFields metadata = 3;
   */
  metadata?: MetadataFields;
};

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingPublisherSetup
 */
export type MessagingPublisherSetupJson = {
  /**
   * The metadata fields. The ID and name represents the component ID and name and must be the same for all publishers and consumers of the same component.
   *
   * @generated from field: io.clbs.openhes.models.common.MetadataFields metadata = 3;
   */
  metadata?: MetadataFieldsJson;
};

/**
 * Describes the message io.clbs.openhes.models.messaging.MessagingPublisherSetup.
 * Use `create(MessagingPublisherSetupSchema)` to create a new message.
 */
export const MessagingPublisherSetupSchema: GenMessage<MessagingPublisherSetup, {jsonType: MessagingPublisherSetupJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 3);

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingPublishMessage
 */
export type MessagingPublishMessage = Message<"io.clbs.openhes.models.messaging.MessagingPublishMessage"> & {
  /**
   * Subject of the message to be published.
   *
   * @generated from field: string subject = 1;
   */
  subject: string;

  /**
   * The message data to be published.
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingPublishMessage
 */
export type MessagingPublishMessageJson = {
  /**
   * Subject of the message to be published.
   *
   * @generated from field: string subject = 1;
   */
  subject?: string;

  /**
   * The message data to be published.
   *
   * @generated from field: bytes data = 2;
   */
  data?: string;
};

/**
 * Describes the message io.clbs.openhes.models.messaging.MessagingPublishMessage.
 * Use `create(MessagingPublishMessageSchema)` to create a new message.
 */
export const MessagingPublishMessageSchema: GenMessage<MessagingPublishMessage, {jsonType: MessagingPublishMessageJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 4);

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingConsumerSetup
 */
export type MessagingConsumerSetup = Message<"io.clbs.openhes.models.messaging.MessagingConsumerSetup"> & {
  /**
   * Settings for the messaging component.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingComponentConsumerSettings settings = 2;
   */
  settings?: MessagingComponentConsumerSettings;

  /**
   * The metadata fields. The ID and name represents the component ID and name and must be the same for all publishers and consumers of the same component.
   *
   * @generated from field: io.clbs.openhes.models.common.MetadataFields metadata = 3;
   */
  metadata?: MetadataFields;
};

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingConsumerSetup
 */
export type MessagingConsumerSetupJson = {
  /**
   * Settings for the messaging component.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingComponentConsumerSettings settings = 2;
   */
  settings?: MessagingComponentConsumerSettingsJson;

  /**
   * The metadata fields. The ID and name represents the component ID and name and must be the same for all publishers and consumers of the same component.
   *
   * @generated from field: io.clbs.openhes.models.common.MetadataFields metadata = 3;
   */
  metadata?: MetadataFieldsJson;
};

/**
 * Describes the message io.clbs.openhes.models.messaging.MessagingConsumerSetup.
 * Use `create(MessagingConsumerSetupSchema)` to create a new message.
 */
export const MessagingConsumerSetupSchema: GenMessage<MessagingConsumerSetup, {jsonType: MessagingConsumerSetupJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 5);

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingReceiveMessage
 */
export type MessagingReceiveMessage = Message<"io.clbs.openhes.models.messaging.MessagingReceiveMessage"> & {
  /**
   * Unique identifier of the message.
   *
   * @generated from field: string message_id = 1;
   */
  messageId: string;

  /**
   * Subject of the message.
   *
   * @generated from field: string subject = 2;
   */
  subject: string;

  /**
   * The message data.
   *
   * @generated from field: bytes data = 3;
   */
  data: Uint8Array;
};

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingReceiveMessage
 */
export type MessagingReceiveMessageJson = {
  /**
   * Unique identifier of the message.
   *
   * @generated from field: string message_id = 1;
   */
  messageId?: string;

  /**
   * Subject of the message.
   *
   * @generated from field: string subject = 2;
   */
  subject?: string;

  /**
   * The message data.
   *
   * @generated from field: bytes data = 3;
   */
  data?: string;
};

/**
 * Describes the message io.clbs.openhes.models.messaging.MessagingReceiveMessage.
 * Use `create(MessagingReceiveMessageSchema)` to create a new message.
 */
export const MessagingReceiveMessageSchema: GenMessage<MessagingReceiveMessage, {jsonType: MessagingReceiveMessageJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 6);

/**
 * @generated from message io.clbs.openhes.models.messaging.ListOfMessagingComponent
 */
export type ListOfMessagingComponent = Message<"io.clbs.openhes.models.messaging.ListOfMessagingComponent"> & {
  /**
   * The list of messaging components known to the system.
   *
   * @generated from field: repeated io.clbs.openhes.models.messaging.MessagingComponent items = 1;
   */
  items: MessagingComponent[];

  /**
   * The total number of items.
   *
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;
};

/**
 * @generated from message io.clbs.openhes.models.messaging.ListOfMessagingComponent
 */
export type ListOfMessagingComponentJson = {
  /**
   * The list of messaging components known to the system.
   *
   * @generated from field: repeated io.clbs.openhes.models.messaging.MessagingComponent items = 1;
   */
  items?: MessagingComponentJson[];

  /**
   * The total number of items.
   *
   * @generated from field: int32 total_count = 2;
   */
  totalCount?: number;
};

/**
 * Describes the message io.clbs.openhes.models.messaging.ListOfMessagingComponent.
 * Use `create(ListOfMessagingComponentSchema)` to create a new message.
 */
export const ListOfMessagingComponentSchema: GenMessage<ListOfMessagingComponent, {jsonType: ListOfMessagingComponentJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 7);

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingComponent
 */
export type MessagingComponent = Message<"io.clbs.openhes.models.messaging.MessagingComponent"> & {
  /**
   * Specification of the messaging component.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingComponentSpec spec = 1;
   */
  spec?: MessagingComponentSpec;

  /**
   * Specification of the messaging component.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingComponentStatus status = 2;
   */
  status?: MessagingComponentStatus;

  /**
   * The metadata fields.
   *
   * @generated from field: io.clbs.openhes.models.common.MetadataFields metadata = 3;
   */
  metadata?: MetadataFields;
};

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingComponent
 */
export type MessagingComponentJson = {
  /**
   * Specification of the messaging component.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingComponentSpec spec = 1;
   */
  spec?: MessagingComponentSpecJson;

  /**
   * Specification of the messaging component.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingComponentStatus status = 2;
   */
  status?: MessagingComponentStatusJson;

  /**
   * The metadata fields.
   *
   * @generated from field: io.clbs.openhes.models.common.MetadataFields metadata = 3;
   */
  metadata?: MetadataFieldsJson;
};

/**
 * Describes the message io.clbs.openhes.models.messaging.MessagingComponent.
 * Use `create(MessagingComponentSchema)` to create a new message.
 */
export const MessagingComponentSchema: GenMessage<MessagingComponent, {jsonType: MessagingComponentJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 8);

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingComponentConsumerSettings
 */
export type MessagingComponentConsumerSettings = Message<"io.clbs.openhes.models.messaging.MessagingComponentConsumerSettings"> & {
  /**
   * Unique UUID identifier for the consumer. It must be unique across all consumers of the same component.
   *
   * @generated from field: string consumer_id = 1;
   */
  consumerId: string;

  /**
   * Delivery policy for the consumer.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingDeliveryPolicy delivery_policy = 2;
   */
  deliveryPolicy: MessagingDeliveryPolicy;

  /**
   * Maximum number of in-flight (unacknowledged) messages allowed for the consumer. Value >1 means that multiple consumers may receive messages concurrently without preserving order. Value 1 means that only a single message may be in-flight at any time, preserving order even when multiple consumers are running.
   *
   * @generated from field: int32 max_in_flight_messages = 3;
   */
  maxInFlightMessages: number;

  /**
   * List of subjects the consumer is interested in. It must not be empty. If it's changed then all existing consumers for the same component will be affected!
   *
   * @generated from field: repeated string subjects = 4;
   */
  subjects: string[];
};

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingComponentConsumerSettings
 */
export type MessagingComponentConsumerSettingsJson = {
  /**
   * Unique UUID identifier for the consumer. It must be unique across all consumers of the same component.
   *
   * @generated from field: string consumer_id = 1;
   */
  consumerId?: string;

  /**
   * Delivery policy for the consumer.
   *
   * @generated from field: io.clbs.openhes.models.messaging.MessagingDeliveryPolicy delivery_policy = 2;
   */
  deliveryPolicy?: MessagingDeliveryPolicyJson;

  /**
   * Maximum number of in-flight (unacknowledged) messages allowed for the consumer. Value >1 means that multiple consumers may receive messages concurrently without preserving order. Value 1 means that only a single message may be in-flight at any time, preserving order even when multiple consumers are running.
   *
   * @generated from field: int32 max_in_flight_messages = 3;
   */
  maxInFlightMessages?: number;

  /**
   * List of subjects the consumer is interested in. It must not be empty. If it's changed then all existing consumers for the same component will be affected!
   *
   * @generated from field: repeated string subjects = 4;
   */
  subjects?: string[];
};

/**
 * Describes the message io.clbs.openhes.models.messaging.MessagingComponentConsumerSettings.
 * Use `create(MessagingComponentConsumerSettingsSchema)` to create a new message.
 */
export const MessagingComponentConsumerSettingsSchema: GenMessage<MessagingComponentConsumerSettings, {jsonType: MessagingComponentConsumerSettingsJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 9);

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingComponentSpec
 */
export type MessagingComponentSpec = Message<"io.clbs.openhes.models.messaging.MessagingComponentSpec"> & {
  /**
   * Whether the component is enabled or disabled. If disabled, the component will not receive any messages.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Settings for the messaging component.
   *
   * @generated from field: repeated io.clbs.openhes.models.messaging.MessagingComponentConsumerSettings consumers = 2;
   */
  consumers: MessagingComponentConsumerSettings[];
};

/**
 * @generated from message io.clbs.openhes.models.messaging.MessagingComponentSpec
 */
export type MessagingComponentSpecJson = {
  /**
   * Whether the component is enabled or disabled. If disabled, the component will not receive any messages.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled?: boolean;

  /**
   * Settings for the messaging component.
   *
   * @generated from field: repeated io.clbs.openhes.models.messaging.MessagingComponentConsumerSettings consumers = 2;
   */
  consumers?: MessagingComponentConsumerSettingsJson[];
};

/**
 * Describes the message io.clbs.openhes.models.messaging.MessagingComponentSpec.
 * Use `create(MessagingComponentSpecSchema)` to create a new message.
 */
export const MessagingComponentSpecSchema: GenMessage<MessagingComponentSpec, {jsonType: MessagingComponentSpecJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 10);

/**
 * FIXME: Add status fields as needed
 *
 * @generated from message io.clbs.openhes.models.messaging.MessagingComponentStatus
 */
export type MessagingComponentStatus = Message<"io.clbs.openhes.models.messaging.MessagingComponentStatus"> & {
};

/**
 * FIXME: Add status fields as needed
 *
 * @generated from message io.clbs.openhes.models.messaging.MessagingComponentStatus
 */
export type MessagingComponentStatusJson = {
};

/**
 * Describes the message io.clbs.openhes.models.messaging.MessagingComponentStatus.
 * Use `create(MessagingComponentStatusSchema)` to create a new message.
 */
export const MessagingComponentStatusSchema: GenMessage<MessagingComponentStatus, {jsonType: MessagingComponentStatusJson}> = /*@__PURE__*/
  messageDesc(file_messaging_messaging, 11);

/**
 * @generated from enum io.clbs.openhes.models.messaging.MessagingDeliveryPolicy
 */
export enum MessagingDeliveryPolicy {
  /**
   * Unspecified delivery policy.
   *
   * @generated from enum value: MESSAGING_DELIVERY_UNSPECIFIED = 0;
   */
  MESSAGING_DELIVERY_UNSPECIFIED = 0,

  /**
   * Deliver the message to single consumer - work queue style.
   *
   * @generated from enum value: MESSAGING_DELIVERY_WORK_QUEUE = 1;
   */
  MESSAGING_DELIVERY_WORK_QUEUE = 1,

  /**
   * Deliver the message to all defined consumers.
   *
   * @generated from enum value: MESSAGING_DELIVERY_ALL = 2;
   */
  MESSAGING_DELIVERY_ALL = 2,
}

/**
 * @generated from enum io.clbs.openhes.models.messaging.MessagingDeliveryPolicy
 */
export type MessagingDeliveryPolicyJson = "MESSAGING_DELIVERY_UNSPECIFIED" | "MESSAGING_DELIVERY_WORK_QUEUE" | "MESSAGING_DELIVERY_ALL";

/**
 * Describes the enum io.clbs.openhes.models.messaging.MessagingDeliveryPolicy.
 */
export const MessagingDeliveryPolicySchema: GenEnum<MessagingDeliveryPolicy, MessagingDeliveryPolicyJson> = /*@__PURE__*/
  enumDesc(file_messaging_messaging, 0);

