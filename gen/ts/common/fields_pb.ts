// @generated by protoc-gen-es v2.10.0 with parameter "target=ts,json_types=true"
// @generated from file common/fields.proto (package io.clbs.openhes.models.common, edition 2023)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Duration, DurationJson, Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { ObjectType, ObjectTypeJson } from "./objects_pb";
import { file_common_objects } from "./objects_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file common/fields.proto.
 */
export const file_common_fields: GenFile = /*@__PURE__*/
  fileDesc("ChNjb21tb24vZmllbGRzLnByb3RvEh1pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbiLNAQoMTGlzdFNlbGVjdG9yEhEKCXBhZ2Vfc2l6ZRgBIAEoDRIOCgZvZmZzZXQYAiABKA0SQgoHc29ydF9ieRgDIAMoCzIxLmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uLkxpc3RTZWxlY3RvclNvcnRCeRJGCglmaWx0ZXJfYnkYBCADKAsyMy5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5MaXN0U2VsZWN0b3JGaWx0ZXJCeRIOCgZmaWVsZHMYBSADKAkiNwoSTGlzdFNlbGVjdG9yU29ydEJ5EgwKBHBhdGgYASABKAkSEwoEZGVzYxgCIAEoCDoFZmFsc2UikAIKFExpc3RTZWxlY3RvckZpbHRlckJ5EgwKBHBhdGgYASABKAkSPwoIb3BlcmF0b3IYAiABKA4yLS5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5GaWx0ZXJPcGVyYXRvchI/CglkYXRhX3R5cGUYAyABKA4yLC5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5GaWVsZERhdGFUeXBlEgwKBHRleHQYBCADKAkSDwoHaW50ZWdlchgFIAMoEhIOCgZudW1iZXIYBiADKAESDwoHYm9vbGVhbhgHIAMoCBIoCgRkYXRlGAggAygLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJoChxDcmVhdGVGaWVsZERlc2NyaXB0b3JSZXF1ZXN0EjwKBHNwZWMYASABKAsyLi5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5GaWVsZERlc2NyaXB0b3JKBAgCEANKBAgDEAQiZgoXRmllbGREZXNjcmlwdG9yU2VsZWN0b3ISPgoLb2JqZWN0X3R5cGUYASABKA4yKS5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5PYmplY3RUeXBlEgsKA2dpZBgCIAEoCSKdBQoPRmllbGREZXNjcmlwdG9yEhcKD2lzX3VzZXJfZGVmaW5lZBgBIAEoCBI+CgtvYmplY3RfdHlwZRgCIAEoDjIpLmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uLk9iamVjdFR5cGUSCwoDZ2lkGAMgASgJEhAKCGZpZWxkX2lkGAQgASgJEg8KB2pzX3BhdGgYBSABKAkSDAoEcGF0aBgGIAEoCRINCgVsYWJlbBgHIAEoCRIQCghncm91cF9pZBgIIAEoCRI/CglkYXRhX3R5cGUYCSABKA4yLC5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5GaWVsZERhdGFUeXBlEkEKBmZvcm1hdBgKIAEoDjIxLmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uLkZpZWxkRGlzcGxheUZvcm1hdBIMCgR1bml0GAsgASgJEhEKCXByZWNpc2lvbhgMIAEoBRIPCgd0b29sdGlwGA0gASgJEhAKCHJlcXVpcmVkGA4gASgIEhAKCGVkaXRhYmxlGA8gASgIEg8KB3Zpc2libGUYECABKAgSEwoLbXVsdGlfdmFsdWUYESABKAgSDwoHc2VjdXJlZBgSIAEoCBJCCgp2YWxpZGF0aW9uGBMgASgLMi4uaW8uY2xicy5vcGVuaGVzLm1vZGVscy5jb21tb24uRmllbGRWYWxpZGF0aW9uEkAKDWRlZmF1bHRfdmFsdWUYFCABKAsyKS5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5GaWVsZFZhbHVlEhAKCHNvcnRhYmxlGBUgASgIEhIKCmZpbHRlcmFibGUYFiABKAgSFQoNZGlzcGxheV9vcmRlchgXIAEoBSKtAgoPRmllbGRWYWxpZGF0aW9uEgoKAnJlGAEgASgJEhIKCm1pbl9sZW5ndGgYAiABKAUSEgoKbWF4X2xlbmd0aBgDIAEoBRITCgttaW5faW50ZWdlchgEIAEoEhITCgttYXhfaW50ZWdlchgFIAEoEhISCgptaW5fbnVtYmVyGAYgASgBEhIKCm1heF9udW1iZXIYByABKAESTAoHb3B0aW9ucxgIIAMoCzI7LmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uLkZpZWxkVmFsaWRhdGlvbi5PcHRpb25zRW50cnkSFgoOb3B0aW9uc19zb3VyY2UYCSABKAkaLgoMT3B0aW9uc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi8gEKCkZpZWxkVmFsdWUSFgoMc3RyaW5nX3ZhbHVlGAEgASgJSAASFwoNaW50ZWdlcl92YWx1ZRgCIAEoA0gAEhYKDGRvdWJsZV92YWx1ZRgDIAEoAUgAEhYKDGJpbmFyeV92YWx1ZRgEIAEoDEgAEhQKCmJvb2xfdmFsdWUYBSABKAhIABIwCgpkYXRlX3ZhbHVlGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAEjMKDmR1cmF0aW9uX3ZhbHVlGAcgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uSABCBgoEa2luZCK7AQoLRmllbGRWYWx1ZXMSTgoKYXR0cmlidXRlcxgBIAMoCzI6LmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uLkZpZWxkVmFsdWVzLkF0dHJpYnV0ZXNFbnRyeRpcCg9BdHRyaWJ1dGVzRW50cnkSCwoDa2V5GAEgASgJEjgKBXZhbHVlGAIgASgLMikuaW8uY2xicy5vcGVuaGVzLm1vZGVscy5jb21tb24uRmllbGRWYWx1ZToCOAEiYQoQTGlzdE9mRmllbGRWYWx1ZRI4CgVpdGVtcxgBIAMoCzIpLmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uLkZpZWxkVmFsdWUSEwoLdG90YWxfY291bnQYAiABKAUiawoVTGlzdE9mRmllbGREZXNjcmlwdG9yEj0KBWl0ZW1zGAEgAygLMi4uaW8uY2xicy5vcGVuaGVzLm1vZGVscy5jb21tb24uRmllbGREZXNjcmlwdG9yEhMKC3RvdGFsX2NvdW50GAIgASgFIlQKIUxpc3RGaWVsZERlc2NyaXB0b3JPcHRpb25zUmVxdWVzdBIWCg5vcHRpb25zX3NvdXJjZRgBIAEoCRIXCg9maWx0ZXJfY29udGFpbnMYAiABKAkitQEKFkZpZWxkRGVzY3JpcHRvck9wdGlvbnMSUwoHb3B0aW9ucxgBIAMoCzJCLmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uLkZpZWxkRGVzY3JpcHRvck9wdGlvbnMuT3B0aW9uc0VudHJ5EhYKCGNvbXBsZXRlGAIgASgIOgR0cnVlGi4KDE9wdGlvbnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBKp4CCg5GaWx0ZXJPcGVyYXRvchIfChtGSUxURVJfT1BFUkFUT1JfVU5TUEVDSUZJRUQQABIJCgVFUVVBTBABEg0KCU5PVF9FUVVBTBACEhAKDEdSRUFURVJfVEhBThADEhkKFUdSRUFURVJfVEhBTl9PUl9FUVVBTBAEEg0KCUxFU1NfVEhBThAFEhYKEkxFU1NfVEhBTl9PUl9FUVVBTBAGEgwKCENPTlRBSU5TEAcSEAoMTk9UX0NPTlRBSU5TEAgSDwoLU1RBUlRTX1dJVEgQCRINCglFTkRTX1dJVEgQChIGCgJJThALEgoKBk5PVF9JThAMEgsKB0JFVFdFRU4QDRILCgdJU19OVUxMEA4SDwoLSVNfTk9UX05VTEwQDyqDAQoNRmllbGREYXRhVHlwZRIZChVEQVRBX1RZUEVfVU5TUEVDSUZJRUQQABIICgRURVhUEAESCwoHSU5URUdFUhACEgoKBkRPVUJMRRADEgoKBkJJTkFSWRAEEgsKB0JPT0xFQU4QBRINCglUSU1FU1RBTVAQBhIMCghEVVJBVElPThAHKqoBChJGaWVsZERpc3BsYXlGb3JtYXQSHgoaRElTUExBWV9GT1JNQVRfVU5TUEVDSUZJRUQQABINCglEQVRFX09OTFkQARIQCgxVVENfREFURVRJTUUQAhIRCg1VVENfREFURV9PTkxZEAMSDQoJVElNRU9GREFZEAQSCQoFTU9ORVkQBRIMCghQQVNTV09SRBAGEg0KCU1VTFRJTElORRAHEgkKBUNPTUJPEAhCNVozZ2l0aHViLmNvbS9jeWJyb3NsYWJzL291cm8tYXBpLXNoYXJlZC9nZW4vZ28vY29tbW9uYghlZGl0aW9uc3DoBw", [file_google_protobuf_timestamp, file_google_protobuf_duration, file_common_objects]);

/**
 * Defines the selection criteria for listing objects, including pagination, sorting, filtering, and field selection.
 *
 * @generated from message io.clbs.openhes.models.common.ListSelector
 */
export type ListSelector = Message<"io.clbs.openhes.models.common.ListSelector"> & {
  /**
   * The number of items per page.
   *
   * @generated from field: uint32 page_size = 1;
   */
  pageSize: number;

  /**
   * The zero-based offset of the first item in the response.
   * @values: Any non-negative integer
   * @example: 15
   *
   * @generated from field: uint32 offset = 2;
   */
  offset: number;

  /**
   * The sorting criteria.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.ListSelectorSortBy sort_by = 3;
   */
  sortBy: ListSelectorSortBy[];

  /**
   * The filtering criteria.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.ListSelectorFilterBy filter_by = 4;
   */
  filterBy: ListSelectorFilterBy[];

  /**
   * FIXME: This needs to be designed properly.
   *
   * Optional list of additional fields to include in the response.
   *
   * @generated from field: repeated string fields = 5;
   */
  fields: string[];
};

/**
 * Defines the selection criteria for listing objects, including pagination, sorting, filtering, and field selection.
 *
 * @generated from message io.clbs.openhes.models.common.ListSelector
 */
export type ListSelectorJson = {
  /**
   * The number of items per page.
   *
   * @generated from field: uint32 page_size = 1;
   */
  pageSize?: number;

  /**
   * The zero-based offset of the first item in the response.
   * @values: Any non-negative integer
   * @example: 15
   *
   * @generated from field: uint32 offset = 2;
   */
  offset?: number;

  /**
   * The sorting criteria.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.ListSelectorSortBy sort_by = 3;
   */
  sortBy?: ListSelectorSortByJson[];

  /**
   * The filtering criteria.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.ListSelectorFilterBy filter_by = 4;
   */
  filterBy?: ListSelectorFilterByJson[];

  /**
   * FIXME: This needs to be designed properly.
   *
   * Optional list of additional fields to include in the response.
   *
   * @generated from field: repeated string fields = 5;
   */
  fields?: string[];
};

/**
 * Describes the message io.clbs.openhes.models.common.ListSelector.
 * Use `create(ListSelectorSchema)` to create a new message.
 */
export const ListSelectorSchema: GenMessage<ListSelector, {jsonType: ListSelectorJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 0);

/**
 * Defines the sorting criteria for listing objects.
 *
 * @generated from message io.clbs.openhes.models.common.ListSelectorSortBy
 */
export type ListSelectorSortBy = Message<"io.clbs.openhes.models.common.ListSelectorSortBy"> & {
  /**
   * The field path to sort by. This may be a JSON path (`js_path`) or a path from `FieldDescriptor`.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * The sorting order of the results - descending (`true`) or ascending (`false`).
   *
   * @generated from field: bool desc = 2 [default = false];
   */
  desc: boolean;
};

/**
 * Defines the sorting criteria for listing objects.
 *
 * @generated from message io.clbs.openhes.models.common.ListSelectorSortBy
 */
export type ListSelectorSortByJson = {
  /**
   * The field path to sort by. This may be a JSON path (`js_path`) or a path from `FieldDescriptor`.
   *
   * @generated from field: string path = 1;
   */
  path?: string;

  /**
   * The sorting order of the results - descending (`true`) or ascending (`false`).
   *
   * @generated from field: bool desc = 2 [default = false];
   */
  desc?: boolean;
};

/**
 * Describes the message io.clbs.openhes.models.common.ListSelectorSortBy.
 * Use `create(ListSelectorSortBySchema)` to create a new message.
 */
export const ListSelectorSortBySchema: GenMessage<ListSelectorSortBy, {jsonType: ListSelectorSortByJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 1);

/**
 * Defines the filtering criteria for listing objects.
 *
 * Depending on the operator, a specific filed type must be provided.
 * - **No value** is required for operators: `IS_NULL`, `IS_NOT_NULL`.
 * - Exactly **one value** must be set for single-operand operators: `EQUAL`, `NOT_EQUAL`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL`, `CONTAINS`, `NOT_CONTAINS`, `STARTS_WITH`, `ENDS_WITH`.
 * - Exactly **two values** must be set for two-operand operators: `BETWEEN`.
 * - **Zero or more** values can be set for generic operators: `IN`, `NOT_IN`.
 *
 * Only the field corresponding to th declared data type must be set. Other fields must not be set will be ignored by the system.
 *
 * @generated from message io.clbs.openhes.models.common.ListSelectorFilterBy
 */
export type ListSelectorFilterBy = Message<"io.clbs.openhes.models.common.ListSelectorFilterBy"> & {
  /**
   * The field path to filter by. This may be a JSON path (`js_path`) or a path from `FieldDescriptor`.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * The operator that defines the filtering condition.
   *
   * @generated from field: io.clbs.openhes.models.common.FilterOperator operator = 2;
   */
  operator: FilterOperator;

  /**
   * The data type of the field.
   *
   * @generated from field: io.clbs.openhes.models.common.FieldDataType data_type = 3;
   */
  dataType: FieldDataType;

  /**
   * The values for string-based filtering.
   *
   * @generated from field: repeated string text = 4;
   */
  text: string[];

  /**
   * The values for integer-based filtering.
   *
   * @generated from field: repeated sint64 integer = 5;
   */
  integer: bigint[];

  /**
   * The values for numeric filtering.
   *
   * @generated from field: repeated double number = 6;
   */
  number: number[];

  /**
   * The values for boolean-based filtering.
   *
   * @generated from field: repeated bool boolean = 7;
   */
  boolean: boolean[];

  /**
   * Values for date-based filtering.
   *
   * @generated from field: repeated google.protobuf.Timestamp date = 8;
   */
  date: Timestamp[];
};

/**
 * Defines the filtering criteria for listing objects.
 *
 * Depending on the operator, a specific filed type must be provided.
 * - **No value** is required for operators: `IS_NULL`, `IS_NOT_NULL`.
 * - Exactly **one value** must be set for single-operand operators: `EQUAL`, `NOT_EQUAL`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL`, `CONTAINS`, `NOT_CONTAINS`, `STARTS_WITH`, `ENDS_WITH`.
 * - Exactly **two values** must be set for two-operand operators: `BETWEEN`.
 * - **Zero or more** values can be set for generic operators: `IN`, `NOT_IN`.
 *
 * Only the field corresponding to th declared data type must be set. Other fields must not be set will be ignored by the system.
 *
 * @generated from message io.clbs.openhes.models.common.ListSelectorFilterBy
 */
export type ListSelectorFilterByJson = {
  /**
   * The field path to filter by. This may be a JSON path (`js_path`) or a path from `FieldDescriptor`.
   *
   * @generated from field: string path = 1;
   */
  path?: string;

  /**
   * The operator that defines the filtering condition.
   *
   * @generated from field: io.clbs.openhes.models.common.FilterOperator operator = 2;
   */
  operator?: FilterOperatorJson;

  /**
   * The data type of the field.
   *
   * @generated from field: io.clbs.openhes.models.common.FieldDataType data_type = 3;
   */
  dataType?: FieldDataTypeJson;

  /**
   * The values for string-based filtering.
   *
   * @generated from field: repeated string text = 4;
   */
  text?: string[];

  /**
   * The values for integer-based filtering.
   *
   * @generated from field: repeated sint64 integer = 5;
   */
  integer?: string[];

  /**
   * The values for numeric filtering.
   *
   * @generated from field: repeated double number = 6;
   */
  number?: (number | "NaN" | "Infinity" | "-Infinity")[];

  /**
   * The values for boolean-based filtering.
   *
   * @generated from field: repeated bool boolean = 7;
   */
  boolean?: boolean[];

  /**
   * Values for date-based filtering.
   *
   * @generated from field: repeated google.protobuf.Timestamp date = 8;
   */
  date?: TimestampJson[];
};

/**
 * Describes the message io.clbs.openhes.models.common.ListSelectorFilterBy.
 * Use `create(ListSelectorFilterBySchema)` to create a new message.
 */
export const ListSelectorFilterBySchema: GenMessage<ListSelectorFilterBy, {jsonType: ListSelectorFilterByJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 2);

/**
 * Defines the specification for creating a new field descriptor.
 *
 * @generated from message io.clbs.openhes.models.common.CreateFieldDescriptorRequest
 */
export type CreateFieldDescriptorRequest = Message<"io.clbs.openhes.models.common.CreateFieldDescriptorRequest"> & {
  /**
   * The specification of the field descriptor to be created.
   *
   * @generated from field: io.clbs.openhes.models.common.FieldDescriptor spec = 1;
   */
  spec?: FieldDescriptor;
};

/**
 * Defines the specification for creating a new field descriptor.
 *
 * @generated from message io.clbs.openhes.models.common.CreateFieldDescriptorRequest
 */
export type CreateFieldDescriptorRequestJson = {
  /**
   * The specification of the field descriptor to be created.
   *
   * @generated from field: io.clbs.openhes.models.common.FieldDescriptor spec = 1;
   */
  spec?: FieldDescriptorJson;
};

/**
 * Describes the message io.clbs.openhes.models.common.CreateFieldDescriptorRequest.
 * Use `create(CreateFieldDescriptorRequestSchema)` to create a new message.
 */
export const CreateFieldDescriptorRequestSchema: GenMessage<CreateFieldDescriptorRequest, {jsonType: CreateFieldDescriptorRequestJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 3);

/**
 * Define the system-wide field descriptor selector.
 *
 * @generated from message io.clbs.openhes.models.common.FieldDescriptorSelector
 */
export type FieldDescriptorSelector = Message<"io.clbs.openhes.models.common.FieldDescriptorSelector"> & {
  /**
   * Defines the resource type for which the field descriptor is defined, for example, `BULK`, `DEVICE`, etc.
   *
   * @generated from field: io.clbs.openhes.models.common.ObjectType object_type = 1;
   */
  objectType: ObjectType;

  /**
   * The system-wide unique identifier of the field descriptor.
   *
   * @generated from field: string gid = 2;
   */
  gid: string;
};

/**
 * Define the system-wide field descriptor selector.
 *
 * @generated from message io.clbs.openhes.models.common.FieldDescriptorSelector
 */
export type FieldDescriptorSelectorJson = {
  /**
   * Defines the resource type for which the field descriptor is defined, for example, `BULK`, `DEVICE`, etc.
   *
   * @generated from field: io.clbs.openhes.models.common.ObjectType object_type = 1;
   */
  objectType?: ObjectTypeJson;

  /**
   * The system-wide unique identifier of the field descriptor.
   *
   * @generated from field: string gid = 2;
   */
  gid?: string;
};

/**
 * Describes the message io.clbs.openhes.models.common.FieldDescriptorSelector.
 * Use `create(FieldDescriptorSelectorSchema)` to create a new message.
 */
export const FieldDescriptorSelectorSchema: GenMessage<FieldDescriptorSelector, {jsonType: FieldDescriptorSelectorJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 4);

/**
 * Defines the field descriptor specification.
 *
 * @generated from message io.clbs.openhes.models.common.FieldDescriptor
 */
export type FieldDescriptor = Message<"io.clbs.openhes.models.common.FieldDescriptor"> & {
  /**
   * Indicates whether the field descriptor is user-defined (for example, a custom field added by users).
   *
   * @generated from field: bool is_user_defined = 1;
   */
  isUserDefined: boolean;

  /**
   * The resource type for which the field descriptor is defined (for example, `BULK`, `DEVICE`).
   *
   * @generated from field: io.clbs.openhes.models.common.ObjectType object_type = 2;
   */
  objectType: ObjectType;

  /**
   * The unique identifier of the field descriptor within the system.
   *
   * @generated from field: string gid = 3;
   */
  gid: string;

  /**
   * The unique field descriptor identifier.
   *
   * @generated from field: string field_id = 4;
   */
  fieldId: string;

  /**
   * The path to the field in the TypeScript representation.
   *
   * @generated from field: string js_path = 5;
   */
  jsPath: string;

  /**
   * The path to the field in the gRPC/JSON simplified representation.
   *
   * @generated from field: string path = 6;
   */
  path: string;

  /**
   * The label displayed for the field.
   *
   * @generated from field: string label = 7;
   */
  label: string;

  /**
   * The group (section) identifier for the field.
   *
   * @generated from field: string group_id = 8;
   */
  groupId: string;

  /**
   * The data type of the field (for example, `text`, `double`).
   *
   * @generated from field: io.clbs.openhes.models.common.FieldDataType data_type = 9;
   */
  dataType: FieldDataType;

  /**
   * The display format of the field (for example, `1h 30m`).
   *
   * @generated from field: io.clbs.openhes.models.common.FieldDisplayFormat format = 10;
   */
  format: FieldDisplayFormat;

  /**
   * The display unit for the field (fr example, `kWh`, `USD`).
   *
   * @generated from field: string unit = 11;
   */
  unit: string;

  /**
   * The decimal precision for double values.
   *
   * @generated from field: int32 precision = 12;
   */
  precision: number;

  /**
   * A tooltip or hint text for tehe field.
   *
   * @generated from field: string tooltip = 13;
   */
  tooltip: string;

  /**
   * Indicates whether the field is mandatory.
   *
   * @generated from field: bool required = 14;
   */
  required: boolean;

  /**
   * Indicates whether the field is editable.
   *
   * @generated from field: bool editable = 15;
   */
  editable: boolean;

  /**
   * Indicates whether the field is visible.
   *
   * @generated from field: bool visible = 16;
   */
  visible: boolean;

  /**
   * Indicates whether the field can contain multiple values.
   *
   * @generated from field: bool multi_value = 17;
   */
  multiValue: boolean;

  /**
   * Indicates whether the field should be handled as security fields (for example, password or certificate input area).
   *
   * @generated from field: bool secured = 18;
   */
  secured: boolean;

  /**
   * The validation rules for the field.
   *
   * @generated from field: io.clbs.openhes.models.common.FieldValidation validation = 19;
   */
  validation?: FieldValidation;

  /**
   * The default value of the . Multi-value fields are not supported.
   *
   * @generated from field: io.clbs.openhes.models.common.FieldValue default_value = 20;
   */
  defaultValue?: FieldValue;

  /**
   * Indicates whether the field can be used for sorting. Default is `true`.
   *
   * @generated from field: bool sortable = 21;
   */
  sortable: boolean;

  /**
   * Indicates whether the field can be used for filtering. Default is `true`.
   *
   * @generated from field: bool filterable = 22;
   */
  filterable: boolean;

  /**
   * The order in which the field is displayed relative to other fields.
   *
   * @generated from field: int32 display_order = 23;
   */
  displayOrder: number;
};

/**
 * Defines the field descriptor specification.
 *
 * @generated from message io.clbs.openhes.models.common.FieldDescriptor
 */
export type FieldDescriptorJson = {
  /**
   * Indicates whether the field descriptor is user-defined (for example, a custom field added by users).
   *
   * @generated from field: bool is_user_defined = 1;
   */
  isUserDefined?: boolean;

  /**
   * The resource type for which the field descriptor is defined (for example, `BULK`, `DEVICE`).
   *
   * @generated from field: io.clbs.openhes.models.common.ObjectType object_type = 2;
   */
  objectType?: ObjectTypeJson;

  /**
   * The unique identifier of the field descriptor within the system.
   *
   * @generated from field: string gid = 3;
   */
  gid?: string;

  /**
   * The unique field descriptor identifier.
   *
   * @generated from field: string field_id = 4;
   */
  fieldId?: string;

  /**
   * The path to the field in the TypeScript representation.
   *
   * @generated from field: string js_path = 5;
   */
  jsPath?: string;

  /**
   * The path to the field in the gRPC/JSON simplified representation.
   *
   * @generated from field: string path = 6;
   */
  path?: string;

  /**
   * The label displayed for the field.
   *
   * @generated from field: string label = 7;
   */
  label?: string;

  /**
   * The group (section) identifier for the field.
   *
   * @generated from field: string group_id = 8;
   */
  groupId?: string;

  /**
   * The data type of the field (for example, `text`, `double`).
   *
   * @generated from field: io.clbs.openhes.models.common.FieldDataType data_type = 9;
   */
  dataType?: FieldDataTypeJson;

  /**
   * The display format of the field (for example, `1h 30m`).
   *
   * @generated from field: io.clbs.openhes.models.common.FieldDisplayFormat format = 10;
   */
  format?: FieldDisplayFormatJson;

  /**
   * The display unit for the field (fr example, `kWh`, `USD`).
   *
   * @generated from field: string unit = 11;
   */
  unit?: string;

  /**
   * The decimal precision for double values.
   *
   * @generated from field: int32 precision = 12;
   */
  precision?: number;

  /**
   * A tooltip or hint text for tehe field.
   *
   * @generated from field: string tooltip = 13;
   */
  tooltip?: string;

  /**
   * Indicates whether the field is mandatory.
   *
   * @generated from field: bool required = 14;
   */
  required?: boolean;

  /**
   * Indicates whether the field is editable.
   *
   * @generated from field: bool editable = 15;
   */
  editable?: boolean;

  /**
   * Indicates whether the field is visible.
   *
   * @generated from field: bool visible = 16;
   */
  visible?: boolean;

  /**
   * Indicates whether the field can contain multiple values.
   *
   * @generated from field: bool multi_value = 17;
   */
  multiValue?: boolean;

  /**
   * Indicates whether the field should be handled as security fields (for example, password or certificate input area).
   *
   * @generated from field: bool secured = 18;
   */
  secured?: boolean;

  /**
   * The validation rules for the field.
   *
   * @generated from field: io.clbs.openhes.models.common.FieldValidation validation = 19;
   */
  validation?: FieldValidationJson;

  /**
   * The default value of the . Multi-value fields are not supported.
   *
   * @generated from field: io.clbs.openhes.models.common.FieldValue default_value = 20;
   */
  defaultValue?: FieldValueJson;

  /**
   * Indicates whether the field can be used for sorting. Default is `true`.
   *
   * @generated from field: bool sortable = 21;
   */
  sortable?: boolean;

  /**
   * Indicates whether the field can be used for filtering. Default is `true`.
   *
   * @generated from field: bool filterable = 22;
   */
  filterable?: boolean;

  /**
   * The order in which the field is displayed relative to other fields.
   *
   * @generated from field: int32 display_order = 23;
   */
  displayOrder?: number;
};

/**
 * Describes the message io.clbs.openhes.models.common.FieldDescriptor.
 * Use `create(FieldDescriptorSchema)` to create a new message.
 */
export const FieldDescriptorSchema: GenMessage<FieldDescriptor, {jsonType: FieldDescriptorJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 5);

/**
 * Defines validation rules applied to a field.
 *
 * @generated from message io.clbs.openhes.models.common.FieldValidation
 */
export type FieldValidation = Message<"io.clbs.openhes.models.common.FieldValidation"> & {
  /**
   * A regular expression describing the allowed input format. If not set, any value of the given type can be used. Used for `string`, `integer` or `double` fields.
   *
   * @generated from field: string re = 1;
   */
  re: string;

  /**
   * The minimum length of the field. Used for `string` fields.
   *
   * @generated from field: int32 min_length = 2;
   */
  minLength: number;

  /**
   * The maximum length of the field. Used for `string` fields.
   *
   * @generated from field: int32 max_length = 3;
   */
  maxLength: number;

  /**
   * The minimum value of the field. Used for `integer` fields..
   *
   * @generated from field: sint64 min_integer = 4;
   */
  minInteger: bigint;

  /**
   * The maximum value of the field. Used for `integer` fields.
   *
   * @generated from field: sint64 max_integer = 5;
   */
  maxInteger: bigint;

  /**
   * The minimum value of the field. Used for `number` fields.
   *
   * @generated from field: double min_number = 6;
   */
  minNumber: number;

  /**
   * The maximum value of the field. Used for `number` fields.
   *
   * @generated from field: double max_number = 7;
   */
  maxNumber: number;

  /**
   * A predefined list of allowed values to be set (as key-value pairs). The key represents the actual field value; the value represents the label to be displayed.
   *
   * @generated from field: map<string, string> options = 8;
   */
  options: { [key: string]: string };

  /**
   * The source from which the allowed options are dynamically fetched from the server, if set.
   *
   * @generated from field: string options_source = 9;
   */
  optionsSource: string;
};

/**
 * Defines validation rules applied to a field.
 *
 * @generated from message io.clbs.openhes.models.common.FieldValidation
 */
export type FieldValidationJson = {
  /**
   * A regular expression describing the allowed input format. If not set, any value of the given type can be used. Used for `string`, `integer` or `double` fields.
   *
   * @generated from field: string re = 1;
   */
  re?: string;

  /**
   * The minimum length of the field. Used for `string` fields.
   *
   * @generated from field: int32 min_length = 2;
   */
  minLength?: number;

  /**
   * The maximum length of the field. Used for `string` fields.
   *
   * @generated from field: int32 max_length = 3;
   */
  maxLength?: number;

  /**
   * The minimum value of the field. Used for `integer` fields..
   *
   * @generated from field: sint64 min_integer = 4;
   */
  minInteger?: string;

  /**
   * The maximum value of the field. Used for `integer` fields.
   *
   * @generated from field: sint64 max_integer = 5;
   */
  maxInteger?: string;

  /**
   * The minimum value of the field. Used for `number` fields.
   *
   * @generated from field: double min_number = 6;
   */
  minNumber?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * The maximum value of the field. Used for `number` fields.
   *
   * @generated from field: double max_number = 7;
   */
  maxNumber?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * A predefined list of allowed values to be set (as key-value pairs). The key represents the actual field value; the value represents the label to be displayed.
   *
   * @generated from field: map<string, string> options = 8;
   */
  options?: { [key: string]: string };

  /**
   * The source from which the allowed options are dynamically fetched from the server, if set.
   *
   * @generated from field: string options_source = 9;
   */
  optionsSource?: string;
};

/**
 * Describes the message io.clbs.openhes.models.common.FieldValidation.
 * Use `create(FieldValidationSchema)` to create a new message.
 */
export const FieldValidationSchema: GenMessage<FieldValidation, {jsonType: FieldValidationJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 6);

/**
 * Defines a field value.
 *
 * @generated from message io.clbs.openhes.models.common.FieldValue
 */
export type FieldValue = Message<"io.clbs.openhes.models.common.FieldValue"> & {
  /**
   * @generated from oneof io.clbs.openhes.models.common.FieldValue.kind
   */
  kind: {
    /**
     * A string-typed value.
     *
     * @generated from field: string string_value = 1;
     */
    value: string;
    case: "stringValue";
  } | {
    /**
     * A 64-bit integer-typed value.
     *
     * @generated from field: int64 integer_value = 2;
     */
    value: bigint;
    case: "integerValue";
  } | {
    /**
     * A 64-bit double-typed value.
     *
     * @generated from field: double double_value = 3;
     */
    value: number;
    case: "doubleValue";
  } | {
    /**
     * A binary-typed value.
     *
     * @generated from field: bytes binary_value = 4;
     */
    value: Uint8Array;
    case: "binaryValue";
  } | {
    /**
     * A boolean-typed value.
     *
     * @generated from field: bool bool_value = 5;
     */
    value: boolean;
    case: "boolValue";
  } | {
    /**
     * A date-typed value.
     *
     * @generated from field: google.protobuf.Timestamp date_value = 6;
     */
    value: Timestamp;
    case: "dateValue";
  } | {
    /**
     * A a duration-typed value.
     *
     * @generated from field: google.protobuf.Duration duration_value = 7;
     */
    value: Duration;
    case: "durationValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Defines a field value.
 *
 * @generated from message io.clbs.openhes.models.common.FieldValue
 */
export type FieldValueJson = {
  /**
   * A string-typed value.
   *
   * @generated from field: string string_value = 1;
   */
  stringValue?: string;

  /**
   * A 64-bit integer-typed value.
   *
   * @generated from field: int64 integer_value = 2;
   */
  integerValue?: string;

  /**
   * A 64-bit double-typed value.
   *
   * @generated from field: double double_value = 3;
   */
  doubleValue?: number | "NaN" | "Infinity" | "-Infinity";

  /**
   * A binary-typed value.
   *
   * @generated from field: bytes binary_value = 4;
   */
  binaryValue?: string;

  /**
   * A boolean-typed value.
   *
   * @generated from field: bool bool_value = 5;
   */
  boolValue?: boolean;

  /**
   * A date-typed value.
   *
   * @generated from field: google.protobuf.Timestamp date_value = 6;
   */
  dateValue?: TimestampJson;

  /**
   * A a duration-typed value.
   *
   * @generated from field: google.protobuf.Duration duration_value = 7;
   */
  durationValue?: DurationJson;
};

/**
 * Describes the message io.clbs.openhes.models.common.FieldValue.
 * Use `create(FieldValueSchema)` to create a new message.
 */
export const FieldValueSchema: GenMessage<FieldValue, {jsonType: FieldValueJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 7);

/**
 * Defines field values.
 *
 * @generated from message io.clbs.openhes.models.common.FieldValues
 */
export type FieldValues = Message<"io.clbs.openhes.models.common.FieldValues"> & {
  /**
   * A map of field values.
   *
   * @generated from field: map<string, io.clbs.openhes.models.common.FieldValue> attributes = 1;
   */
  attributes: { [key: string]: FieldValue };
};

/**
 * Defines field values.
 *
 * @generated from message io.clbs.openhes.models.common.FieldValues
 */
export type FieldValuesJson = {
  /**
   * A map of field values.
   *
   * @generated from field: map<string, io.clbs.openhes.models.common.FieldValue> attributes = 1;
   */
  attributes?: { [key: string]: FieldValueJson };
};

/**
 * Describes the message io.clbs.openhes.models.common.FieldValues.
 * Use `create(FieldValuesSchema)` to create a new message.
 */
export const FieldValuesSchema: GenMessage<FieldValues, {jsonType: FieldValuesJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 8);

/**
 * Defines a list of field values.
 *
 * @generated from message io.clbs.openhes.models.common.ListOfFieldValue
 */
export type ListOfFieldValue = Message<"io.clbs.openhes.models.common.ListOfFieldValue"> & {
  /**
   * The list of field values.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.FieldValue items = 1;
   */
  items: FieldValue[];

  /**
   * The total number of items in the list.
   *
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;
};

/**
 * Defines a list of field values.
 *
 * @generated from message io.clbs.openhes.models.common.ListOfFieldValue
 */
export type ListOfFieldValueJson = {
  /**
   * The list of field values.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.FieldValue items = 1;
   */
  items?: FieldValueJson[];

  /**
   * The total number of items in the list.
   *
   * @generated from field: int32 total_count = 2;
   */
  totalCount?: number;
};

/**
 * Describes the message io.clbs.openhes.models.common.ListOfFieldValue.
 * Use `create(ListOfFieldValueSchema)` to create a new message.
 */
export const ListOfFieldValueSchema: GenMessage<ListOfFieldValue, {jsonType: ListOfFieldValueJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 9);

/**
 * Defines a list of filed descriptors.
 *
 * @generated from message io.clbs.openhes.models.common.ListOfFieldDescriptor
 */
export type ListOfFieldDescriptor = Message<"io.clbs.openhes.models.common.ListOfFieldDescriptor"> & {
  /**
   * The list of field descriptors.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.FieldDescriptor items = 1;
   */
  items: FieldDescriptor[];

  /**
   * The total number of items in the list.
   *
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;
};

/**
 * Defines a list of filed descriptors.
 *
 * @generated from message io.clbs.openhes.models.common.ListOfFieldDescriptor
 */
export type ListOfFieldDescriptorJson = {
  /**
   * The list of field descriptors.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.FieldDescriptor items = 1;
   */
  items?: FieldDescriptorJson[];

  /**
   * The total number of items in the list.
   *
   * @generated from field: int32 total_count = 2;
   */
  totalCount?: number;
};

/**
 * Describes the message io.clbs.openhes.models.common.ListOfFieldDescriptor.
 * Use `create(ListOfFieldDescriptorSchema)` to create a new message.
 */
export const ListOfFieldDescriptorSchema: GenMessage<ListOfFieldDescriptor, {jsonType: ListOfFieldDescriptorJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 10);

/**
 * Defines a list of field available field descriptor options.
 *
 * @generated from message io.clbs.openhes.models.common.ListFieldDescriptorOptionsRequest
 */
export type ListFieldDescriptorOptionsRequest = Message<"io.clbs.openhes.models.common.ListFieldDescriptorOptionsRequest"> & {
  /**
   * The options source. Must match the options_source field of the corresponding `FieldDescriptor`.
   *
   * @generated from field: string options_source = 1;
   */
  optionsSource: string;

  /**
   * The filter applied to the option values. If set, only options containing this string will be returned.
   *
   * @generated from field: string filter_contains = 2;
   */
  filterContains: string;
};

/**
 * Defines a list of field available field descriptor options.
 *
 * @generated from message io.clbs.openhes.models.common.ListFieldDescriptorOptionsRequest
 */
export type ListFieldDescriptorOptionsRequestJson = {
  /**
   * The options source. Must match the options_source field of the corresponding `FieldDescriptor`.
   *
   * @generated from field: string options_source = 1;
   */
  optionsSource?: string;

  /**
   * The filter applied to the option values. If set, only options containing this string will be returned.
   *
   * @generated from field: string filter_contains = 2;
   */
  filterContains?: string;
};

/**
 * Describes the message io.clbs.openhes.models.common.ListFieldDescriptorOptionsRequest.
 * Use `create(ListFieldDescriptorOptionsRequestSchema)` to create a new message.
 */
export const ListFieldDescriptorOptionsRequestSchema: GenMessage<ListFieldDescriptorOptionsRequest, {jsonType: ListFieldDescriptorOptionsRequestJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 11);

/**
 * Defines field descriptor options.
 *
 * @generated from message io.clbs.openhes.models.common.FieldDescriptorOptions
 */
export type FieldDescriptorOptions = Message<"io.clbs.openhes.models.common.FieldDescriptorOptions"> & {
  /**
   * A map of field descriptor options.
   *
   * @generated from field: map<string, string> options = 1;
   */
  options: { [key: string]: string };

  /**
   * Indicates whether the list of options is complete. If set to `false`, the options were filtered out. Default is `true`.
   *
   * @generated from field: bool complete = 2 [default = true];
   */
  complete: boolean;
};

/**
 * Defines field descriptor options.
 *
 * @generated from message io.clbs.openhes.models.common.FieldDescriptorOptions
 */
export type FieldDescriptorOptionsJson = {
  /**
   * A map of field descriptor options.
   *
   * @generated from field: map<string, string> options = 1;
   */
  options?: { [key: string]: string };

  /**
   * Indicates whether the list of options is complete. If set to `false`, the options were filtered out. Default is `true`.
   *
   * @generated from field: bool complete = 2 [default = true];
   */
  complete?: boolean;
};

/**
 * Describes the message io.clbs.openhes.models.common.FieldDescriptorOptions.
 * Use `create(FieldDescriptorOptionsSchema)` to create a new message.
 */
export const FieldDescriptorOptionsSchema: GenMessage<FieldDescriptorOptions, {jsonType: FieldDescriptorOptionsJson}> = /*@__PURE__*/
  messageDesc(file_common_fields, 12);

/**
 * Defines the operators available for filtering options.
 *
 * @generated from enum io.clbs.openhes.models.common.FilterOperator
 */
export enum FilterOperator {
  /**
   * Unspecified filter operator.
   *
   * @generated from enum value: FILTER_OPERATOR_UNSPECIFIED = 0;
   */
  FILTER_OPERATOR_UNSPECIFIED = 0,

  /**
   * Single-operand operator. Matches fields equal to the provided value. Supported for: `text`, `integer`, `number`, `boolean`, `date` fields.
   *
   * @generated from enum value: EQUAL = 1;
   */
  EQUAL = 1,

  /**
   * Single-operand operator. Matches fields not equal to the provided value. Supported for: `text`, `integer`, `number`, `boolean`, `date` fields.
   *
   * @generated from enum value: NOT_EQUAL = 2;
   */
  NOT_EQUAL = 2,

  /**
   * Single-operand operator. Matches fields greater than the provided value. Supported for: `integer`, `number`, `date` fields.
   *
   * @generated from enum value: GREATER_THAN = 3;
   */
  GREATER_THAN = 3,

  /**
   * Single-operand operator. Matches fields greater than or equal to the provided value. Supported for: `integer`, `number`, `date` fields.
   *
   * @generated from enum value: GREATER_THAN_OR_EQUAL = 4;
   */
  GREATER_THAN_OR_EQUAL = 4,

  /**
   * Single-operand operator. Matches fields less than the provided value. Supported for: `integer`, `number`, `date` fields.
   *
   * @generated from enum value: LESS_THAN = 5;
   */
  LESS_THAN = 5,

  /**
   * Single-operand operator. Matches fields less than or equal to the provided value. Supported for: `integer`, `number`, `date` fields.
   *
   * @generated from enum value: LESS_THAN_OR_EQUAL = 6;
   */
  LESS_THAN_OR_EQUAL = 6,

  /**
   * Single-operand operator. Matches text fields that contain the provided string. Supported for: `text` fields.
   *
   * @generated from enum value: CONTAINS = 7;
   */
  CONTAINS = 7,

  /**
   * Single-operand operator. Matches text fields that do not contain the provided string. Supported for: `text` fields.
   *
   * @generated from enum value: NOT_CONTAINS = 8;
   */
  NOT_CONTAINS = 8,

  /**
   * Single-operand operator. Matches text fields that start with the provided string. Supported for: `text` fields.
   *
   * @generated from enum value: STARTS_WITH = 9;
   */
  STARTS_WITH = 9,

  /**
   * Single-operand operator. Matches text fields that end with the provided substring. Supported for: `text` fields.
   *
   * @generated from enum value: ENDS_WITH = 10;
   */
  ENDS_WITH = 10,

  /**
   * Multi-operand operator. Matches fields whose value is within the provided set. Supported for: `text`, `integer`, `number`, `boolean` fields.
   *
   * @generated from enum value: IN = 11;
   */
  IN = 11,

  /**
   * Multi-operand operator. Matches fields whose value is not within the provided set. Supported for: `text`, `integer`, `number`, `boolean` fields.
   *
   * @generated from enum value: NOT_IN = 12;
   */
  NOT_IN = 12,

  /**
   * Two-operand operator. Matches fields with values between the two provided operands (inclusive). Supported for: `integer`, `number`, `date` fields.
   *
   * @generated from enum value: BETWEEN = 13;
   */
  BETWEEN = 13,

  /**
   * No-operand operator. Matches fields that are either `null` or an empty string.
   *
   * @generated from enum value: IS_NULL = 14;
   */
  IS_NULL = 14,

  /**
   * No-operand operator. Matches fields that are not `null` or an empty string.
   *
   * @generated from enum value: IS_NOT_NULL = 15;
   */
  IS_NOT_NULL = 15,
}

/**
 * Defines the operators available for filtering options.
 *
 * @generated from enum io.clbs.openhes.models.common.FilterOperator
 */
export type FilterOperatorJson = "FILTER_OPERATOR_UNSPECIFIED" | "EQUAL" | "NOT_EQUAL" | "GREATER_THAN" | "GREATER_THAN_OR_EQUAL" | "LESS_THAN" | "LESS_THAN_OR_EQUAL" | "CONTAINS" | "NOT_CONTAINS" | "STARTS_WITH" | "ENDS_WITH" | "IN" | "NOT_IN" | "BETWEEN" | "IS_NULL" | "IS_NOT_NULL";

/**
 * Describes the enum io.clbs.openhes.models.common.FilterOperator.
 */
export const FilterOperatorSchema: GenEnum<FilterOperator, FilterOperatorJson> = /*@__PURE__*/
  enumDesc(file_common_fields, 0);

/**
 * Defines the data type of the field.
 *
 * @generated from enum io.clbs.openhes.models.common.FieldDataType
 */
export enum FieldDataType {
  /**
   * Unspecified data type.
   *
   * @generated from enum value: DATA_TYPE_UNSPECIFIED = 0;
   */
  DATA_TYPE_UNSPECIFIED = 0,

  /**
   * The text data type.
   *
   * @generated from enum value: TEXT = 1;
   */
  TEXT = 1,

  /**
   * The integer data type.
   *
   * @generated from enum value: INTEGER = 2;
   */
  INTEGER = 2,

  /**
   * The double data type.
   *
   * @generated from enum value: DOUBLE = 3;
   */
  DOUBLE = 3,

  /**
   * The binary data type.
   *
   * @generated from enum value: BINARY = 4;
   */
  BINARY = 4,

  /**
   * The boolean data type.
   *
   * @generated from enum value: BOOLEAN = 5;
   */
  BOOLEAN = 5,

  /**
   * The timestamp data type, represented by google.protobuf.Timestamp.
   *
   * @generated from enum value: TIMESTAMP = 6;
   */
  TIMESTAMP = 6,

  /**
   * The duration data type, represented by google.protobuf.Duration.
   *
   * @generated from enum value: DURATION = 7;
   */
  DURATION = 7,
}

/**
 * Defines the data type of the field.
 *
 * @generated from enum io.clbs.openhes.models.common.FieldDataType
 */
export type FieldDataTypeJson = "DATA_TYPE_UNSPECIFIED" | "TEXT" | "INTEGER" | "DOUBLE" | "BINARY" | "BOOLEAN" | "TIMESTAMP" | "DURATION";

/**
 * Describes the enum io.clbs.openhes.models.common.FieldDataType.
 */
export const FieldDataTypeSchema: GenEnum<FieldDataType, FieldDataTypeJson> = /*@__PURE__*/
  enumDesc(file_common_fields, 1);

/**
 * Define the display format, determining how alues are presetned in the GUI.
 *
 * @generated from enum io.clbs.openhes.models.common.FieldDisplayFormat
 */
export enum FieldDisplayFormat {
  /**
   * The default display format. Text, integer, double, date-time, or duration values are shown in their default format.
   *
   * @generated from enum value: DISPLAY_FORMAT_UNSPECIFIED = 0;
   */
  DISPLAY_FORMAT_UNSPECIFIED = 0,

  /**
   * Displays only the date portion of a local date-time value. Data type must be `TIMESTAMP` or `string`.
   *
   * @generated from enum value: DATE_ONLY = 1;
   */
  DATE_ONLY = 1,

  /**
   * Displays the full date-time in UTC timezone. Data type must be `TIMESTAMP` or `string`.
   *
   * @generated from enum value: UTC_DATETIME = 2;
   */
  UTC_DATETIME = 2,

  /**
   * Displays the date in UTC timezone. Data type must be `TIMESTAMP` or `string`.
   *
   * @generated from enum value: UTC_DATE_ONLY = 3;
   */
  UTC_DATE_ONLY = 3,

  /**
   * Displays time of day in `hh:mm:ss` format (for example, `12:30:00`). Data type must be `INTEGER` in milliseconds.
   *
   * @generated from enum value: TIMEOFDAY = 4;
   */
  TIMEOFDAY = 4,

  /**
   * Displays money amounts. The unit must be set to an ISO 4217 currency code (for example, USD, EUR). Data type must be `DOUBLE` or `INTEGER`.
   *
   * @generated from enum value: MONEY = 5;
   */
  MONEY = 5,

  /**
   * Displays values as hidden passwords. Data type must be `TEXT`. The GUI always shows six asterisks (******) regardless of actual length.
   *
   * @generated from enum value: PASSWORD = 6;
   */
  PASSWORD = 6,

  /**
   * Displays values as multi-line text. Data type must be `TEXT`.
   *
   * @generated from enum value: MULTILINE = 7;
   */
  MULTILINE = 7,

  /**
   * Displays values as a combo-box with selectable options. Data type must be `TEXT`.
   *
   * @generated from enum value: COMBO = 8;
   */
  COMBO = 8,
}

/**
 * Define the display format, determining how alues are presetned in the GUI.
 *
 * @generated from enum io.clbs.openhes.models.common.FieldDisplayFormat
 */
export type FieldDisplayFormatJson = "DISPLAY_FORMAT_UNSPECIFIED" | "DATE_ONLY" | "UTC_DATETIME" | "UTC_DATE_ONLY" | "TIMEOFDAY" | "MONEY" | "PASSWORD" | "MULTILINE" | "COMBO";

/**
 * Describes the enum io.clbs.openhes.models.common.FieldDisplayFormat.
 */
export const FieldDisplayFormatSchema: GenEnum<FieldDisplayFormat, FieldDisplayFormatJson> = /*@__PURE__*/
  enumDesc(file_common_fields, 2);

