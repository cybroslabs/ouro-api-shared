// @generated by protoc-gen-es v2.10.0 with parameter "target=ts,json_types=true"
// @generated from file common/internal.proto (package io.clbs.openhes.models.common, edition 2023)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { FieldDescriptor, FieldDescriptorJson, FieldValue, FieldValueJson } from "./fields_pb";
import { file_common_fields } from "./fields_pb";
import type { ObjectType, ObjectTypeJson } from "./objects_pb";
import { file_common_objects } from "./objects_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file common/internal.proto.
 */
export const file_common_internal: GenFile = /*@__PURE__*/
  fileDesc("ChVjb21tb24vaW50ZXJuYWwucHJvdG8SHWlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uIqkCChdTZXRNYW5hZ2VkRmllbGRzUmVxdWVzdBJhCg5tYW5hZ2VkX2ZpZWxkcxgBIAMoCzJJLmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uLlNldE1hbmFnZWRGaWVsZHNSZXF1ZXN0Lk1hbmFnZWRGaWVsZHNFbnRyeRI+CgtvYmplY3RfdHlwZRgCIAEoDjIpLmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uLk9iamVjdFR5cGUSCgoCaWQYAyABKAkaXwoSTWFuYWdlZEZpZWxkc0VudHJ5EgsKA2tleRgBIAEoCRI4CgV2YWx1ZRgCIAEoCzIpLmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uLkZpZWxkVmFsdWU6AjgBIoMBChdGaWVsZERlc2NyaXB0b3JJbnRlcm5hbBINCgVncm91cBgBIAEoCRIPCgdkYl9wYXRoGAIgASgJEkgKEGZpZWxkX2Rlc2NyaXB0b3IYAyABKAsyLi5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5GaWVsZERlc2NyaXB0b3IifwodVXBkYXRlRmllbGREZXNjcmlwdG9yc1JlcXVlc3QSRQoFaXRlbXMYASADKAsyNi5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5GaWVsZERlc2NyaXB0b3JJbnRlcm5hbBIXCg9jbGVhbnVwX21pc3NpbmcYAiABKAgiZgodTGlzdE9mRmllbGREZXNjcmlwdG9ySW50ZXJuYWwSRQoFaXRlbXMYASADKAsyNi5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5GaWVsZERlc2NyaXB0b3JJbnRlcm5hbCI1Cg9MaXN0T2ZEZXZpY2VLZXkSEwoLZHJpdmVyX3R5cGUYASABKAkSDQoFaXRlbXMYAiADKAkiiQEKD01hcERldmljZUtleVhJZBJICgVpdGVtcxgBIAMoCzI5LmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY29tbW9uLk1hcERldmljZUtleVhJZC5JdGVtc0VudHJ5GiwKCkl0ZW1zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgDOgI4AUI1WjNnaXRodWIuY29tL2N5YnJvc2xhYnMvb3Vyby1hcGktc2hhcmVkL2dlbi9nby9jb21tb25iCGVkaXRpb25zcOgH", [file_common_fields, file_common_objects]);

/**
 * Defines a specification for adding or updating metadata fields managed by both the users and system.
 *
 * @generated from message io.clbs.openhes.models.common.SetManagedFieldsRequest
 */
export type SetManagedFieldsRequest = Message<"io.clbs.openhes.models.common.SetManagedFieldsRequest"> & {
  /**
   * The fields to set for the resources.
   *
   * @generated from field: map<string, io.clbs.openhes.models.common.FieldValue> managed_fields = 1;
   */
  managedFields: { [key: string]: FieldValue };

  /**
   * The type of the managed fields update. Defines resource type the fields apply to.
   *
   * @generated from field: io.clbs.openhes.models.common.ObjectType object_type = 2;
   */
  objectType: ObjectType;

  /**
   * The UUID of the resource. Serves as the unique identifier of the resource. Immutable and typically auto-generated during `Create` operations.
   *
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * Defines a specification for adding or updating metadata fields managed by both the users and system.
 *
 * @generated from message io.clbs.openhes.models.common.SetManagedFieldsRequest
 */
export type SetManagedFieldsRequestJson = {
  /**
   * The fields to set for the resources.
   *
   * @generated from field: map<string, io.clbs.openhes.models.common.FieldValue> managed_fields = 1;
   */
  managedFields?: { [key: string]: FieldValueJson };

  /**
   * The type of the managed fields update. Defines resource type the fields apply to.
   *
   * @generated from field: io.clbs.openhes.models.common.ObjectType object_type = 2;
   */
  objectType?: ObjectTypeJson;

  /**
   * The UUID of the resource. Serves as the unique identifier of the resource. Immutable and typically auto-generated during `Create` operations.
   *
   * @generated from field: string id = 3;
   */
  id?: string;
};

/**
 * Describes the message io.clbs.openhes.models.common.SetManagedFieldsRequest.
 * Use `create(SetManagedFieldsRequestSchema)` to create a new message.
 */
export const SetManagedFieldsRequestSchema: GenMessage<SetManagedFieldsRequest, {jsonType: SetManagedFieldsRequestJson}> = /*@__PURE__*/
  messageDesc(file_common_internal, 0);

/**
 * Defines the internal specification of a field descriptor.
 *
 * @generated from message io.clbs.openhes.models.common.FieldDescriptorInternal
 */
export type FieldDescriptorInternal = Message<"io.clbs.openhes.models.common.FieldDescriptorInternal"> & {
  /**
   * The group identifier of the field descriptors (for example, object type or driver type). Obsolete field descriptors are detected and removed based on this field.
   *
   * @generated from field: string group = 1;
   */
  group: string;

  /**
   * The field database path of the field, used for JSONB columns.
   *
   * @generated from field: string db_path = 2;
   */
  dbPath: string;

  /**
   * The field descriptor of the field, used for JSONB columns.
   *
   * @generated from field: io.clbs.openhes.models.common.FieldDescriptor field_descriptor = 3;
   */
  fieldDescriptor?: FieldDescriptor;
};

/**
 * Defines the internal specification of a field descriptor.
 *
 * @generated from message io.clbs.openhes.models.common.FieldDescriptorInternal
 */
export type FieldDescriptorInternalJson = {
  /**
   * The group identifier of the field descriptors (for example, object type or driver type). Obsolete field descriptors are detected and removed based on this field.
   *
   * @generated from field: string group = 1;
   */
  group?: string;

  /**
   * The field database path of the field, used for JSONB columns.
   *
   * @generated from field: string db_path = 2;
   */
  dbPath?: string;

  /**
   * The field descriptor of the field, used for JSONB columns.
   *
   * @generated from field: io.clbs.openhes.models.common.FieldDescriptor field_descriptor = 3;
   */
  fieldDescriptor?: FieldDescriptorJson;
};

/**
 * Describes the message io.clbs.openhes.models.common.FieldDescriptorInternal.
 * Use `create(FieldDescriptorInternalSchema)` to create a new message.
 */
export const FieldDescriptorInternalSchema: GenMessage<FieldDescriptorInternal, {jsonType: FieldDescriptorInternalJson}> = /*@__PURE__*/
  messageDesc(file_common_internal, 1);

/**
 * Defines the specification for updating field descriptors.
 *
 * @generated from message io.clbs.openhes.models.common.UpdateFieldDescriptorsRequest
 */
export type UpdateFieldDescriptorsRequest = Message<"io.clbs.openhes.models.common.UpdateFieldDescriptorsRequest"> & {
  /**
   * The list of field descriptors.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.FieldDescriptorInternal items = 1;
   */
  items: FieldDescriptorInternal[];

  /**
   * Indicates, whether field descriptors that are not included in the request for the given types should be removed. If set to `true`, such e descriptors are removed.
   *
   * @generated from field: bool cleanup_missing = 2;
   */
  cleanupMissing: boolean;
};

/**
 * Defines the specification for updating field descriptors.
 *
 * @generated from message io.clbs.openhes.models.common.UpdateFieldDescriptorsRequest
 */
export type UpdateFieldDescriptorsRequestJson = {
  /**
   * The list of field descriptors.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.FieldDescriptorInternal items = 1;
   */
  items?: FieldDescriptorInternalJson[];

  /**
   * Indicates, whether field descriptors that are not included in the request for the given types should be removed. If set to `true`, such e descriptors are removed.
   *
   * @generated from field: bool cleanup_missing = 2;
   */
  cleanupMissing?: boolean;
};

/**
 * Describes the message io.clbs.openhes.models.common.UpdateFieldDescriptorsRequest.
 * Use `create(UpdateFieldDescriptorsRequestSchema)` to create a new message.
 */
export const UpdateFieldDescriptorsRequestSchema: GenMessage<UpdateFieldDescriptorsRequest, {jsonType: UpdateFieldDescriptorsRequestJson}> = /*@__PURE__*/
  messageDesc(file_common_internal, 2);

/**
 * Defines a list of internatl field descriptors.
 *
 * @generated from message io.clbs.openhes.models.common.ListOfFieldDescriptorInternal
 */
export type ListOfFieldDescriptorInternal = Message<"io.clbs.openhes.models.common.ListOfFieldDescriptorInternal"> & {
  /**
   * The list of field descriptors.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.FieldDescriptorInternal items = 1;
   */
  items: FieldDescriptorInternal[];
};

/**
 * Defines a list of internatl field descriptors.
 *
 * @generated from message io.clbs.openhes.models.common.ListOfFieldDescriptorInternal
 */
export type ListOfFieldDescriptorInternalJson = {
  /**
   * The list of field descriptors.
   *
   * @generated from field: repeated io.clbs.openhes.models.common.FieldDescriptorInternal items = 1;
   */
  items?: FieldDescriptorInternalJson[];
};

/**
 * Describes the message io.clbs.openhes.models.common.ListOfFieldDescriptorInternal.
 * Use `create(ListOfFieldDescriptorInternalSchema)` to create a new message.
 */
export const ListOfFieldDescriptorInternalSchema: GenMessage<ListOfFieldDescriptorInternal, {jsonType: ListOfFieldDescriptorInternalJson}> = /*@__PURE__*/
  messageDesc(file_common_internal, 3);

/**
 * Defines a list of devices keys.
 *
 * @generated from message io.clbs.openhes.models.common.ListOfDeviceKey
 */
export type ListOfDeviceKey = Message<"io.clbs.openhes.models.common.ListOfDeviceKey"> & {
  /**
   * The driver type for which the device keys are defined. Used to identify keys for this specific driver.
   *
   * @generated from field: string driver_type = 1;
   */
  driverType: string;

  /**
   * The list of device keys. Each key is a unique physical identifier of the device (system-title, MAC address) that must be unique within the specified driver type.
   *
   * @generated from field: repeated string items = 2;
   */
  items: string[];
};

/**
 * Defines a list of devices keys.
 *
 * @generated from message io.clbs.openhes.models.common.ListOfDeviceKey
 */
export type ListOfDeviceKeyJson = {
  /**
   * The driver type for which the device keys are defined. Used to identify keys for this specific driver.
   *
   * @generated from field: string driver_type = 1;
   */
  driverType?: string;

  /**
   * The list of device keys. Each key is a unique physical identifier of the device (system-title, MAC address) that must be unique within the specified driver type.
   *
   * @generated from field: repeated string items = 2;
   */
  items?: string[];
};

/**
 * Describes the message io.clbs.openhes.models.common.ListOfDeviceKey.
 * Use `create(ListOfDeviceKeySchema)` to create a new message.
 */
export const ListOfDeviceKeySchema: GenMessage<ListOfDeviceKey, {jsonType: ListOfDeviceKeyJson}> = /*@__PURE__*/
  messageDesc(file_common_internal, 4);

/**
 * Defines mapping of device keys to the system-wide device identifiers.
 *
 * @generated from message io.clbs.openhes.models.common.MapDeviceKeyXId
 */
export type MapDeviceKeyXId = Message<"io.clbs.openhes.models.common.MapDeviceKeyXId"> & {
  /**
   * A map where the keys are device keys (from `ListOfDeviceKyes`) and the values are device IDs (`x-device-identifier`).
   * The `x-device-identifiers` are unique within the system and can be used to identify devices in topologies, neighbours tables, unknown devices, and so on.
   *
   * @generated from field: map<string, int64> items = 1;
   */
  items: { [key: string]: bigint };
};

/**
 * Defines mapping of device keys to the system-wide device identifiers.
 *
 * @generated from message io.clbs.openhes.models.common.MapDeviceKeyXId
 */
export type MapDeviceKeyXIdJson = {
  /**
   * A map where the keys are device keys (from `ListOfDeviceKyes`) and the values are device IDs (`x-device-identifier`).
   * The `x-device-identifiers` are unique within the system and can be used to identify devices in topologies, neighbours tables, unknown devices, and so on.
   *
   * @generated from field: map<string, int64> items = 1;
   */
  items?: { [key: string]: string };
};

/**
 * Describes the message io.clbs.openhes.models.common.MapDeviceKeyXId.
 * Use `create(MapDeviceKeyXIdSchema)` to create a new message.
 */
export const MapDeviceKeyXIdSchema: GenMessage<MapDeviceKeyXId, {jsonType: MapDeviceKeyXIdJson}> = /*@__PURE__*/
  messageDesc(file_common_internal, 5);

