// @generated by protoc-gen-es v2.7.0 with parameter "target=ts,json_types=true"
// @generated from file cronjobs/cronjobs.proto (package io.clbs.openhes.models.cronjobs, edition 2023)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { MetadataFields, MetadataFieldsJson } from "../common/metadata_pb";
import { file_common_metadata } from "../common/metadata_pb";
import type { StructJson, Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file cronjobs/cronjobs.proto.
 */
export const file_cronjobs_cronjobs: GenFile = /*@__PURE__*/
  fileDesc("Chdjcm9uam9icy9jcm9uam9icy5wcm90bxIfaW8uY2xicy5vcGVuaGVzLm1vZGVscy5jcm9uam9icyKTAQoUQ3JlYXRlQ3JvbkpvYlJlcXVlc3QSOgoEc3BlYxgBIAEoCzIsLmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY3JvbmpvYnMuQ3JvbkpvYlNwZWMSPwoIbWV0YWRhdGEYAiABKAsyLS5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5NZXRhZGF0YUZpZWxkcyLGAQoHQ3JvbkpvYhI6CgRzcGVjGAEgASgLMiwuaW8uY2xicy5vcGVuaGVzLm1vZGVscy5jcm9uam9icy5Dcm9uSm9iU3BlYxI+CgZzdGF0dXMYAiABKAsyLi5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNyb25qb2JzLkNyb25Kb2JTdGF0dXMSPwoIbWV0YWRhdGEYAyABKAsyLS5pby5jbGJzLm9wZW5oZXMubW9kZWxzLmNvbW1vbi5NZXRhZGF0YUZpZWxkcyKpAQoLQ3JvbkpvYlNwZWMSPgoEdHlwZRgBIAEoDjIwLmlvLmNsYnMub3Blbmhlcy5tb2RlbHMuY3JvbmpvYnMuQ3JvbkpvYlR5cGVFbnVtEhAKCHNjaGVkdWxlGAIgASgJEhAKCHRpbWV6b25lGAMgASgJEg8KB3N1c3BlbmQYBCABKAgSJQoEZGF0YRgFIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QigAEKDUNyb25Kb2JTdGF0dXMSLwoLbGFzdF9ydW5fYXQYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KC25leHRfcnVuX2F0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBINCgVlcnJvchgDIAEoCSJdCg1MaXN0T2ZDcm9uSm9iEjcKBWl0ZW1zGAEgAygLMiguaW8uY2xicy5vcGVuaGVzLm1vZGVscy5jcm9uam9icy5Dcm9uSm9iEhMKC3RvdGFsX2NvdW50GAIgASgFKnIKD0Nyb25Kb2JUeXBlRW51bRIdChlDUk9OX0pPQl9UWVBFX1VOU1BFQ0lGSUVEEAASHAoYQ1JPTl9KT0JfVFlQRV9TVEFSVF9CVUxLEAESIgoeQ1JPTl9KT0JfVFlQRV9TVEFSVF9QUk9YWV9CVUxLEAJCN1o1Z2l0aHViLmNvbS9jeWJyb3NsYWJzL291cm8tYXBpLXNoYXJlZC9nZW4vZ28vY3JvbmpvYnNiCGVkaXRpb25zcOgH", [file_common_metadata, file_google_protobuf_timestamp, file_google_protobuf_struct]);

/**
 * Defines the specification for creating a new cron job.
 *
 * @generated from message io.clbs.openhes.models.cronjobs.CreateCronJobRequest
 */
export type CreateCronJobRequest = Message<"io.clbs.openhes.models.cronjobs.CreateCronJobRequest"> & {
  /**
   * The cron job specification.
   *
   * @generated from field: io.clbs.openhes.models.cronjobs.CronJobSpec spec = 1;
   */
  spec?: CronJobSpec;

  /**
   * The metadata fields.
   *
   * @generated from field: io.clbs.openhes.models.common.MetadataFields metadata = 2;
   */
  metadata?: MetadataFields;
};

/**
 * Defines the specification for creating a new cron job.
 *
 * @generated from message io.clbs.openhes.models.cronjobs.CreateCronJobRequest
 */
export type CreateCronJobRequestJson = {
  /**
   * The cron job specification.
   *
   * @generated from field: io.clbs.openhes.models.cronjobs.CronJobSpec spec = 1;
   */
  spec?: CronJobSpecJson;

  /**
   * The metadata fields.
   *
   * @generated from field: io.clbs.openhes.models.common.MetadataFields metadata = 2;
   */
  metadata?: MetadataFieldsJson;
};

/**
 * Describes the message io.clbs.openhes.models.cronjobs.CreateCronJobRequest.
 * Use `create(CreateCronJobRequestSchema)` to create a new message.
 */
export const CreateCronJobRequestSchema: GenMessage<CreateCronJobRequest, {jsonType: CreateCronJobRequestJson}> = /*@__PURE__*/
  messageDesc(file_cronjobs_cronjobs, 0);

/**
 * Defines the cron job specification.
 *
 * @generated from message io.clbs.openhes.models.cronjobs.CronJob
 */
export type CronJob = Message<"io.clbs.openhes.models.cronjobs.CronJob"> & {
  /**
   * The specification of the cron job.
   *
   * @generated from field: io.clbs.openhes.models.cronjobs.CronJobSpec spec = 1;
   */
  spec?: CronJobSpec;

  /**
   * The current status of the cron job.
   *
   * @generated from field: io.clbs.openhes.models.cronjobs.CronJobStatus status = 2;
   */
  status?: CronJobStatus;

  /**
   * The metadata fields.
   *
   * @generated from field: io.clbs.openhes.models.common.MetadataFields metadata = 3;
   */
  metadata?: MetadataFields;
};

/**
 * Defines the cron job specification.
 *
 * @generated from message io.clbs.openhes.models.cronjobs.CronJob
 */
export type CronJobJson = {
  /**
   * The specification of the cron job.
   *
   * @generated from field: io.clbs.openhes.models.cronjobs.CronJobSpec spec = 1;
   */
  spec?: CronJobSpecJson;

  /**
   * The current status of the cron job.
   *
   * @generated from field: io.clbs.openhes.models.cronjobs.CronJobStatus status = 2;
   */
  status?: CronJobStatusJson;

  /**
   * The metadata fields.
   *
   * @generated from field: io.clbs.openhes.models.common.MetadataFields metadata = 3;
   */
  metadata?: MetadataFieldsJson;
};

/**
 * Describes the message io.clbs.openhes.models.cronjobs.CronJob.
 * Use `create(CronJobSchema)` to create a new message.
 */
export const CronJobSchema: GenMessage<CronJob, {jsonType: CronJobJson}> = /*@__PURE__*/
  messageDesc(file_cronjobs_cronjobs, 1);

/**
 * Defines the cron job specification.
 *
 * @generated from message io.clbs.openhes.models.cronjobs.CronJobSpec
 */
export type CronJobSpec = Message<"io.clbs.openhes.models.cronjobs.CronJobSpec"> & {
  /**
   * The type of the cron job. For example, `CRON_JOB_TYPE_START_BULK`, `CRON_JOB_TYPE_START_PROXY_BULK`.
   *
   * @generated from field: io.clbs.openhes.models.cronjobs.CronJobTypeEnum type = 1;
   */
  type: CronJobTypeEnum;

  /**
   * The cron job definition. For example, `"0 * * * *"` for every hour.
   *
   * @generated from field: string schedule = 2;
   */
  schedule: string;

  /**
   * The timezone associated with the cron job. For example, `"America/New_York"`, `"Europe/Prague"`, `"CET"`, `"GMT"`, `"Etc/GMT+2"`. e.g. "America/New_York", "Europe/Prague", "CET", "GMT", "Etc/GMT+2".
   *
   * @generated from field: string timezone = 3;
   */
  timezone: string;

  /**
   * Indicates whether the cron job is suspended. Default is `false` (not suspended).
   *
   * @generated from field: bool suspend = 4;
   */
  suspend: boolean;

  /**
   * The payload to be sent when the cron job runs.
   *
   * @generated from field: google.protobuf.Struct data = 5;
   */
  data?: JsonObject;
};

/**
 * Defines the cron job specification.
 *
 * @generated from message io.clbs.openhes.models.cronjobs.CronJobSpec
 */
export type CronJobSpecJson = {
  /**
   * The type of the cron job. For example, `CRON_JOB_TYPE_START_BULK`, `CRON_JOB_TYPE_START_PROXY_BULK`.
   *
   * @generated from field: io.clbs.openhes.models.cronjobs.CronJobTypeEnum type = 1;
   */
  type?: CronJobTypeEnumJson;

  /**
   * The cron job definition. For example, `"0 * * * *"` for every hour.
   *
   * @generated from field: string schedule = 2;
   */
  schedule?: string;

  /**
   * The timezone associated with the cron job. For example, `"America/New_York"`, `"Europe/Prague"`, `"CET"`, `"GMT"`, `"Etc/GMT+2"`. e.g. "America/New_York", "Europe/Prague", "CET", "GMT", "Etc/GMT+2".
   *
   * @generated from field: string timezone = 3;
   */
  timezone?: string;

  /**
   * Indicates whether the cron job is suspended. Default is `false` (not suspended).
   *
   * @generated from field: bool suspend = 4;
   */
  suspend?: boolean;

  /**
   * The payload to be sent when the cron job runs.
   *
   * @generated from field: google.protobuf.Struct data = 5;
   */
  data?: StructJson;
};

/**
 * Describes the message io.clbs.openhes.models.cronjobs.CronJobSpec.
 * Use `create(CronJobSpecSchema)` to create a new message.
 */
export const CronJobSpecSchema: GenMessage<CronJobSpec, {jsonType: CronJobSpecJson}> = /*@__PURE__*/
  messageDesc(file_cronjobs_cronjobs, 2);

/**
 * Defines the current status of a cron job.
 *
 * @generated from message io.clbs.openhes.models.cronjobs.CronJobStatus
 */
export type CronJobStatus = Message<"io.clbs.openhes.models.cronjobs.CronJobStatus"> & {
  /**
   * The timestamp of the last run of the cron job.
   *
   * @generated from field: google.protobuf.Timestamp last_run_at = 1;
   */
  lastRunAt?: Timestamp;

  /**
   * The timestamp of the next run of the cron job.
   *
   * @generated from field: google.protobuf.Timestamp next_run_at = 2;
   */
  nextRunAt?: Timestamp;

  /**
   * The error message if the cron job schedule is invalid.
   *
   * @generated from field: string error = 3;
   */
  error: string;
};

/**
 * Defines the current status of a cron job.
 *
 * @generated from message io.clbs.openhes.models.cronjobs.CronJobStatus
 */
export type CronJobStatusJson = {
  /**
   * The timestamp of the last run of the cron job.
   *
   * @generated from field: google.protobuf.Timestamp last_run_at = 1;
   */
  lastRunAt?: TimestampJson;

  /**
   * The timestamp of the next run of the cron job.
   *
   * @generated from field: google.protobuf.Timestamp next_run_at = 2;
   */
  nextRunAt?: TimestampJson;

  /**
   * The error message if the cron job schedule is invalid.
   *
   * @generated from field: string error = 3;
   */
  error?: string;
};

/**
 * Describes the message io.clbs.openhes.models.cronjobs.CronJobStatus.
 * Use `create(CronJobStatusSchema)` to create a new message.
 */
export const CronJobStatusSchema: GenMessage<CronJobStatus, {jsonType: CronJobStatusJson}> = /*@__PURE__*/
  messageDesc(file_cronjobs_cronjobs, 3);

/**
 * Defines a list cron jobs.
 *
 * @generated from message io.clbs.openhes.models.cronjobs.ListOfCronJob
 */
export type ListOfCronJob = Message<"io.clbs.openhes.models.cronjobs.ListOfCronJob"> & {
  /**
   * The list of cron jobs.
   *
   * @generated from field: repeated io.clbs.openhes.models.cronjobs.CronJob items = 1;
   */
  items: CronJob[];

  /**
   * The total number of items in the list.
   *
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;
};

/**
 * Defines a list cron jobs.
 *
 * @generated from message io.clbs.openhes.models.cronjobs.ListOfCronJob
 */
export type ListOfCronJobJson = {
  /**
   * The list of cron jobs.
   *
   * @generated from field: repeated io.clbs.openhes.models.cronjobs.CronJob items = 1;
   */
  items?: CronJobJson[];

  /**
   * The total number of items in the list.
   *
   * @generated from field: int32 total_count = 2;
   */
  totalCount?: number;
};

/**
 * Describes the message io.clbs.openhes.models.cronjobs.ListOfCronJob.
 * Use `create(ListOfCronJobSchema)` to create a new message.
 */
export const ListOfCronJobSchema: GenMessage<ListOfCronJob, {jsonType: ListOfCronJobJson}> = /*@__PURE__*/
  messageDesc(file_cronjobs_cronjobs, 4);

/**
 * Defines the cron job types that can be scheduled.
 *
 * @generated from enum io.clbs.openhes.models.cronjobs.CronJobTypeEnum
 */
export enum CronJobTypeEnum {
  /**
   * Unspecified cron job type.
   *
   * @generated from enum value: CRON_JOB_TYPE_UNSPECIFIED = 0;
   */
  CRON_JOB_TYPE_UNSPECIFIED = 0,

  /**
   * The cron job that starts an acquistion bulk.
   *
   * @generated from enum value: CRON_JOB_TYPE_START_BULK = 1;
   */
  CRON_JOB_TYPE_START_BULK = 1,

  /**
   * The cron job that starts a proxy bulk.
   *
   * @generated from enum value: CRON_JOB_TYPE_START_PROXY_BULK = 2;
   */
  CRON_JOB_TYPE_START_PROXY_BULK = 2,
}

/**
 * Defines the cron job types that can be scheduled.
 *
 * @generated from enum io.clbs.openhes.models.cronjobs.CronJobTypeEnum
 */
export type CronJobTypeEnumJson = "CRON_JOB_TYPE_UNSPECIFIED" | "CRON_JOB_TYPE_START_BULK" | "CRON_JOB_TYPE_START_PROXY_BULK";

/**
 * Describes the enum io.clbs.openhes.models.cronjobs.CronJobTypeEnum.
 */
export const CronJobTypeEnumSchema: GenEnum<CronJobTypeEnum, CronJobTypeEnumJson> = /*@__PURE__*/
  enumDesc(file_cronjobs_cronjobs, 0);

