[
  {
    "filename": "service-bulks-apiservice.md",
    "title": "ApiService - Bulks",
    "tags0": [
      "GetBulk",
      "ListBulks",
      "GetBulkJob",
      "CancelBulk",
      "CreateBulk",
      "UpdateBulk",
      "ListBulkJobs",
      "GetProxyBulk",
      "UpdateBulkJob",
      "CancelBulkJobs",
      "GetDeviceBulks",
      "CreateProxyBulk",
      "io.clbs.openhes.models.common.ListOfId",
      "io.clbs.openhes.models.acquisition.Bulk",
      "io.clbs.openhes.models.common.ListSelector",
      "io.clbs.openhes.models.acquisition.BulkJob",
      "io.clbs.openhes.models.common.UpdateMetadata",
      "io.clbs.openhes.models.acquisition.ProxyBulk",
      "io.clbs.openhes.models.acquisition.ListOfBulk",
      "io.clbs.openhes.models.acquisition.DeviceBulks",
      "io.clbs.openhes.models.acquisition.ListOfBulkJob",
      "io.clbs.openhes.models.acquisition.CreateBulkRequest",
      "io.clbs.openhes.models.acquisition.ListBulkJobsRequest",
      "io.clbs.openhes.models.acquisition.GetDeviceBulksRequest",
      "io.clbs.openhes.models.acquisition.CreateProxyBulkRequest"
    ],
    "tags1": [
      "Bulk",
      "BulkJob",
      "CreateBulkRequest",
      "CreateProxyBulkRequest",
      "DeviceBulks",
      "GetDeviceBulksRequest",
      "ListBulkJobsRequest",
      "ListOfBulk",
      "ListOfBulkJob",
      "ListOfId",
      "ListSelector",
      "ProxyBulk",
      "UpdateMetadata"
    ],
    "tags2": ""
  },
  {
    "filename": "service-configuration-apiservice.md",
    "title": "ApiService - Configuration",
    "tags0": [
      "GetApplicationConfig",
      "UpdateApplicationConfig",
      "SynchronizeComponentConfig",
      "io.clbs.openhes.models.system.ComponentConfig",
      "io.clbs.openhes.models.system.ApplicationConfig",
      "io.clbs.openhes.models.system.ComponentConfigDescriptor",
      "io.clbs.openhes.models.system.ApplicationConfigDescriptor"
    ],
    "tags1": [
      "ApplicationConfig",
      "ApplicationConfigDescriptor",
      "ComponentConfig",
      "ComponentConfigDescriptor"
    ],
    "tags2": ""
  },
  {
    "filename": "service-cron-jobs-apiservice.md",
    "title": "ApiService - Cron Jobs",
    "tags0": [
      "GetCronJob",
      "RunCronJob",
      "ListCronJobs",
      "PauseCronJob",
      "CreateCronJob",
      "UpdateCronJob",
      "DeleteCronJob",
      "ResumeCronJob",
      "io.clbs.openhes.models.cronjobs.CronJob",
      "io.clbs.openhes.models.common.ListSelector",
      "io.clbs.openhes.models.cronjobs.ListOfCronJob",
      "io.clbs.openhes.models.cronjobs.CreateCronJobRequest"
    ],
    "tags1": [
      "CreateCronJobRequest",
      "CronJob",
      "ListOfCronJob",
      "ListSelector"
    ],
    "tags2": ""
  },
  {
    "filename": "service-cryptography-apiservice.md",
    "title": "ApiService - Cryptography",
    "tags0": [
      "GetCryptoSecret",
      "SetCryptoSecret",
      "io.clbs.openhes.models.crypto.CryptoSecrets",
      "io.clbs.openhes.models.crypto.GetCryptoSecretRequest",
      "io.clbs.openhes.models.crypto.SetCryptoSecretRequest"
    ],
    "tags1": [
      "CryptoSecrets",
      "GetCryptoSecretRequest",
      "SetCryptoSecretRequest"
    ],
    "tags2": ""
  },
  {
    "filename": "service-device-configuration-registers-apiservice.md",
    "title": "ApiService - Device Configuration Registers",
    "tags0": [
      "GetDeviceConfigurationRegister",
      "ListDeviceConfigurationRegisters",
      "CreateDeviceConfigurationRegister",
      "UpdateDeviceConfigurationRegister",
      "DeleteDeviceConfigurationRegister",
      "io.clbs.openhes.models.common.ListSelector",
      "io.clbs.openhes.models.acquisition.DeviceConfigurationRegister",
      "io.clbs.openhes.models.acquisition.ListOfDeviceConfigurationRegister",
      "io.clbs.openhes.models.acquisition.CreateDeviceConfigurationRegisterRequest"
    ],
    "tags1": [
      "CreateDeviceConfigurationRegisterRequest",
      "DeviceConfigurationRegister",
      "ListOfDeviceConfigurationRegister",
      "ListSelector"
    ],
    "tags2": ""
  },
  {
    "filename": "service-device-configuration-templates-apiservice.md",
    "title": "ApiService - Device Configuration Templates",
    "tags0": [
      "GetDeviceConfigurationTemplate",
      "ListDeviceConfigurationTemplates",
      "CreateDeviceConfigurationTemplate",
      "UpdateDeviceConfigurationTemplate",
      "DeleteDeviceConfigurationTemplate",
      "io.clbs.openhes.models.common.ListSelector",
      "AddDeviceConfigurationRegisterToDeviceConfigurationTemplate",
      "io.clbs.openhes.models.acquisition.DeviceConfigurationTemplate",
      "RemoveDeviceConfigurationRegisterFromDeviceConfigurationTemplate",
      "io.clbs.openhes.models.acquisition.ListOfDeviceConfigurationTemplate",
      "io.clbs.openhes.models.acquisition.CreateDeviceConfigurationTemplateRequest",
      "io.clbs.openhes.models.acquisition.AddDeviceConfigurationRegisterToDeviceConfigurationTemplateRequest",
      "io.clbs.openhes.models.acquisition.RemoveDeviceConfigurationRegisterFromDeviceConfigurationTemplateRequest"
    ],
    "tags1": [
      "AddDeviceConfigurationRegisterToDeviceConfigurationTemplateRequest",
      "CreateDeviceConfigurationTemplateRequest",
      "DeviceConfigurationTemplate",
      "ListOfDeviceConfigurationTemplate",
      "ListSelector",
      "RemoveDeviceConfigurationRegisterFromDeviceConfigurationTemplateRequest"
    ],
    "tags2": ""
  },
  {
    "filename": "service-device-data-apiservice.md",
    "title": "ApiService - Device Data",
    "tags0": [
      "GetDeviceData",
      "ListDeviceDataInfo",
      "GetDeviceDataProfiles",
      "GetDeviceDataRegisters",
      "GetDeviceDataIrregularProfiles",
      "io.clbs.openhes.models.common.ListSelector",
      "io.clbs.openhes.models.acquisition.DeviceData",
      "io.clbs.openhes.models.acquisition.ProfileValues",
      "io.clbs.openhes.models.acquisition.RegisterValues",
      "io.clbs.openhes.models.acquisition.GetDeviceDataRequest",
      "io.clbs.openhes.models.acquisition.ListOfDeviceDataInfo",
      "io.clbs.openhes.models.acquisition.IrregularProfileValues"
    ],
    "tags1": [
      "DeviceData",
      "GetDeviceDataRequest",
      "IrregularProfileValues",
      "ListOfDeviceDataInfo",
      "ListSelector",
      "ProfileValues",
      "RegisterValues"
    ],
    "tags2": ""
  },
  {
    "filename": "service-device-events-apiservice.md",
    "title": "ApiService - Device Events",
    "tags0": [
      "GetDeviceEvents",
      "io.clbs.openhes.models.acquisition.DeviceEvents",
      "io.clbs.openhes.models.acquisition.GetDeviceEventsRequest"
    ],
    "tags1": [
      "DeviceEvents",
      "GetDeviceEventsRequest"
    ],
    "tags2": ""
  },
  {
    "filename": "service-devices-apiservice.md",
    "title": "ApiService - Devices",
    "tags0": [
      "GetDevice",
      "ListDevices",
      "CreateModem",
      "UpdateModem",
      "DeleteModem",
      "CreateDevice",
      "UpdateDevice",
      "DeleteDevice",
      "GetModemPool",
      "GetDeviceInfo",
      "GetDeviceGroup",
      "ListModemPools",
      "CreateModemPool",
      "UpdateModemPool",
      "DeleteModemPool",
      "ListDeviceGroups",
      "CreateDeviceGroup",
      "DeleteDeviceGroup",
      "AddDevicesToGroup",
      "GetDeviceNetworkMap",
      "GetCommunicationUnit",
      "GetDeviceDeviceGroups",
      "ListCommunicationUnits",
      "CreateCommunicationBus",
      "ListCommunicationBuses",
      "DeleteCommunicationBus",
      "RemoveDevicesFromGroup",
      "ListDeviceGroupDevices",
      "CreateCommunicationUnit",
      "UpdateCommunicationUnit",
      "DeleteCommunicationUnit",
      "SetDeviceCommunicationUnits",
      "GetDeviceCommunicationUnits",
      "GetCommunicationUnitNetworkMap",
      "ListCommunicationUnitLogRecords",
      "ListDeviceCommunicationUnitChanges",
      "AddCommunicationUnitsToCommunicationBus",
      "io.clbs.openhes.models.acquisition.Device",
      "io.clbs.openhes.models.common.ListSelector",
      "RemoveCommunicationUnitsFromCommunicationBus",
      "io.clbs.openhes.models.acquisition.ModemPool",
      "io.clbs.openhes.models.acquisition.NetworkMap",
      "io.clbs.openhes.models.acquisition.DeviceInfo",
      "io.clbs.openhes.models.acquisition.DeviceGroup",
      "io.clbs.openhes.models.acquisition.ListOfDevice",
      "io.clbs.openhes.models.acquisition.ListOfModemPool",
      "io.clbs.openhes.models.acquisition.SetModemRequest",
      "io.clbs.openhes.models.acquisition.CommunicationUnit",
      "io.clbs.openhes.models.acquisition.ListOfDeviceGroup",
      "io.clbs.openhes.models.acquisition.CreateDeviceRequest",
      "io.clbs.openhes.models.acquisition.SetModemPoolRequest",
      "io.clbs.openhes.models.acquisition.ListOfCommunicationBus",
      "io.clbs.openhes.models.acquisition.ListOfCommunicationUnit",
      "io.clbs.openhes.models.acquisition.CreateDeviceGroupRequest",
      "io.clbs.openhes.models.acquisition.AddDevicesToGroupRequest",
      "io.clbs.openhes.models.acquisition.CreateCommunicationBusRequest",
      "io.clbs.openhes.models.acquisition.ListOfDeviceCommunicationUnit",
      "io.clbs.openhes.models.acquisition.RemoveDevicesFromGroupRequest",
      "io.clbs.openhes.models.acquisition.ListDeviceGroupDevicesRequest",
      "io.clbs.openhes.models.acquisition.CreateCommunicationUnitRequest",
      "io.clbs.openhes.models.acquisition.ListOfCommunicationUnitLogRecord",
      "io.clbs.openhes.models.acquisition.SetDeviceCommunicationUnitsRequest",
      "io.clbs.openhes.models.acquisition.ListOfDeviceCommunicationUnitChange",
      "io.clbs.openhes.models.acquisition.AddCommunicationUnitsToCommunicationBusRequest",
      "io.clbs.openhes.models.acquisition.RemoveCommunicationUnitsFromCommunicationBusRequest"
    ],
    "tags1": [
      "AddCommunicationUnitsToCommunicationBusRequest",
      "AddDevicesToGroupRequest",
      "CommunicationUnit",
      "CreateCommunicationBusRequest",
      "CreateCommunicationUnitRequest",
      "CreateDeviceGroupRequest",
      "CreateDeviceRequest",
      "Device",
      "DeviceGroup",
      "DeviceInfo",
      "ListDeviceGroupDevicesRequest",
      "ListOfCommunicationBus",
      "ListOfCommunicationUnit",
      "ListOfCommunicationUnitLogRecord",
      "ListOfDevice",
      "ListOfDeviceCommunicationUnit",
      "ListOfDeviceCommunicationUnitChange",
      "ListOfDeviceGroup",
      "ListOfModemPool",
      "ListSelector",
      "ModemPool",
      "NetworkMap",
      "RemoveCommunicationUnitsFromCommunicationBusRequest",
      "RemoveDevicesFromGroupRequest",
      "SetDeviceCommunicationUnitsRequest",
      "SetModemPoolRequest",
      "SetModemRequest"
    ],
    "tags2": ""
  },
  {
    "filename": "service-driver-info-apiservice.md",
    "title": "ApiService - Driver Info",
    "tags0": [
      "GetDriver",
      "ListDrivers",
      "io.clbs.openhes.models.acquisition.Driver",
      "io.clbs.openhes.models.common.ListSelector",
      "io.clbs.openhes.models.acquisition.ListOfDriver"
    ],
    "tags1": [
      "Driver",
      "ListOfDriver",
      "ListSelector"
    ],
    "tags2": ""
  },
  {
    "filename": "service-fields-apiservice.md",
    "title": "ApiService - Fields",
    "tags0": [
      "ListFieldDescriptors",
      "CreateFieldDescriptor",
      "UpdateFieldDescriptor",
      "DeleteFieldDescriptor",
      "ListFieldDescriptorOptions",
      "io.clbs.openhes.models.common.FieldDescriptor",
      "io.clbs.openhes.models.common.ListOfFieldDescriptor",
      "io.clbs.openhes.models.common.FieldDescriptorOptions",
      "io.clbs.openhes.models.common.FieldDescriptorSelector",
      "io.clbs.openhes.models.common.CreateFieldDescriptorRequest",
      "io.clbs.openhes.models.common.ListFieldDescriptorOptionsRequest"
    ],
    "tags1": [
      "CreateFieldDescriptorRequest",
      "FieldDescriptor",
      "FieldDescriptorOptions",
      "FieldDescriptorSelector",
      "ListFieldDescriptorOptionsRequest",
      "ListOfFieldDescriptor"
    ],
    "tags2": ""
  },
  {
    "filename": "service-messaging-apiservice.md",
    "title": "ApiService - Messaging",
    "tags0": [
      "CreateMessagingConsumer",
      "ListMessagingComponents",
      "CreateMessagingPublisher",
      "UpdateMessagingComponent",
      "io.clbs.openhes.models.common.ListSelector",
      "io.clbs.openhes.models.messaging.MessagingComponent",
      "io.clbs.openhes.models.messaging.MessagingConsumerClient",
      "io.clbs.openhes.models.messaging.MessagingConsumerServer",
      "io.clbs.openhes.models.messaging.MessagingPublisherClient",
      "io.clbs.openhes.models.messaging.ListOfMessagingComponent"
    ],
    "tags1": [
      "ListOfMessagingComponent",
      "ListSelector",
      "MessagingComponent",
      "MessagingConsumerClient",
      "MessagingConsumerServer",
      "MessagingPublisherClient"
    ],
    "tags2": ""
  },
  {
    "filename": "service-metadata-apiservice.md",
    "title": "ApiService - Metadata",
    "tags0": [
      "UpdateObjectFields",
      "io.clbs.openhes.models.common.UpdateObjectFieldsRequest"
    ],
    "tags1": [
      "UpdateObjectFieldsRequest"
    ],
    "tags2": ""
  },
  {
    "filename": "service-system-apiservice.md",
    "title": "ApiService - System",
    "tags0": [
      "GetTranslations",
      "GetOpenIdConfiguration",
      "io.clbs.openhes.models.system.OpenIdConfiguration",
      "io.clbs.openhes.models.localization.GetTranslationsRequest",
      "io.clbs.openhes.models.localization.GetTranslationsResponse"
    ],
    "tags1": [
      "GetTranslationsRequest",
      "GetTranslationsResponse",
      "OpenIdConfiguration"
    ],
    "tags2": ""
  },
  {
    "filename": "service-time-of-use-tables-apiservice.md",
    "title": "ApiService - Time-Of-Use Tables",
    "tags0": [
      "GetTimeOfUseTable",
      "ListTimeOfUseTables",
      "CreateTimeOfUseTable",
      "UpdateTimeOfUseTable",
      "DeleteTimeOfUseTable",
      "io.clbs.openhes.models.common.ListSelector",
      "io.clbs.openhes.models.acquisition.TimeOfUseTable",
      "io.clbs.openhes.models.acquisition.ListOfTimeOfUseTable",
      "io.clbs.openhes.models.acquisition.CreateTimeOfUseTableRequest"
    ],
    "tags1": [
      "CreateTimeOfUseTableRequest",
      "ListOfTimeOfUseTable",
      "ListSelector",
      "TimeOfUseTable"
    ],
    "tags2": ""
  },
  {
    "filename": "service-variables-apiservice.md",
    "title": "ApiService - Variables",
    "tags0": [
      "GetVariable",
      "ListVariables",
      "CreateVariable",
      "UpdateVariable",
      "DeleteVariable",
      "AddRegisterToVariable",
      "RemoveRegisterFromVariable",
      "io.clbs.openhes.models.common.ListSelector",
      "io.clbs.openhes.models.acquisition.Variable",
      "io.clbs.openhes.models.acquisition.ListOfVariable",
      "io.clbs.openhes.models.acquisition.CreateVariableRequest",
      "io.clbs.openhes.models.acquisition.AddRegisterToVariableRequest",
      "io.clbs.openhes.models.acquisition.RemoveRegisterFromVariableRequest"
    ],
    "tags1": [
      "AddRegisterToVariableRequest",
      "CreateVariableRequest",
      "ListOfVariable",
      "ListSelector",
      "RemoveRegisterFromVariableRequest",
      "Variable"
    ],
    "tags2": ""
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-listofmessagingcomponent.md",
    "title": "Model: io.clbs.openhes.models.messaging.ListOfMessagingComponent",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.messaging.ListOfMessagingComponent"
    ],
    "tags1": [
      "ListOfMessagingComponent"
    ],
    "tags2": "The list messaging components known the system The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-messagingcomponent.md",
    "title": "Model: io.clbs.openhes.models.messaging.MessagingComponent",
    "tags0": [
      "spec",
      "status",
      "metadata",
      "io.clbs.openhes.models.messaging.MessagingComponent"
    ],
    "tags1": [
      "MessagingComponent"
    ],
    "tags2": "Specification the messaging component Specification the messaging component The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-messagingcomponentconsumersettings.md",
    "title": "Model: io.clbs.openhes.models.messaging.MessagingComponentConsumerSettings",
    "tags0": [
      "subjects",
      "consumerId",
      "maxInFlightMessages",
      "io.clbs.openhes.models.messaging.MessagingComponentConsumerSettings"
    ],
    "tags1": [
      "MessagingComponentConsumerSettings"
    ],
    "tags2": "Unique UUID identifier for the consumer must unique across all consumers the same component Maximum number flight unacknowledged messages allowed for the consumer Value means that multiple consumers may receive messages concurrently without preserving order Value means that only single message may flight any time preserving order even when multiple consumers are running List non empty subjects the consumer interested least one must set changed then all instances the same component will affected"
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-messagingcomponentspec.md",
    "title": "Model: io.clbs.openhes.models.messaging.MessagingComponentSpec",
    "tags0": [
      "enabled",
      "consumers",
      "io.clbs.openhes.models.messaging.MessagingComponentSpec"
    ],
    "tags1": [
      "MessagingComponentSpec"
    ],
    "tags2": "Whether the component enabled disabled disabled the component will not receive any messages Settings for the messaging component"
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-messagingcomponentstatus.md",
    "title": "Model: io.clbs.openhes.models.messaging.MessagingComponentStatus",
    "tags0": [
      "io.clbs.openhes.models.messaging.MessagingComponentStatus"
    ],
    "tags1": [
      "MessagingComponentStatus"
    ],
    "tags2": "FIXME Add status fields needed"
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-messagingconsumerclient.md",
    "title": "Model: io.clbs.openhes.models.messaging.MessagingConsumerClient",
    "tags0": [
      "ack",
      "nak",
      "setup",
      "io.clbs.openhes.models.messaging.MessagingConsumerClient"
    ],
    "tags1": [
      "MessagingConsumerClient"
    ],
    "tags2": "Setup action initialize the consumer must the first message sent defining the consumer Any other subsequent setup message will rejected Acknowledgement action confirm the message with the given message Negative acknowledgement action reject and requeue the message with the given message"
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-messagingconsumerserver.md",
    "title": "Model: io.clbs.openhes.models.messaging.MessagingConsumerServer",
    "tags0": [
      "receive",
      "io.clbs.openhes.models.messaging.MessagingConsumerServer"
    ],
    "tags1": [
      "MessagingConsumerServer"
    ],
    "tags2": "Receive action deliver message the consumer"
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-messagingconsumersetup.md",
    "title": "Model: io.clbs.openhes.models.messaging.MessagingConsumerSetup",
    "tags0": [
      "settings",
      "metadata",
      "io.clbs.openhes.models.messaging.MessagingConsumerSetup"
    ],
    "tags1": [
      "MessagingConsumerSetup"
    ],
    "tags2": "Settings for the messaging component The metadata fields The and name represents the component and name and must the same for all publishers and consumers the same component"
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-messagingpublishmessage.md",
    "title": "Model: io.clbs.openhes.models.messaging.MessagingPublishMessage",
    "tags0": [
      "data",
      "subject",
      "io.clbs.openhes.models.messaging.MessagingPublishMessage"
    ],
    "tags1": [
      "MessagingPublishMessage"
    ],
    "tags2": "Subject the message published The message data published"
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-messagingpublisherclient.md",
    "title": "Model: io.clbs.openhes.models.messaging.MessagingPublisherClient",
    "tags0": [
      "setup",
      "publish",
      "io.clbs.openhes.models.messaging.MessagingPublisherClient"
    ],
    "tags1": [
      "MessagingPublisherClient"
    ],
    "tags2": "Setup action initialize the publisher must the first message sent defining the publisher Any other subsequent setup message will rejected Publish action send message published"
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-messagingpublishersetup.md",
    "title": "Model: io.clbs.openhes.models.messaging.MessagingPublisherSetup",
    "tags0": [
      "metadata",
      "io.clbs.openhes.models.messaging.MessagingPublisherSetup"
    ],
    "tags1": [
      "MessagingPublisherSetup"
    ],
    "tags2": "The metadata fields The and name represents the component and name and must the same for all publishers and consumers the same component"
  },
  {
    "filename": "model-io-clbs-openhes-models-messaging-messagingreceivemessage.md",
    "title": "Model: io.clbs.openhes.models.messaging.MessagingReceiveMessage",
    "tags0": [
      "data",
      "subject",
      "messageId",
      "io.clbs.openhes.models.messaging.MessagingReceiveMessage"
    ],
    "tags1": [
      "MessagingReceiveMessage"
    ],
    "tags2": "Unique identifier the message Subject the message The message data"
  },
  {
    "filename": "model-io-clbs-openhes-models-localization-gettranslationsrequest.md",
    "title": "Model: io.clbs.openhes.models.localization.GetTranslationsRequest",
    "tags0": [
      "keys",
      "ietfLanguageTag",
      "io.clbs.openhes.models.localization.GetTranslationsRequest"
    ],
    "tags1": [
      "GetTranslationsRequest"
    ],
    "tags2": "Defines the request message for retrieving translations based language and keys The IETF language tag for which translations are requested List keys for which translations are requested empty all translations for the specified language will returned"
  },
  {
    "filename": "model-io-clbs-openhes-models-localization-gettranslationsresponse.md",
    "title": "Model: io.clbs.openhes.models.localization.GetTranslationsResponse",
    "tags0": [
      "translations",
      "io.clbs.openhes.models.localization.GetTranslationsResponse"
    ],
    "tags1": [
      "GetTranslationsResponse"
    ],
    "tags2": "Defines the response message containing the translations map keys their corresponding translated strings"
  },
  {
    "filename": "enum-io-clbs-openhes-models-cronjobs-cronjobtypeenum.md",
    "title": "Enum: io.clbs.openhes.models.cronjobs.CronJobTypeEnum",
    "tags0": [
      "CRON_JOB_TYPE_START_BULK",
      "CRON_JOB_TYPE_UNSPECIFIED",
      "CRON_JOB_TYPE_START_PROXY_BULK",
      "Enum: io.clbs.openhes.models.cronjobs.CronJobTypeEnum"
    ],
    "tags1": [
      "BULK",
      "CRON",
      "CronJobTypeEnum",
      "JOB",
      "PROXY",
      "START",
      "TYPE",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the cron job types that can scheduled Unspecified cron job type The cron job that starts acquistion bulk The cron job that starts proxy bulk"
  },
  {
    "filename": "model-io-clbs-openhes-models-cronjobs-createcronjobrequest.md",
    "title": "Model: io.clbs.openhes.models.cronjobs.CreateCronJobRequest",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.cronjobs.CreateCronJobRequest"
    ],
    "tags1": [
      "CreateCronJobRequest"
    ],
    "tags2": "Defines the specification for creating new cron job The cron job specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-cronjobs-cronjob.md",
    "title": "Model: io.clbs.openhes.models.cronjobs.CronJob",
    "tags0": [
      "spec",
      "status",
      "metadata",
      "io.clbs.openhes.models.cronjobs.CronJob"
    ],
    "tags1": [
      "CronJob"
    ],
    "tags2": "Defines the cron job specification The specification the cron job The current status the cron job The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-cronjobs-cronjobspec.md",
    "title": "Model: io.clbs.openhes.models.cronjobs.CronJobSpec",
    "tags0": [
      "type",
      "data",
      "suspend",
      "schedule",
      "timezone",
      "io.clbs.openhes.models.cronjobs.CronJobSpec"
    ],
    "tags1": [
      "CronJobSpec"
    ],
    "tags2": "Defines the cron job specification The type the cron job For example CRON JOB TYPE START BULK CRON JOB TYPE START PROXY BULK The cron job definition For example for every hour The timezone associated with the cron job For example America New York Europe Prague CET GMT Etc GMT America New York Europe Prague CET GMT Etc GMT Indicates whether the cron job suspended Default false not suspended The payload sent when the cron job runs"
  },
  {
    "filename": "model-io-clbs-openhes-models-cronjobs-cronjobstatus.md",
    "title": "Model: io.clbs.openhes.models.cronjobs.CronJobStatus",
    "tags0": [
      "error",
      "lastRunAt",
      "nextRunAt",
      "io.clbs.openhes.models.cronjobs.CronJobStatus"
    ],
    "tags1": [
      "CronJobStatus"
    ],
    "tags2": "Defines the current status cron job The timestamp the last run the cron job The timestamp the next run the cron job The error message the cron job schedule invalid"
  },
  {
    "filename": "model-io-clbs-openhes-models-cronjobs-listofcronjob.md",
    "title": "Model: io.clbs.openhes.models.cronjobs.ListOfCronJob",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.cronjobs.ListOfCronJob"
    ],
    "tags1": [
      "ListOfCronJob"
    ],
    "tags2": "Defines list cron jobs The list cron jobs The total number items the list"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-actionresultcode.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.ActionResultCode",
    "tags0": [
      "ERROR_CODE_ACTION_OK",
      "ERROR_CODE_ACTION_ERROR",
      "ERROR_CODE_ACTION_PENDING",
      "ERROR_CODE_ACTION_UNSPECIFIED",
      "ERROR_CODE_ACTION_UNSUPPORTED",
      "Enum: io.clbs.openhes.models.acquisition.ActionResultCode"
    ],
    "tags1": [
      "ACTION",
      "ActionResultCode",
      "CODE",
      "ERROR",
      "OK",
      "PENDING",
      "UNSPECIFIED",
      "UNSUPPORTED"
    ],
    "tags2": "Defines the result codes related job actions Unspecified action result code The action has been completed successfully The action not supported the driver device The action pending The action has failed"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-actiontype.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.ActionType",
    "tags0": [
      "ACTION_TYPE_GET_TOU",
      "ACTION_TYPE_SET_TOU",
      "ACTION_TYPE_FW_UPDATE",
      "ACTION_TYPE_GET_EVENTS",
      "ACTION_TYPE_SYNC_CLOCK",
      "ACTION_TYPE_UNSPECIFIED",
      "ACTION_TYPE_SET_LIMITER",
      "ACTION_TYPE_GET_REGISTER",
      "ACTION_TYPE_GET_DEVICE_INFO",
      "ACTION_TYPE_SET_RELAY_STATE",
      "ACTION_TYPE_RESET_BILLING_PERIOD",
      "ACTION_TYPE_GET_IRREGULAR_PROFILE",
      "ACTION_TYPE_GET_PERIODICAL_PROFILE",
      "ACTION_TYPE_GET_DISCONNECTOR_STATE",
      "ACTION_TYPE_SET_DISCONNECTOR_STATE",
      "Enum: io.clbs.openhes.models.acquisition.ActionType"
    ],
    "tags1": [
      "ACTION",
      "ActionType",
      "BILLING",
      "CLOCK",
      "DEVICE",
      "DISCONNECTOR",
      "EVENTS",
      "FW",
      "GET",
      "INFO",
      "IRREGULAR",
      "LIMITER",
      "PERIOD",
      "PERIODICAL",
      "PROFILE",
      "REGISTER",
      "RELAY",
      "RESET",
      "SET",
      "STATE",
      "SYNC",
      "TOU",
      "TYPE",
      "UNSPECIFIED",
      "UPDATE"
    ],
    "tags2": "Defines the supported action types Each action type corresponds specific operation that can performed device Unspecified action type Get register value for example instantaneous value The action covers specific register Get periodical profile for example load profile The action covers specific profile column Get non periodical profile for example daily profile monthly billing registers The action covers specific profile column and billing register Get event log The action covers specific event log Get device information The action returns detailed information data about the remote device Synchronize the device clock The action sets the time and can forcefully update force attribute set Set relay state The action covers single relay Get the disconnector state Set the disconnector state Get time use table Set time use table Set limiter settings The action covers single limiter Reset the billing period Start firmware update"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-applicationprotocol.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.ApplicationProtocol",
    "tags0": [
      "APPPROTO_SCTM",
      "APPPROTO_MQTT",
      "APPPROTO_MBUS",
      "APPPROTO_LIS200",
      "APPPROTO_MODBUS",
      "APPPROTO_DLMS_SN",
      "APPPROTO_DLMS_LN",
      "APPPROTO_ANSI_C12",
      "APPPROTO_UNSPECIFIED",
      "APPPROTO_IEC_62056_21",
      "Enum: io.clbs.openhes.models.acquisition.ApplicationProtocol"
    ],
    "tags1": [
      "ANSI",
      "APPPROTO",
      "ApplicationProtocol",
      "C12",
      "DLMS",
      "IEC",
      "LIS200",
      "LN",
      "MBUS",
      "MODBUS",
      "MQTT",
      "SCTM",
      "SN",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the supported application protocols Unspecified application protocol The IEC IEC VDEW protocol The DLMS short name protocol The DLMS logical name protocol The SCTM protocol The LIS200 protocol The ANSI C12 protocol The MQTT protocol The MODBUS protocol The MBUS protocol"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-bulkstatuscode.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.BulkStatusCode",
    "tags0": [
      "BULK_STATUS_QUEUED",
      "BULK_STATUS_RUNNING",
      "BULK_STATUS_EXPIRED",
      "BULK_STATUS_COMPLETED",
      "BULK_STATUS_CANCELLED",
      "BULK_STATUS_UNSPECIFIED",
      "Enum: io.clbs.openhes.models.acquisition.BulkStatusCode"
    ],
    "tags1": [
      "BULK",
      "BulkStatusCode",
      "CANCELLED",
      "COMPLETED",
      "EXPIRED",
      "QUEUED",
      "RUNNING",
      "STATUS",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the status information entire bulk Unspecified bulk status The bulk waiting the queue The bulk currently running The bulk has been completed The bulk has been cancelled The bulk has expired"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-communicationtype.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.CommunicationType",
    "tags0": [
      "COMMUNICATION_TYPE_TCPIP",
      "COMMUNICATION_TYPE_LISTENING",
      "COMMUNICATION_TYPE_MODEM_POOL",
      "COMMUNICATION_TYPE_UNSPECIFIED",
      "COMMUNICATION_TYPE_SERIAL_LINE_MOXA",
      "COMMUNICATION_TYPE_SERIAL_LINE_DIRECT",
      "Enum: io.clbs.openhes.models.acquisition.CommunicationType"
    ],
    "tags1": [
      "COMMUNICATION",
      "CommunicationType",
      "DIRECT",
      "LINE",
      "LISTENING",
      "MODEM",
      "MOXA",
      "POOL",
      "SERIAL",
      "TCPIP",
      "TYPE",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the supported communication types for device connections Unspecified communication type The communication established via direct TCP The communication established via phone line modem The communication established via direct serial line The communication established via controlled serial line Moxa The communication passive The driver listens port for example DLMS devices push mode subscribes message queue for example MQTT"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-datalinkprotocol.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.DataLinkProtocol",
    "tags0": [
      "LINKPROTO_HDLC",
      "LINKPROTO_MBUS",
      "LINKPROTO_MODBUS",
      "LINKPROTO_VIKTOR",
      "LINTPROTO_UNSPECIFIED",
      "LINKPROTO_IEC_62056_21",
      "LINKPROTO_COSEM_WRAPPER",
      "LINKPROTO_NOT_APPLICABLE",
      "Enum: io.clbs.openhes.models.acquisition.DataLinkProtocol"
    ],
    "tags1": [
      "APPLICABLE",
      "COSEM",
      "DataLinkProtocol",
      "HDLC",
      "IEC",
      "LINKPROTO",
      "LINTPROTO",
      "MBUS",
      "MODBUS",
      "NOT",
      "UNSPECIFIED",
      "VIKTOR",
      "WRAPPER"
    ],
    "tags2": "Defines the supported data link protocols Unspecified data link protocol The VDEW IEC IEC protocol When combined with the DLMS protocol the driver initiates communication via IEC and then switches the mode HDLC DLMS Supports multiple devices the same line The HDLC ISO IEC framing Used with various application protocols such DLMS MODBUS Supports client server addressing for multiple devices the same line The COSEM wrapper Used with the DLMS application protocol Supports client server addressing for multiple devices the same line The Modbus protocol Used with the Modbus application protocol where other data link used The Bus protocol Used with the Bus application protocol The Viktor protocol proprietary protocol used Viktor based devices such DC450 Viktor data link protocol applicable Used with listening communication types"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-deviceconfigurationregisterkind.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterKind",
    "tags0": [
      "KIND_REGISTER",
      "KIND_SYNTHETIC",
      "KIND_UNSPECIFIED",
      "KIND_IRREGULAR_PROFILE",
      "KIND_PERIODICAL_PROFILE",
      "Enum: io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterKind"
    ],
    "tags1": [
      "DeviceConfigurationRegisterKind",
      "IRREGULAR",
      "KIND",
      "PERIODICAL",
      "PROFILE",
      "REGISTER",
      "SYNTHETIC",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the possible register types Unspecified register kind The object represents generic register The object represents periodical profile The object represents irregular profile The object represents synthetic register not visible drivers can defined store derived external data"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-joberrorcode.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.JobErrorCode",
    "tags0": [
      "JOB_ERROR_CODE_NONE",
      "JOB_ERROR_CODE_BUSY",
      "JOB_ERROR_CODE_ERROR",
      "JOB_ERROR_CODE_FATAL",
      "JOB_ERROR_CODE_UNSPECIFIED",
      "JOB_ERROR_CODE_ALREADY_EXISTS",
      "Enum: io.clbs.openhes.models.acquisition.JobErrorCode"
    ],
    "tags1": [
      "ALREADY",
      "BUSY",
      "CODE",
      "ERROR",
      "EXISTS",
      "FATAL",
      "JOB",
      "JobErrorCode",
      "NONE",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the error codes related jobs Unspecified job error code The job has been completed successfully There free slot the driver handle the job the job shall send again later The job has failed retry will attempted This should never happen indicates that the same job currently being processed the driver and was sent multiple times the driver which would point bug The job failed not retry will attempted"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-jobpriority.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.JobPriority",
    "tags0": [
      "JOB_PRIORITY_0",
      "JOB_PRIORITY_1",
      "JOB_PRIORITY_2",
      "JOB_PRIORITY_3",
      "JOB_PRIORITY_4",
      "JOB_PRIORITY_5",
      "JOB_PRIORITY_6",
      "JOB_PRIORITY_7",
      "JOB_PRIORITY_8",
      "JOB_PRIORITY_UNSPECIFIED",
      "Enum: io.clbs.openhes.models.acquisition.JobPriority"
    ],
    "tags1": [
      "JOB",
      "JobPriority",
      "PRIORITY",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the available job priority levels Unspecified priority Lowest priority Priority Priority Priority Priority Priority Priority Priority Highest priority"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-jobstatuscode.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.JobStatusCode",
    "tags0": [
      "JOB_STATUS_QUEUED",
      "JOB_STATUS_FAILED",
      "JOB_STATUS_RUNNING",
      "JOB_STATUS_EXPIRED",
      "JOB_STATUS_COMPLETED",
      "JOB_STATUS_CANCELLED",
      "JOB_STATUS_UNSPECIFIED",
      "JOB_STATUS_PROCESSING_DATA",
      "Enum: io.clbs.openhes.models.acquisition.JobStatusCode"
    ],
    "tags1": [
      "CANCELLED",
      "COMPLETED",
      "DATA",
      "EXPIRED",
      "FAILED",
      "JOB",
      "JobStatusCode",
      "PROCESSING",
      "QUEUED",
      "RUNNING",
      "STATUS",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the possible statuses jobs Unspecified job status The job waiting the queue for execution The job currently running The job has finished acquiring data and now processing The job has been completed The job has failed The job has been cancelled The job has expired"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-logrecordlevel.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.LogRecordLevel",
    "tags0": [
      "LOG_RECORD_LEVEL_INFO",
      "LOG_RECORD_LEVEL_DEBUG",
      "LOG_RECORD_LEVEL_ERROR",
      "LOG_RECORD_LEVEL_FATAL",
      "LOG_RECORD_LEVEL_WARNING",
      "Enum: io.clbs.openhes.models.acquisition.LogRecordLevel"
    ],
    "tags1": [
      "DEBUG",
      "ERROR",
      "FATAL",
      "INFO",
      "LEVEL",
      "LOG",
      "LogRecordLevel",
      "RECORD",
      "WARNING"
    ],
    "tags2": "Defines the severity levels for communication unit log records Debug log record Information log record Warning log record Error log record Fatal log record"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-readpathpolicy.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.ReadPathPolicy",
    "tags0": [
      "READ_PATH_POLICY_DC_FIRST",
      "READ_PATH_POLICY_UNSPECIFIED",
      "READ_PATH_POLICY_METER_FIRST",
      "Enum: io.clbs.openhes.models.acquisition.ReadPathPolicy"
    ],
    "tags1": [
      "DC",
      "FIRST",
      "METER",
      "PATH",
      "POLICY",
      "READ",
      "ReadPathPolicy",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the read path policies for retrieving data from devices Keeps the current behavior typically data concentrator first Attempts read directly from the meter and falls back the data concentrator needed and supported Attempts read from the data concentrator first and falls back the meter needed and supported"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-topologynodetype.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.TopologyNodeType",
    "tags0": [
      "TOPOLOGY_NODE_DEVICE",
      "TOPOLOGY_NODE_UNSPECIFIED",
      "TOPOLOGY_NODE_COMMUNICATION_UNIT",
      "Enum: io.clbs.openhes.models.acquisition.TopologyNodeType"
    ],
    "tags1": [
      "COMMUNICATION",
      "DEVICE",
      "NODE",
      "TOPOLOGY",
      "TopologyNodeType",
      "UNIT",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the types nodes the network topology Unspecified node type The node device such electricity meter The node communication unit such modem data concentrator"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-accessleveltemplate.md",
    "title": "Model: io.clbs.openhes.models.acquisition.AccessLevelTemplate",
    "tags0": [
      "id",
      "name",
      "io.clbs.openhes.models.acquisition.AccessLevelTemplate"
    ],
    "tags1": [
      "AccessLevelTemplate"
    ],
    "tags2": "Defines the access level configuration for driver The unique identifier the access level such The name the access level must unique and written English for example Management Public"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actiondata.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionData",
    "tags0": [
      "nodata",
      "events",
      "profile",
      "touTable",
      "registers",
      "deviceInfo",
      "irregularProfile",
      "io.clbs.openhes.models.acquisition.ActionData"
    ],
    "tags1": [
      "ActionData"
    ],
    "tags2": "Defines the action based variant data values Indicates that data was returned the action The set register values The set profile values The set irregular non periodical profile values such daily profiles The device information The event records The time use TOU table"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actionfwupdate.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionFwUpdate",
    "tags0": [
      "io.clbs.openhes.models.acquisition.ActionFwUpdate"
    ],
    "tags1": [
      "ActionFwUpdate"
    ],
    "tags2": "Defines the firmware update action specification"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actiongetdeviceinfo.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionGetDeviceInfo",
    "tags0": [
      "io.clbs.openhes.models.acquisition.ActionGetDeviceInfo"
    ],
    "tags1": [
      "ActionGetDeviceInfo"
    ],
    "tags2": "Defines the get device info action specification"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actiongetevents.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionGetEvents",
    "tags0": [
      "rangeEnd",
      "rangeStart",
      "io.clbs.openhes.models.acquisition.ActionGetEvents"
    ],
    "tags1": [
      "ActionGetEvents"
    ],
    "tags2": "Defines the get events action specification The start timestamp the event readout The end timestamp the event readout"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actiongetirregularprofile.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionGetIrregularProfile",
    "tags0": [
      "rangeEnd",
      "dataType",
      "rangeStart",
      "io.clbs.openhes.models.acquisition.ActionGetIrregularProfile"
    ],
    "tags1": [
      "ActionGetIrregularProfile"
    ],
    "tags2": "Defines the get irregular profile action The start timestamp the profile readout The end timestamp the profile readout The data type the target register for example integer double string timestamp For proxy bulks this value can explicitely specified For regular bulks automatically taken from the register definition the system"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actiongetperiodicalprofile.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionGetPeriodicalProfile",
    "tags0": [
      "rangeEnd",
      "dataType",
      "rangeStart",
      "io.clbs.openhes.models.acquisition.ActionGetPeriodicalProfile"
    ],
    "tags1": [
      "ActionGetPeriodicalProfile"
    ],
    "tags2": "Defines the get periodical profile action specification The start timestamp the profile readout The end timestamp the profile readout The data type the target register for example integer double string timestamp For proxy bulks this value can explicitely specified For regular bulks automatically taken from the register definition the system"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actiongetregister.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionGetRegister",
    "tags0": [
      "dataType",
      "io.clbs.openhes.models.acquisition.ActionGetRegister"
    ],
    "tags1": [
      "ActionGetRegister"
    ],
    "tags2": "Defines the get register action specification The data type the target register for example integer double string timestamp For proxy bulks this value can explicitely specified For regular bulks automatically taken from the register definition the system"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actiongettou.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionGetTou",
    "tags0": [
      "passive",
      "io.clbs.openhes.models.acquisition.ActionGetTou"
    ],
    "tags1": [
      "ActionGetTou"
    ],
    "tags2": "Defines the get TOU action specification Specifies whether read the passive TOU table default set false meaning the active TOU table read"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actionresetbillingperiod.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionResetBillingPeriod",
    "tags0": [
      "io.clbs.openhes.models.acquisition.ActionResetBillingPeriod"
    ],
    "tags1": [
      "ActionResetBillingPeriod"
    ],
    "tags2": "Defines the reset billing period action specification"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actionresult.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionResult",
    "tags0": [
      "data",
      "status",
      "actionId",
      "registerId",
      "variableName",
      "errorMessage",
      "io.clbs.openhes.models.acquisition.ActionResult"
    ],
    "tags1": [
      "ActionResult"
    ],
    "tags2": "Defines the result single action The unique action identifier The status code the action The action result data The unique register identifier This read only value and set only the action data relats register Applicable only for results regular bulks The variable names This read only value and set only the action data relates one more variables based device template mapping Applicable only for results regular bulks The user facing error message provided when the action ends with ERROR CODE ACTION ERROR The message provides details about the failure can multiline and should English"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actionsetdisconnectorstate.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionSetDisconnectorState",
    "tags0": [
      "io.clbs.openhes.models.acquisition.ActionSetDisconnectorState"
    ],
    "tags1": [
      "ActionSetDisconnectorState"
    ],
    "tags2": "Defines the set disconnector state action specification"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actionsetlimiter.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionSetLimiter",
    "tags0": [
      "io.clbs.openhes.models.acquisition.ActionSetLimiter"
    ],
    "tags1": [
      "ActionSetLimiter"
    ],
    "tags2": "Defines the set limiter action specification"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actionsetrelaystate.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionSetRelayState",
    "tags0": [
      "io.clbs.openhes.models.acquisition.ActionSetRelayState"
    ],
    "tags1": [
      "ActionSetRelayState"
    ],
    "tags2": "Defines the set relay state action specification"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actionsettou.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionSetTou",
    "tags0": [
      "table",
      "io.clbs.openhes.models.acquisition.ActionSetTou"
    ],
    "tags1": [
      "ActionSetTou"
    ],
    "tags2": "Defines the set TOU action specification The TOU table set"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-actionsyncclock.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ActionSyncClock",
    "tags0": [
      "io.clbs.openhes.models.acquisition.ActionSyncClock"
    ],
    "tags1": [
      "ActionSyncClock"
    ],
    "tags2": "Defines the sync clock action specification"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-addcommunicationunitstocommunicationbusrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.AddCommunicationUnitsToCommunicationBusRequest",
    "tags0": [
      "communicationBusId",
      "communicationUnitId",
      "io.clbs.openhes.models.acquisition.AddCommunicationUnitsToCommunicationBusRequest"
    ],
    "tags1": [
      "AddCommunicationUnitsToCommunicationBusRequest"
    ],
    "tags2": "The unique identifier the communication bus The unique identifier the communication unit"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-adddeviceconfigurationregistertodeviceconfigurationtemplaterequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.AddDeviceConfigurationRegisterToDeviceConfigurationTemplateRequest",
    "tags0": [
      "dctId",
      "registerId",
      "io.clbs.openhes.models.acquisition.AddDeviceConfigurationRegisterToDeviceConfigurationTemplateRequest"
    ],
    "tags1": [
      "AddDeviceConfigurationRegisterToDeviceConfigurationTemplateRequest"
    ],
    "tags2": "The identifier the device configuration template The list register identifiers linked the template"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-adddevicestogrouprequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.AddDevicesToGroupRequest",
    "tags0": [
      "groupId",
      "deviceId",
      "io.clbs.openhes.models.acquisition.AddDevicesToGroupRequest"
    ],
    "tags1": [
      "AddDevicesToGroupRequest"
    ],
    "tags2": "The unique identifier the device group The unique identifier the device"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-addregistertovariablerequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.AddRegisterToVariableRequest",
    "tags0": [
      "variableId",
      "registerId",
      "io.clbs.openhes.models.acquisition.AddRegisterToVariableRequest"
    ],
    "tags1": [
      "AddRegisterToVariableRequest"
    ],
    "tags2": "The unique identifier the variable The list register identifiers linked the variable"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-applicationprotocoltemplate.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ApplicationProtocolTemplate",
    "tags0": [
      "protocol",
      "attributes",
      "io.clbs.openhes.models.acquisition.ApplicationProtocolTemplate"
    ],
    "tags1": [
      "ApplicationProtocolTemplate"
    ],
    "tags2": "Defines the destription for one application protocol for example DLMS The application protocol The list attribute definitions for the selected application protocol These attributes are instantiated for each device and communication unit pair"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-bulk.md",
    "title": "Model: io.clbs.openhes.models.acquisition.Bulk",
    "tags0": [
      "spec",
      "status",
      "metadata",
      "io.clbs.openhes.models.acquisition.Bulk"
    ],
    "tags1": [
      "Bulk"
    ],
    "tags2": "The bulk job spec The bulk job status data The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-bulkjob.md",
    "title": "Model: io.clbs.openhes.models.acquisition.BulkJob",
    "tags0": [
      "spec",
      "status",
      "metadata",
      "io.clbs.openhes.models.acquisition.BulkJob"
    ],
    "tags1": [
      "BulkJob"
    ],
    "tags2": "The job spec The job status The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-bulkjobspec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.BulkJobSpec",
    "tags0": [
      "device",
      "io.clbs.openhes.models.acquisition.BulkJobSpec"
    ],
    "tags1": [
      "BulkJobSpec"
    ],
    "tags2": "The device info"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-bulkspec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.BulkSpec",
    "tags0": [
      "devices",
      "actions",
      "settings",
      "correlationId",
      "deviceGroupId",
      "io.clbs.openhes.models.acquisition.BulkSpec"
    ],
    "tags1": [
      "BulkSpec"
    ],
    "tags2": "The correlation identifier define relation non homogenous group The list devices the bulk The device group identifier The bulk shared job settings The list actions executed"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-bulkstatus.md",
    "title": "Model: io.clbs.openhes.models.acquisition.BulkStatus",
    "tags0": [
      "status",
      "jobsCount",
      "createdAt",
      "startedAt",
      "finishedAt",
      "jobsFinished",
      "jobsSuccessful",
      "io.clbs.openhes.models.acquisition.BulkStatus"
    ],
    "tags1": [
      "BulkStatus"
    ],
    "tags2": "The job status The number jobs the bulk The number jobs finished The number jobs successful The creation timestamp the bulk The start timestamp the bulk The finish timestamp the bulk"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-communicationbus.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CommunicationBus",
    "tags0": [
      "status",
      "metadata",
      "io.clbs.openhes.models.acquisition.CommunicationBus"
    ],
    "tags1": [
      "CommunicationBus"
    ],
    "tags2": "Defines the the communication bus information The communication bus status The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-communicationbusstatus.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CommunicationBusStatus",
    "tags0": [
      "communicationUnitId",
      "io.clbs.openhes.models.acquisition.CommunicationBusStatus"
    ],
    "tags1": [
      "CommunicationBusStatus"
    ],
    "tags2": "Defines the communication bus status The list communication unit identifiers connected the communication bus"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-communicationtemplate.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CommunicationTemplate",
    "tags0": [
      "type",
      "datalinks",
      "io.clbs.openhes.models.acquisition.CommunicationTemplate"
    ],
    "tags1": [
      "CommunicationTemplate"
    ],
    "tags2": "Defines the destription single communication type for example TCP The communication type The list supprted data link protocols and their application protocols supported the driver"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-communicationunit.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CommunicationUnit",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.CommunicationUnit"
    ],
    "tags1": [
      "CommunicationUnit"
    ],
    "tags2": "Defines the communication unit information The communication unit specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-communicationunitlogrecord.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CommunicationUnitLogRecord",
    "tags0": [
      "id",
      "level",
      "message",
      "timestamp",
      "communicationUnitId",
      "io.clbs.openhes.models.acquisition.CommunicationUnitLogRecord"
    ],
    "tags1": [
      "CommunicationUnitLogRecord"
    ],
    "tags2": "Defines single log record communication unit The unique identifier the log record not provided hash the log data auto generated The unique identifier the communication unit which the log record belongs May empty and the relation can set higher object level The timestamp the log record Must not empty The severity level the log record The log message Must not empty"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-communicationunitspec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CommunicationUnitSpec",
    "tags0": [
      "externalId",
      "connectionInfo",
      "io.clbs.openhes.models.acquisition.CommunicationUnitSpec"
    ],
    "tags1": [
      "CommunicationUnitSpec"
    ],
    "tags2": "Defines the communication unit specification The external identifier the communication unit The connection parameters"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-connectioninfo.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ConnectionInfo",
    "tags0": [
      "tcpip",
      "modemPool",
      "attributes",
      "serialOverIp",
      "linkProtocol",
      "communicationBusId",
      "io.clbs.openhes.models.acquisition.ConnectionInfo"
    ],
    "tags1": [
      "ConnectionInfo"
    ],
    "tags2": "Defines the configuration parameters for device connection The TCP connection type The phone based modem pool connection type The serial over connection type The data link protocol communication bus identifier Works custom grouping key link jobs across multiple communication units when multiple entry points share single communication bus foe example multi master withprimary and backup masters not set jobs are grouped the default group key based the connection type The connection attributes See GetDataLinkFields the acquisition package"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-connectiontypecontrolledserial.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ConnectionTypeControlledSerial",
    "tags0": [
      "moxa",
      "direct",
      "rfc2217",
      "io.clbs.openhes.models.acquisition.ConnectionTypeControlledSerial"
    ],
    "tags1": [
      "ConnectionTypeControlledSerial"
    ],
    "tags2": "Defines the connection infoformation for controlled serial line over for example Moxa The simple direct serial connection type The Moxa connection type The RFC connection type"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-connectiontypedirecttcpip.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ConnectionTypeDirectTcpIp",
    "tags0": [
      "host",
      "port",
      "timeout",
      "io.clbs.openhes.models.acquisition.ConnectionTypeDirectTcpIp"
    ],
    "tags1": [
      "ConnectionTypeDirectTcpIp"
    ],
    "tags2": "Defines the connection information for direct TCP connection type The hostname address the device connect The TCP port number the device connect The timeout for TCP connection"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-connectiontypemodempool.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ConnectionTypeModemPool",
    "tags0": [
      "modem",
      "number",
      "poolId",
      "io.clbs.openhes.models.acquisition.ConnectionTypeModemPool"
    ],
    "tags1": [
      "ConnectionTypeModemPool"
    ],
    "tags2": "Defines the connection information for phone line modem connection type The phone number the device connect The unique modem pool identifier modem pool group modems that can used connect the device The final modem selected the Taskmaster the job start The modem device assigned the job This field filled only when the connection type modem The value assigned the Taskmaster the start the job and the driver musr use this modem exclusively for this job"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-connectiontypeserialdirect.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ConnectionTypeSerialDirect",
    "tags0": [
      "host",
      "port",
      "timeout",
      "io.clbs.openhes.models.acquisition.ConnectionTypeSerialDirect"
    ],
    "tags1": [
      "ConnectionTypeSerialDirect"
    ],
    "tags2": "Defines the connection information for direct serial port connection The host name address the device connect The TCP port number the device connect The timeout for the direct serial port connection"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-connectiontypeserialmoxa.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ConnectionTypeSerialMoxa",
    "tags0": [
      "host",
      "timeout",
      "dataPort",
      "commandPort",
      "io.clbs.openhes.models.acquisition.ConnectionTypeSerialMoxa"
    ],
    "tags1": [
      "ConnectionTypeSerialMoxa"
    ],
    "tags2": "Defines the connection information for controlled serial line using the Moxa protocol The host name address the device connect The TCP data port number the device connect The TCP command port number the device connect The timeout for the serial port connection using the Moxa protocol"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-connectiontypeserialrfc2217.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ConnectionTypeSerialRfc2217",
    "tags0": [
      "host",
      "port",
      "timeout",
      "io.clbs.openhes.models.acquisition.ConnectionTypeSerialRfc2217"
    ],
    "tags1": [
      "ConnectionTypeSerialRfc2217"
    ],
    "tags2": "Defines the connection information for controlled serial line using the RFC protocol The host name address the device connect The TCP port number the device connect The timeout for serial port connection using the RFC protocol"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-createbulkrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CreateBulkRequest",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.CreateBulkRequest"
    ],
    "tags1": [
      "CreateBulkRequest"
    ],
    "tags2": "The bulk job spec The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-createcommunicationbusrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CreateCommunicationBusRequest",
    "tags0": [
      "metadata",
      "io.clbs.openhes.models.acquisition.CreateCommunicationBusRequest"
    ],
    "tags1": [
      "CreateCommunicationBusRequest"
    ],
    "tags2": "The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-createcommunicationunitrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CreateCommunicationUnitRequest",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.CreateCommunicationUnitRequest"
    ],
    "tags1": [
      "CreateCommunicationUnitRequest"
    ],
    "tags2": "The communication unit specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-createdeviceconfigurationregisterrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CreateDeviceConfigurationRegisterRequest",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.CreateDeviceConfigurationRegisterRequest"
    ],
    "tags1": [
      "CreateDeviceConfigurationRegisterRequest"
    ],
    "tags2": "The register specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-createdeviceconfigurationtemplaterequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CreateDeviceConfigurationTemplateRequest",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.CreateDeviceConfigurationTemplateRequest"
    ],
    "tags1": [
      "CreateDeviceConfigurationTemplateRequest"
    ],
    "tags2": "The device configuration template specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-createdevicegrouprequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CreateDeviceGroupRequest",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.CreateDeviceGroupRequest"
    ],
    "tags1": [
      "CreateDeviceGroupRequest"
    ],
    "tags2": "The device group specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-createdevicerequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CreateDeviceRequest",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.CreateDeviceRequest"
    ],
    "tags1": [
      "CreateDeviceRequest"
    ],
    "tags2": "The device specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-createproxybulkrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CreateProxyBulkRequest",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.CreateProxyBulkRequest"
    ],
    "tags1": [
      "CreateProxyBulkRequest"
    ],
    "tags2": "The proxy bulk job spec The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-createtimeofusetablerequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CreateTimeOfUseTableRequest",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.CreateTimeOfUseTableRequest"
    ],
    "tags1": [
      "CreateTimeOfUseTableRequest"
    ],
    "tags2": "The time use table specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-createvariablerequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.CreateVariableRequest",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.CreateVariableRequest"
    ],
    "tags1": [
      "CreateVariableRequest"
    ],
    "tags2": "The variable specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-datalinktemplate.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DataLinkTemplate",
    "tags0": [
      "attributes",
      "linkProtocol",
      "appProtocolRefs",
      "io.clbs.openhes.models.acquisition.DataLinkTemplate"
    ],
    "tags1": [
      "DataLinkTemplate"
    ],
    "tags2": "Defines the destription single data link protocol for example HDLC The data link protocol The list application protocol identifiers supported the driver The list attribute definitions related the selected data link type see ink protocol property These field definitions are provided the system and drivers must leave this field empty"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-defaultdevicecommunicationunitattributes.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DefaultDeviceCommunicationUnitAttributes",
    "tags0": [
      "attributes",
      "appProtocol",
      "io.clbs.openhes.models.acquisition.DefaultDeviceCommunicationUnitAttributes"
    ],
    "tags1": [
      "DefaultDeviceCommunicationUnitAttributes"
    ],
    "tags2": "Defines the default attributes for mapping device its communication unit for specific application protocol The application protocol used The protocol specific device attributes represented list attribute definitions"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-device.md",
    "title": "Model: io.clbs.openhes.models.acquisition.Device",
    "tags0": [
      "spec",
      "status",
      "metadata",
      "io.clbs.openhes.models.acquisition.Device"
    ],
    "tags1": [
      "Device"
    ],
    "tags2": "The device specification The device status The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicebulks.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceBulks",
    "tags0": [
      "bulks",
      "io.clbs.openhes.models.acquisition.DeviceBulks"
    ],
    "tags1": [
      "DeviceBulks"
    ],
    "tags2": "The list bulks"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicecommunicationunit.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceCommunicationUnit",
    "tags0": [
      "attributes",
      "appProtocol",
      "communicationUnitId",
      "io.clbs.openhes.models.acquisition.DeviceCommunicationUnit"
    ],
    "tags1": [
      "DeviceCommunicationUnit"
    ],
    "tags2": "Defines the mapping between device and its communication unit The unique identifier the communication unit The application protocol used communication over the communication unit The application protocol related device attributes represented list attribute definitions"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicecommunicationunitchange.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceCommunicationUnitChange",
    "tags0": [
      "status",
      "io.clbs.openhes.models.acquisition.DeviceCommunicationUnitChange"
    ],
    "tags1": [
      "DeviceCommunicationUnitChange"
    ],
    "tags2": "The device communication unit changes status"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicecommunicationunitchangestatus.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceCommunicationUnitChangeStatus",
    "tags0": [
      "changeAt",
      "deviceId",
      "deviceName",
      "communicationUnitId",
      "communicationUnitName",
      "io.clbs.openhes.models.acquisition.DeviceCommunicationUnitChangeStatus"
    ],
    "tags1": [
      "DeviceCommunicationUnitChangeStatus"
    ],
    "tags2": "The timestamp the change The unique identifier the communication unit The name the communication unit The unique identifier the device The name the device"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-deviceconfigurationregister.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceConfigurationRegister",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.DeviceConfigurationRegister"
    ],
    "tags1": [
      "DeviceConfigurationRegister"
    ],
    "tags2": "The register specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-deviceconfigurationregisterspec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpec",
    "tags0": [
      "dataType",
      "driverType",
      "attributes",
      "registerType",
      "io.clbs.openhes.models.acquisition.DeviceConfigurationRegisterSpec"
    ],
    "tags1": [
      "DeviceConfigurationRegisterSpec"
    ],
    "tags2": "Defines the configuration register for device The device driver type The kind device configuration register The field values assigned the register The data type the register"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-deviceconfigurationtemplate.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceConfigurationTemplate",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.DeviceConfigurationTemplate"
    ],
    "tags1": [
      "DeviceConfigurationTemplate"
    ],
    "tags2": "The device configuration template specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-deviceconfigurationtemplatespec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceConfigurationTemplateSpec",
    "tags0": [
      "driverType",
      "registerId",
      "io.clbs.openhes.models.acquisition.DeviceConfigurationTemplateSpec"
    ],
    "tags1": [
      "DeviceConfigurationTemplateSpec"
    ],
    "tags2": "The device driver type The list device configuration register identifiers"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicedata.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceData",
    "tags0": [
      "devices",
      "io.clbs.openhes.models.acquisition.DeviceData"
    ],
    "tags1": [
      "DeviceData"
    ],
    "tags2": "The list device data items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicedatainfo.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceDataInfo",
    "tags0": [
      "spec",
      "status",
      "io.clbs.openhes.models.acquisition.DeviceDataInfo"
    ],
    "tags1": [
      "DeviceDataInfo"
    ],
    "tags2": "The device data info specification The device data info status"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicedatainfospec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceDataInfoSpec",
    "tags0": [
      "deviceId",
      "registerId",
      "io.clbs.openhes.models.acquisition.DeviceDataInfoSpec"
    ],
    "tags1": [
      "DeviceDataInfoSpec"
    ],
    "tags2": "The device identifier The register identifier"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicedatainfostatus.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceDataInfoStatus",
    "tags0": [
      "period",
      "lastValueAt",
      "registerName",
      "io.clbs.openhes.models.acquisition.DeviceDataInfoStatus"
    ],
    "tags1": [
      "DeviceDataInfoStatus"
    ],
    "tags2": "The register name The period the regular profile values applicable The timestamp the last stored value"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicedevicedata.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceDeviceData",
    "tags0": [
      "data",
      "deviceId",
      "io.clbs.openhes.models.acquisition.DeviceDeviceData"
    ],
    "tags1": [
      "DeviceDeviceData"
    ],
    "tags2": "The unique identifier the device The list variable data items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-deviceeventrecord.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceEventRecord",
    "tags0": [
      "eventId",
      "deviceId",
      "timestamp",
      "eventCode",
      "eventText",
      "eventSource",
      "io.clbs.openhes.models.acquisition.DeviceEventRecord"
    ],
    "tags1": [
      "DeviceEventRecord"
    ],
    "tags2": "Defines single event record associated with the specified device The unique device identifier The timestamp the event The unique event identifier The event code generated the device The source the event The descriptive text the event"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-deviceevents.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceEvents",
    "tags0": [
      "events",
      "io.clbs.openhes.models.acquisition.DeviceEvents"
    ],
    "tags1": [
      "DeviceEvents"
    ],
    "tags2": "Defines list device event records The list device event records"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicegroup.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceGroup",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.DeviceGroup"
    ],
    "tags1": [
      "DeviceGroup"
    ],
    "tags2": "The device group specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicegroupspec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceGroupSpec",
    "tags0": [
      "externalId",
      "io.clbs.openhes.models.acquisition.DeviceGroupSpec"
    ],
    "tags1": [
      "DeviceGroupSpec"
    ],
    "tags2": "The external identifier the communication unit"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-deviceinfo.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceInfo",
    "tags0": [
      "clockDelta",
      "deviceModel",
      "relayStates",
      "infoTimestamp",
      "errorRegister",
      "firmwareVersion",
      "connectionState",
      "deviceSerialNumber",
      "manufacturerSerialNumber",
      "io.clbs.openhes.models.acquisition.DeviceInfo"
    ],
    "tags1": [
      "DeviceInfo"
    ],
    "tags2": "Defines common device information The timestamp when the values were read The serial number the device assigned the manufacturer Typical source The device serial number Typical source The device firmware version identifier Typical source The time difference delta between the device clock and the acquisition server clock driver Positive values mean the device clock ahead negative values mean the device clock behind The device model The error register register Typical source higher bit lower bit The list relay states The order the relays the same the device The value true the relay connected and false the relay disconnected The connection disconnector state The value true the customer connected and false the customer disconnected"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicespec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceSpec",
    "tags0": [
      "dctId",
      "timezone",
      "externalId",
      "communicationUnitLink",
      "defaultLinkAttributes",
      "io.clbs.openhes.models.acquisition.DeviceSpec"
    ],
    "tags1": [
      "DeviceSpec"
    ],
    "tags2": "Defines the device specification The unique identifier the device configuration template The external identifier the device The ordered list communication units with additional info linked the device The first entry the primary communication unit with the highest priority The timezone associated with the device For example America New York Europe Prague CET GMT Etc GMT The default communication unit link attributes used when the device created without communication unit link Typically applicable for floating devices that are connected via data concentrators where the related driver dynamically assigns the communication unit The list must not contain same application protocol more than once"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-devicestatus.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DeviceStatus",
    "tags0": [
      "info",
      "driverType",
      "io.clbs.openhes.models.acquisition.DeviceStatus"
    ],
    "tags1": [
      "DeviceStatus"
    ],
    "tags2": "Defines the current status device The device information The driver type selected according the device configuration template"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-driver.md",
    "title": "Model: io.clbs.openhes.models.acquisition.Driver",
    "tags0": [
      "spec",
      "status",
      "io.clbs.openhes.models.acquisition.Driver"
    ],
    "tags1": [
      "Driver"
    ],
    "tags2": "The driver specification The driver status"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-driverspec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DriverSpec",
    "tags0": [
      "version",
      "templates",
      "driverType",
      "displayName",
      "listeningPort",
      "maxCascadeDepth",
      "typicalMemUsage",
      "maxConcurrentJobs",
      "io.clbs.openhes.models.acquisition.DriverSpec"
    ],
    "tags1": [
      "DriverSpec"
    ],
    "tags2": "The driver version The format not defined The driver itself versioned the docker image tags this value shall either the same set during the image build any useful user readable version string The port the driver gRPC will listen The technical internal the driver The maximum number concurrent jobs the driver can handle The value not allowed the maximum number respect typical mem usage not overgrow the memory resources The maximum cascade depth the driver can handle Number means that the driver cannot handle cascading jobs means that the driver can handle cascading jobs with one level depth etc The value means that the driver can handle any number cascading jobs The typical memory usage the driver The connection and action templates The display name the driver Must format manufacturer device type device type version must respect upper lower characters The generic drivers such cybros labs generic must named driver company name generic"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-driverstatus.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DriverStatus",
    "tags0": [
      "isLatest",
      "updateFinished",
      "io.clbs.openhes.models.acquisition.DriverStatus"
    ],
    "tags1": [
      "DriverStatus"
    ],
    "tags2": "Whether the driver the latest installed version the system Note that this does not mean that the driver the latest released version Whether the driver update from previous version any has been finished"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-drivertemplates.md",
    "title": "Model: io.clbs.openhes.models.acquisition.DriverTemplates",
    "tags0": [
      "appProtocols",
      "accessTemplates",
      "actionAttributes",
      "actionConstraints",
      "communicationTemplates",
      "uknownDeviceDescriptors",
      "io.clbs.openhes.models.acquisition.DriverTemplates"
    ],
    "tags1": [
      "DriverTemplates"
    ],
    "tags2": "Defines the driver templates exchanged during driver negotiation The supported communication options templates Each template represents one communication method driver can support multiple communication templates The supported application protocol templates The job action templates all supported action types Each supported action type must appear onbly once The supported access level templates The supported templates the job actions constraints The list descriptors for uknown devices detected the communication unit This applies only drivers that communicate with devices like data concentrators that can provide information for unknown devices The descriptors must cover all data attributes used the SetUnknownDevicesRequest message"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-eventrecord.md",
    "title": "Model: io.clbs.openhes.models.acquisition.EventRecord",
    "tags0": [
      "eventId",
      "timestamp",
      "eventCode",
      "eventText",
      "eventSource",
      "io.clbs.openhes.models.acquisition.EventRecord"
    ],
    "tags1": [
      "EventRecord"
    ],
    "tags2": "Defines single event reported device The timestamp the event The identifier the event The event code generated the device The descriptive text the event The source the event"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-eventrecords.md",
    "title": "Model: io.clbs.openhes.models.acquisition.EventRecords",
    "tags0": [
      "values",
      "io.clbs.openhes.models.acquisition.EventRecords"
    ],
    "tags1": [
      "EventRecords"
    ],
    "tags2": "Defines list event records The list event records"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-getdevicebulksrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.GetDeviceBulksRequest",
    "tags0": [
      "rangeEnd",
      "deviceId",
      "rangeStart",
      "io.clbs.openhes.models.acquisition.GetDeviceBulksRequest"
    ],
    "tags1": [
      "GetDeviceBulksRequest"
    ],
    "tags2": "The start timestamp the bulks selection inclusive The end timestamp the bulks selection inclusive The unique identifier the device"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-getdevicedatarequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.GetDeviceDataRequest",
    "tags0": [
      "series",
      "rangeEnd",
      "snapshot",
      "rangeStart",
      "filterIncludeStatus",
      "filterExcludeStatus",
      "io.clbs.openhes.models.acquisition.GetDeviceDataRequest"
    ],
    "tags1": [
      "GetDeviceDataRequest"
    ],
    "tags2": "The start timestamp the data The exclusivness inclusiveness the timestamp defined the variable The end timestamp the data inclusive One more identifiers the devices The filter status bits only values with these status bits will returned the response The filter status bits only values without these status bits will returned the response set the system will return snapshot from the given point time what has been stored the system yesterday"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-getdevicedataseriesselector.md",
    "title": "Model: io.clbs.openhes.models.acquisition.GetDeviceDataSeriesSelector",
    "tags0": [
      "deviceId",
      "variableId",
      "io.clbs.openhes.models.acquisition.GetDeviceDataSeriesSelector"
    ],
    "tags1": [
      "GetDeviceDataSeriesSelector"
    ],
    "tags2": "The unique identifier the device The unique identifier the variable"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-getdeviceeventsrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.GetDeviceEventsRequest",
    "tags0": [
      "rangeEnd",
      "deviceId",
      "rangeStart",
      "io.clbs.openhes.models.acquisition.GetDeviceEventsRequest"
    ],
    "tags1": [
      "GetDeviceEventsRequest"
    ],
    "tags2": "The start timestamp the device events selection inclusive The end timestamp the device events selection inclusive The unique identifier the device"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-irregularprofilevalues.md",
    "title": "Model: io.clbs.openhes.models.acquisition.IrregularProfileValues",
    "tags0": [
      "unit",
      "values",
      "io.clbs.openhes.models.acquisition.IrregularProfileValues"
    ],
    "tags1": [
      "IrregularProfileValues"
    ],
    "tags2": "Defines the irregular non perioic profile values The unit the profile values The list irregular values"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-irregularvalue.md",
    "title": "Model: io.clbs.openhes.models.acquisition.IrregularValue",
    "tags0": [
      "value",
      "timestamp",
      "io.clbs.openhes.models.acquisition.IrregularValue"
    ],
    "tags1": [
      "IrregularValue"
    ],
    "tags2": "Defines single irregular non periodic value with timestamp The timestamp the value The value"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-jobaction.md",
    "title": "Model: io.clbs.openhes.models.acquisition.JobAction",
    "tags0": [
      "getTou",
      "setTou",
      "actionId",
      "fwUpdate",
      "getEvents",
      "syncClock",
      "attributes",
      "setLimiter",
      "getRegister",
      "getDeviceInfo",
      "setRelayState",
      "resetBillingPeriod",
      "getIrregularProfile",
      "getPeriodicalProfile",
      "setDisconnectorState",
      "io.clbs.openhes.models.acquisition.JobAction"
    ],
    "tags1": [
      "JobAction"
    ],
    "tags2": "Defines the job action specification The JobAction represents single action performed single device For example the action ActionGetRegister specifies single register read from the devices The unique identifier the action The action attributes Defines the GetRegister action Defines the GetPeriodicalProfile action Defines the GetIrregularProfile action Defines the GetEvents action Defines the GetDeviceInfo action Defines the SyncClock action Defines the SetRelayState action Defines the SetDisconnectorState action Defines the GetTou action Defines the SetTou action Defines the SetLimiter action Defines the ResetBillingPeriod action Defines the firmware update action"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-jobactionattributes.md",
    "title": "Model: io.clbs.openhes.models.acquisition.JobActionAttributes",
    "tags0": [
      "type",
      "attributes",
      "io.clbs.openhes.models.acquisition.JobActionAttributes"
    ],
    "tags1": [
      "JobActionAttributes"
    ],
    "tags2": "Defines the template for job action attributes The type action for which this template template defined TThe list attribute definitions for the action attributes template"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-jobactioncontraints.md",
    "title": "Model: io.clbs.openhes.models.acquisition.JobActionContraints",
    "tags0": [
      "getRegisterTypeName",
      "getRegisterTypeAttributes",
      "io.clbs.openhes.models.acquisition.JobActionContraints"
    ],
    "tags1": [
      "JobActionContraints"
    ],
    "tags2": "Defines the constraints for job actions Contains all register types and their names English Example gen Generic Register vqi Quality VQI Register Action ACTION TYPE GET REGISTER Contains all register types and their attributes Example gen attribute1 attribute2 vqi attribute1 attribute3 See JobActionAttributes for the attribute definitions Action ACTION TYPE GET REGISTER"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-jobactionset.md",
    "title": "Model: io.clbs.openhes.models.acquisition.JobActionSet",
    "tags0": [
      "getTou",
      "setTou",
      "fwUpdate",
      "variables",
      "getEvents",
      "syncClock",
      "setLimiter",
      "getRegister",
      "getDeviceInfo",
      "setRelayState",
      "resetBillingPeriod",
      "getIrregularProfile",
      "getPeriodicalProfile",
      "setDisconnectorState",
      "io.clbs.openhes.models.acquisition.JobActionSet"
    ],
    "tags1": [
      "JobActionSet"
    ],
    "tags2": "Defines the job action set specification Unlike single JobAction that used only once per bulk JobActionSet may internally cover multiple JobActions For example the action type GetRegister and variable filter specified the system automatically retrieves all registers defined the active device configuration template The variable filter Meaning depends the action type GetRegister GetPeriodicalProfile and GetIrregularProfile List variable names for example defined the system not set all variables the given type are read Others Not applicable ignored Defines the GetRegister action Defines the GetPeriodicalProfile action Defines the GetIrregularProfile action Defines the GetEvents action Defines the GetDeviceInfo action Defines the SyncClock action Defines the SetRelayState action Defines the SetDisconnectorState action Defines the GetTou action Defines the SetTou action Defines the SetLimiter action Defines the ResetBillingPeriod action Defines the firmware update action"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-jobdevice.md",
    "title": "Model: io.clbs.openhes.models.acquisition.JobDevice",
    "tags0": [
      "jobId",
      "deviceId",
      "timezone",
      "externalId",
      "appProtocol",
      "connectionInfo",
      "deviceAttributes",
      "io.clbs.openhes.models.acquisition.JobDevice"
    ],
    "tags1": [
      "JobDevice"
    ],
    "tags2": "Defines the information for device job The unique job identifier within the parent bulk The unique device identifier set all subsequent details are loaded automatically from the device registry The external device identifier The connection attributes for the device The options depend the ApplicationProtocolTemplate the given application protocol see the app protocol property The device connection parameters The application protocol used communicate with the device The timezone associated with the device For example America New York Europe Prague CET GMT Etc GMT"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-jobdeviceid.md",
    "title": "Model: io.clbs.openhes.models.acquisition.JobDeviceId",
    "tags0": [
      "jobId",
      "deviceId",
      "io.clbs.openhes.models.acquisition.JobDeviceId"
    ],
    "tags1": [
      "JobDeviceId"
    ],
    "tags2": "Defines the association between bulk jobs and individual devices The identifier the device job within the parent bulk The unique identifier the device"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-jobsettings.md",
    "title": "Model: io.clbs.openhes.models.acquisition.JobSettings",
    "tags0": [
      "priority",
      "attempts",
      "expiresAt",
      "retryDelay",
      "deferStart",
      "maxDuration",
      "readPathPolicy",
      "io.clbs.openhes.models.acquisition.JobSettings"
    ],
    "tags1": [
      "JobSettings"
    ],
    "tags2": "Defines the parameters and execution rules that control how job processed The maximum duration allowed for job attempt This value defines the real time window for the driver execute the job The execution priority assigned the job The maximum number allowed job attempts Must least The delay between two attempts The time offset wait before starting the job The timestamp that specifies when the job expires and should longer not executed The policy that determines how data read from devices can red directly from devices meters via the data concentrator"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-jobstatus.md",
    "title": "Model: io.clbs.openhes.models.acquisition.JobStatus",
    "tags0": [
      "code",
      "status",
      "results",
      "queueId",
      "startedAt",
      "finishedAt",
      "deviceInfo",
      "attemptsDone",
      "errorMessage",
      "io.clbs.openhes.models.acquisition.JobStatus"
    ],
    "tags1": [
      "JobStatus"
    ],
    "tags2": "Defines the status information single job within bulk The status the job The error code the job The result data for all executed job actions The start timestamp the job The finish timestamp the job The number attempts already done The device informatiom from the ACTION TYPE GET DEVICE INFO action The internal queue identifier set the Taskmaster when the job queued for processing The user facing error message related the whole job This used especially relevant when action was executed allowing log non action related errors"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listbulkjobsrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListBulkJobsRequest",
    "tags0": [
      "bulkId",
      "selector",
      "io.clbs.openhes.models.acquisition.ListBulkJobsRequest"
    ],
    "tags1": [
      "ListBulkJobsRequest"
    ],
    "tags2": "The bulk identifier The list selector"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listdevicegroupdevicesrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListDeviceGroupDevicesRequest",
    "tags0": [
      "groupId",
      "selector",
      "io.clbs.openhes.models.acquisition.ListDeviceGroupDevicesRequest"
    ],
    "tags1": [
      "ListDeviceGroupDevicesRequest"
    ],
    "tags2": "The unique identifier the device group The list selector"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofbulk.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfBulk",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfBulk"
    ],
    "tags1": [
      "ListOfBulk"
    ],
    "tags2": "The list bulks The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofbulkjob.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfBulkJob",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfBulkJob"
    ],
    "tags1": [
      "ListOfBulkJob"
    ],
    "tags2": "The list jobs The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofcommunicationbus.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfCommunicationBus",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfCommunicationBus"
    ],
    "tags1": [
      "ListOfCommunicationBus"
    ],
    "tags2": "The list communication unit buses The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofcommunicationunit.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfCommunicationUnit",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfCommunicationUnit"
    ],
    "tags1": [
      "ListOfCommunicationUnit"
    ],
    "tags2": "The communication unit specification The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofcommunicationunitlogrecord.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfCommunicationUnitLogRecord",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfCommunicationUnitLogRecord"
    ],
    "tags1": [
      "ListOfCommunicationUnitLogRecord"
    ],
    "tags2": "Defines list communication unit log records The list communication unit log records The total number items the list"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofdevice.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfDevice",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfDevice"
    ],
    "tags1": [
      "ListOfDevice"
    ],
    "tags2": "The list devices The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofdevicecommunicationunit.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfDeviceCommunicationUnit",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfDeviceCommunicationUnit"
    ],
    "tags1": [
      "ListOfDeviceCommunicationUnit"
    ],
    "tags2": "The list linked communication units The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofdevicecommunicationunitchange.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfDeviceCommunicationUnitChange",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfDeviceCommunicationUnitChange"
    ],
    "tags1": [
      "ListOfDeviceCommunicationUnitChange"
    ],
    "tags2": "The list device groups The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofdeviceconfigurationregister.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfDeviceConfigurationRegister",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfDeviceConfigurationRegister"
    ],
    "tags1": [
      "ListOfDeviceConfigurationRegister"
    ],
    "tags2": "The list registers The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofdeviceconfigurationtemplate.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfDeviceConfigurationTemplate",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfDeviceConfigurationTemplate"
    ],
    "tags1": [
      "ListOfDeviceConfigurationTemplate"
    ],
    "tags2": "The list device configuration templates The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofdevicedatainfo.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfDeviceDataInfo",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfDeviceDataInfo"
    ],
    "tags1": [
      "ListOfDeviceDataInfo"
    ],
    "tags2": "The list device data info items The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofdevicegroup.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfDeviceGroup",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfDeviceGroup"
    ],
    "tags1": [
      "ListOfDeviceGroup"
    ],
    "tags2": "The list device groups The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofdriver.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfDriver",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfDriver"
    ],
    "tags1": [
      "ListOfDriver"
    ],
    "tags2": "The list drivers The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofjobdevice.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfJobDevice",
    "tags0": [
      "list",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfJobDevice"
    ],
    "tags1": [
      "ListOfJobDevice"
    ],
    "tags2": "The list devices included the bulk The total number items the list"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofjobdeviceid.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfJobDeviceId",
    "tags0": [
      "list",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfJobDeviceId"
    ],
    "tags1": [
      "ListOfJobDeviceId"
    ],
    "tags2": "Defines list device identifiers The list device identifiers the bulk The total number device identifiers the list"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofmodempool.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfModemPool",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfModemPool"
    ],
    "tags1": [
      "ListOfModemPool"
    ],
    "tags2": "The list modem pools The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listoftimeofusetable.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfTimeOfUseTable",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfTimeOfUseTable"
    ],
    "tags1": [
      "ListOfTimeOfUseTable"
    ],
    "tags2": "The list time use tables The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-listofvariable.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ListOfVariable",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.acquisition.ListOfVariable"
    ],
    "tags1": [
      "ListOfVariable"
    ],
    "tags2": "The list variables The total number items"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-measuredvalue.md",
    "title": "Model: io.clbs.openhes.models.acquisition.MeasuredValue",
    "tags0": [
      "status",
      "peakTs",
      "nstatus",
      "exponent",
      "boolValue",
      "doubleValue",
      "stringValue",
      "integerValue",
      "timestampValue",
      "timestampTzValue",
      "io.clbs.openhes.models.acquisition.MeasuredValue"
    ],
    "tags1": [
      "MeasuredValue"
    ],
    "tags2": "Defines measured value The status the value The exponent the value Used calculate the real value value exponent for double and integer values The double typed value The integer typed value The string typed value The timestamp typed value The timestamp with timezone typed value stored ISO string The boolean typed value The normalized status the value See StatusBits enum for details The timestamp when the value for example peak was recorded Typically before the capture timestamp"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-modeminfo.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ModemInfo",
    "tags0": [
      "name",
      "tcpip",
      "atInit",
      "atDial",
      "modemId",
      "atHangup",
      "atEscape",
      "serialOverIp",
      "connectTimeout",
      "commandTimeout",
      "serialBaudRate",
      "io.clbs.openhes.models.acquisition.ModemInfo"
    ],
    "tags1": [
      "ModemInfo"
    ],
    "tags2": "Defines modem connection information The unique identifier the modem automatically generated during creation The name the modem The modem initialization command For example FE0X3 The modem dial command For example ATD The modem hangup command For example ATH The modem escape command For exampl The modem connection timeout applicable the modem connection field The modem command timeout applicable given the modem connection field The TCP connection type The modem either supports TCP directly serial converter used that handles the serial configuration The serial over connection type Used when the modem connected via serial converter and requires specific handling The serial baud rate applicable the modem connection field"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-modempool.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ModemPool",
    "tags0": [
      "spec",
      "status",
      "metadata",
      "io.clbs.openhes.models.acquisition.ModemPool"
    ],
    "tags1": [
      "ModemPool"
    ],
    "tags2": "The modem pool specification The modem pool status The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-modempoolspec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ModemPoolSpec",
    "tags0": [
      "io.clbs.openhes.models.acquisition.ModemPoolSpec"
    ],
    "tags1": [
      "ModemPoolSpec"
    ],
    "tags2": ""
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-modempoolstatus.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ModemPoolStatus",
    "tags0": [
      "modems",
      "io.clbs.openhes.models.acquisition.ModemPoolStatus"
    ],
    "tags1": [
      "ModemPoolStatus"
    ],
    "tags2": "The list modems the pool"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-networkmap.md",
    "title": "Model: io.clbs.openhes.models.acquisition.NetworkMap",
    "tags0": [
      "nodes",
      "edges",
      "io.clbs.openhes.models.acquisition.NetworkMap"
    ],
    "tags1": [
      "NetworkMap"
    ],
    "tags2": "Defines the network map specification The list topology nodes Can represent flat hierarchical structure The list edges between the devices"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-profileblock.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ProfileBlock",
    "tags0": [
      "values",
      "startTimestamp",
      "io.clbs.openhes.models.acquisition.ProfileBlock"
    ],
    "tags1": [
      "ProfileBlock"
    ],
    "tags2": "Defines single profile block containing the measured values The start timestamp the block The list profile values ordered the timestamp"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-profilevalues.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ProfileValues",
    "tags0": [
      "unit",
      "period",
      "blocks",
      "io.clbs.openhes.models.acquisition.ProfileValues"
    ],
    "tags1": [
      "ProfileValues"
    ],
    "tags2": "Defines the profile type values The period the profile values seconds The unit the profile values The list continuous profile blocks"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-proxybulk.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ProxyBulk",
    "tags0": [
      "spec",
      "status",
      "metadata",
      "io.clbs.openhes.models.acquisition.ProxyBulk"
    ],
    "tags1": [
      "ProxyBulk"
    ],
    "tags2": "The bulk job spec The bulk job status data The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-proxybulkspec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.ProxyBulkSpec",
    "tags0": [
      "devices",
      "actions",
      "settings",
      "driverType",
      "correlationId",
      "io.clbs.openhes.models.acquisition.ProxyBulkSpec"
    ],
    "tags1": [
      "ProxyBulkSpec"
    ],
    "tags2": "The correlation identifier define relation non homogenous group The device driver type The list custom devices the proxy bulk The bulk shared job settings The list actions executed"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-registervalue.md",
    "title": "Model: io.clbs.openhes.models.acquisition.RegisterValue",
    "tags0": [
      "unit",
      "value",
      "timestamp",
      "io.clbs.openhes.models.acquisition.RegisterValue"
    ],
    "tags1": [
      "RegisterValue"
    ],
    "tags2": "Defines single register type value The timestamp the value The unit the value The value"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-registervalues.md",
    "title": "Model: io.clbs.openhes.models.acquisition.RegisterValues",
    "tags0": [
      "values",
      "io.clbs.openhes.models.acquisition.RegisterValues"
    ],
    "tags1": [
      "RegisterValues"
    ],
    "tags2": "Defines the register type values The list register values"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-removecommunicationunitsfromcommunicationbusrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.RemoveCommunicationUnitsFromCommunicationBusRequest",
    "tags0": [
      "communicationBusId",
      "communicationUnitId",
      "io.clbs.openhes.models.acquisition.RemoveCommunicationUnitsFromCommunicationBusRequest"
    ],
    "tags1": [
      "RemoveCommunicationUnitsFromCommunicationBusRequest"
    ],
    "tags2": "The unique identifier the communication bus The unique identifier the communication unit"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-removedeviceconfigurationregisterfromdeviceconfigurationtemplaterequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.RemoveDeviceConfigurationRegisterFromDeviceConfigurationTemplateRequest",
    "tags0": [
      "dctId",
      "registerId",
      "io.clbs.openhes.models.acquisition.RemoveDeviceConfigurationRegisterFromDeviceConfigurationTemplateRequest"
    ],
    "tags1": [
      "RemoveDeviceConfigurationRegisterFromDeviceConfigurationTemplateRequest"
    ],
    "tags2": "The identifier the device configuration template The list register identifiers unlinked from the template"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-removedevicesfromgrouprequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.RemoveDevicesFromGroupRequest",
    "tags0": [
      "groupId",
      "deviceId",
      "io.clbs.openhes.models.acquisition.RemoveDevicesFromGroupRequest"
    ],
    "tags1": [
      "RemoveDevicesFromGroupRequest"
    ],
    "tags2": "The unique identifier the device group The unique identifier the device"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-removeregisterfromvariablerequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.RemoveRegisterFromVariableRequest",
    "tags0": [
      "variableId",
      "registerId",
      "io.clbs.openhes.models.acquisition.RemoveRegisterFromVariableRequest"
    ],
    "tags1": [
      "RemoveRegisterFromVariableRequest"
    ],
    "tags2": "The unique identifier the variable The list register identifiers linked the variable"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-setdevicecommunicationunitsrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.SetDeviceCommunicationUnitsRequest",
    "tags0": [
      "deviceId",
      "communicationUnits",
      "io.clbs.openhes.models.acquisition.SetDeviceCommunicationUnitsRequest"
    ],
    "tags1": [
      "SetDeviceCommunicationUnitsRequest"
    ],
    "tags2": "The unique identifier the device The list linked communication units"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-setmodempoolrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.SetModemPoolRequest",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.SetModemPoolRequest"
    ],
    "tags1": [
      "SetModemPoolRequest"
    ],
    "tags2": "The modem pool specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-setmodemrequest.md",
    "title": "Model: io.clbs.openhes.models.acquisition.SetModemRequest",
    "tags0": [
      "modem",
      "poolId",
      "io.clbs.openhes.models.acquisition.SetModemRequest"
    ],
    "tags1": [
      "SetModemRequest"
    ],
    "tags2": "The modem pool identifier required for update operation The modem specification"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-timeofusetable.md",
    "title": "Model: io.clbs.openhes.models.acquisition.TimeOfUseTable",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.TimeOfUseTable"
    ],
    "tags1": [
      "TimeOfUseTable"
    ],
    "tags2": "The time use table specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-topologyedge.md",
    "title": "Model: io.clbs.openhes.models.acquisition.TopologyEdge",
    "tags0": [
      "toXId",
      "fromXId",
      "attributes",
      "io.clbs.openhes.models.acquisition.TopologyEdge"
    ],
    "tags1": [
      "TopologyEdge"
    ],
    "tags2": "Defines edge between two nodes the network topology The unique identifier source edge The unique identifier the target edge The edge attributes"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-topologynode.md",
    "title": "Model: io.clbs.openhes.models.acquisition.TopologyNode",
    "tags0": [
      "xId",
      "type",
      "attributes",
      "io.clbs.openhes.models.acquisition.TopologyNode"
    ],
    "tags1": [
      "TopologyNode"
    ],
    "tags2": "Defines node the network topology The unique node identifier The type the node for example device communication unit The node attributes"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-variable.md",
    "title": "Model: io.clbs.openhes.models.acquisition.Variable",
    "tags0": [
      "spec",
      "metadata",
      "io.clbs.openhes.models.acquisition.Variable"
    ],
    "tags1": [
      "Variable"
    ],
    "tags2": "The variable specification The metadata fields"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-variabledevicedata.md",
    "title": "Model: io.clbs.openhes.models.acquisition.VariableDeviceData",
    "tags0": [
      "units",
      "values",
      "variableId",
      "timestamps",
      "io.clbs.openhes.models.acquisition.VariableDeviceData"
    ],
    "tags1": [
      "VariableDeviceData"
    ],
    "tags2": "The unique identifier the variable The list timestamps for the variable data The list units for the variable data The list measured values for the variable data"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-variablespec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.VariableSpec",
    "tags0": [
      "dataType",
      "registerId",
      "excludeDataFrom",
      "io.clbs.openhes.models.acquisition.VariableSpec"
    ],
    "tags1": [
      "VariableSpec"
    ],
    "tags2": "The list device configuration register identifiers The data type the variable Only registers the same data type can linked the variable true the device data returned for this variable will exclude values from timestamp Default false include values from timestamp"
  },
  {
    "filename": "enum-io-clbs-openhes-models-crypto-secretdatadecryptionmethod.md",
    "title": "Enum: io.clbs.openhes.models.crypto.SecretDataDecryptionMethod",
    "tags0": [
      "SECRET_DATA_PLAIN",
      "SECRET_DATA_AES256CBC",
      "SECRET_DATA_UNSPECIFIED",
      "Enum: io.clbs.openhes.models.crypto.SecretDataDecryptionMethod"
    ],
    "tags1": [
      "AES256CBC",
      "DATA",
      "PLAIN",
      "SECRET",
      "SecretDataDecryptionMethod",
      "UNSPECIFIED"
    ],
    "tags2": "DLMS crypto mode Unspecified decryption method Plain data decryption needed AES CBC encryption method"
  },
  {
    "filename": "enum-io-clbs-openhes-models-crypto-secretsessionkeydecryptionmethod.md",
    "title": "Enum: io.clbs.openhes.models.crypto.SecretSessionKeyDecryptionMethod",
    "tags0": [
      "SECRET_SESSION_PLAIN",
      "SECRET_SESSION_UNSPECIFIED",
      "SECRET_SESSION_RSA_OAEPM_GF1P",
      "Enum: io.clbs.openhes.models.crypto.SecretSessionKeyDecryptionMethod"
    ],
    "tags1": [
      "GF1P",
      "OAEPM",
      "PLAIN",
      "RSA",
      "SECRET",
      "SESSION",
      "SecretSessionKeyDecryptionMethod",
      "UNSPECIFIED"
    ],
    "tags2": "session key decryption method used when the session key not set not used Plain session key session key decryption needed RSA OAEP MGF1P decryption method used for session keys"
  },
  {
    "filename": "model-io-clbs-openhes-models-crypto-cryptosecret.md",
    "title": "Model: io.clbs.openhes.models.crypto.CryptoSecret",
    "tags0": [
      "data",
      "keyId",
      "createdAt",
      "updatedAt",
      "accessLevel",
      "io.clbs.openhes.models.crypto.CryptoSecret"
    ],
    "tags1": [
      "CryptoSecret"
    ],
    "tags2": "Access level for the secret admin user etc Unique identifier for the secret key Timestamp when the secret was created Timestamp when the secret was last updated The secret data"
  },
  {
    "filename": "model-io-clbs-openhes-models-crypto-cryptosecrets.md",
    "title": "Model: io.clbs.openhes.models.crypto.CryptoSecrets",
    "tags0": [
      "secrets",
      "io.clbs.openhes.models.crypto.CryptoSecrets"
    ],
    "tags1": [
      "CryptoSecrets"
    ],
    "tags2": "List secrets"
  },
  {
    "filename": "model-io-clbs-openhes-models-crypto-getcryptosecretrequest.md",
    "title": "Model: io.clbs.openhes.models.crypto.GetCryptoSecretRequest",
    "tags0": [
      "cryptoId",
      "objectType",
      "driverType",
      "io.clbs.openhes.models.crypto.GetCryptoSecretRequest"
    ],
    "tags1": [
      "GetCryptoSecretRequest"
    ],
    "tags2": "Defines the resource type for which the field descriptor defined BULK DEVICE etc The driver type for which the secret requested METERCONTROL ST402D DLMS The crypto the secret retrieve"
  },
  {
    "filename": "model-io-clbs-openhes-models-crypto-setcryptosecretrequest.md",
    "title": "Model: io.clbs.openhes.models.crypto.SetCryptoSecretRequest",
    "tags0": [
      "data",
      "keyId",
      "cryptoId",
      "objectType",
      "driverType",
      "sessionKey",
      "accessLevel",
      "dataDecryptionIv",
      "decryptionSecretId",
      "dataDecryptionMethod",
      "sessionKeyDecryptionMethod",
      "io.clbs.openhes.models.crypto.SetCryptoSecretRequest"
    ],
    "tags1": [
      "SetCryptoSecretRequest"
    ],
    "tags2": "Defines the resource type for which the field descriptor defined BULK DEVICE etc The driver type for which the secret requested METERCONTROL ST402D DLMS The crypto the secret retrieve Access level for the secret admin user etc Unique identifier for the secret key Identifier for the key used decrypt the either the session key the data directly Method used decrypt the session key May unset the session key unset and used The session key usually encrypted used decrypt the data Method used decrypt the secret data May unset the data not encrypted and vice versa Initialization vector for the decryption method applicable The secret data"
  },
  {
    "filename": "model-io-clbs-openhes-models-system-applicationconfig.md",
    "title": "Model: io.clbs.openhes.models.system.ApplicationConfig",
    "tags0": [
      "items",
      "io.clbs.openhes.models.system.ApplicationConfig"
    ],
    "tags1": [
      "ApplicationConfig"
    ],
    "tags2": "Application config specification The default values for the application configuration"
  },
  {
    "filename": "model-io-clbs-openhes-models-system-applicationconfigdescriptor.md",
    "title": "Model: io.clbs.openhes.models.system.ApplicationConfigDescriptor",
    "tags0": [
      "items",
      "descriptors",
      "io.clbs.openhes.models.system.ApplicationConfigDescriptor"
    ],
    "tags1": [
      "ApplicationConfigDescriptor"
    ],
    "tags2": "The component configuration descriptors The default values for the application configuration"
  },
  {
    "filename": "model-io-clbs-openhes-models-system-componentconfig.md",
    "title": "Model: io.clbs.openhes.models.system.ComponentConfig",
    "tags0": [
      "name",
      "items",
      "io.clbs.openhes.models.system.ComponentConfig"
    ],
    "tags1": [
      "ComponentConfig"
    ],
    "tags2": "The component name The component configuration values"
  },
  {
    "filename": "model-io-clbs-openhes-models-system-componentconfigdescriptor.md",
    "title": "Model: io.clbs.openhes.models.system.ComponentConfigDescriptor",
    "tags0": [
      "name",
      "items",
      "io.clbs.openhes.models.system.ComponentConfigDescriptor"
    ],
    "tags1": [
      "ComponentConfigDescriptor"
    ],
    "tags2": "The component name The component configuration descriptors"
  },
  {
    "filename": "model-io-clbs-openhes-models-system-openidconfiguration.md",
    "title": "Model: io.clbs.openhes.models.system.OpenIdConfiguration",
    "tags0": [
      "content",
      "io.clbs.openhes.models.system.OpenIdConfiguration"
    ],
    "tags1": [
      "OpenIdConfiguration"
    ],
    "tags2": "The raw JSON configuration the OIDC service"
  },
  {
    "filename": "enum-io-clbs-openhes-models-common-fielddatatype.md",
    "title": "Enum: io.clbs.openhes.models.common.FieldDataType",
    "tags0": [
      "TEXT",
      "DOUBLE",
      "BINARY",
      "INTEGER",
      "BOOLEAN",
      "DURATION",
      "TIMESTAMP",
      "DATA_TYPE_UNSPECIFIED",
      "Enum: io.clbs.openhes.models.common.FieldDataType"
    ],
    "tags1": [
      "DATA",
      "FieldDataType",
      "TYPE",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the data type the field Unspecified data type The text data type The integer data type The double data type The binary data type The boolean data type The timestamp data type represented google protobuf Timestamp The duration data type represented google protobuf Duration"
  },
  {
    "filename": "enum-io-clbs-openhes-models-common-fielddisplayformat.md",
    "title": "Enum: io.clbs.openhes.models.common.FieldDisplayFormat",
    "tags0": [
      "MONEY",
      "COMBO",
      "PASSWORD",
      "DATE_ONLY",
      "TIMEOFDAY",
      "MULTILINE",
      "UTC_DATETIME",
      "UTC_DATE_ONLY",
      "DISPLAY_FORMAT_UNSPECIFIED",
      "Enum: io.clbs.openhes.models.common.FieldDisplayFormat"
    ],
    "tags1": [
      "DATE",
      "DATETIME",
      "DISPLAY",
      "FORMAT",
      "FieldDisplayFormat",
      "ONLY",
      "UNSPECIFIED",
      "UTC"
    ],
    "tags2": "Define the display format determining how alues are presetned the GUI The default display format Text integer double date time duration values are shown their default format Displays only the date portion local date time value Data type must TIMESTAMP string Displays the full date time UTC timezone Data type must TIMESTAMP string Displays the date UTC timezone Data type must TIMESTAMP string Displays time day format for example Data type must INTEGER milliseconds Displays money amounts The unit must set ISO currency code for example USD EUR Data type must DOUBLE INTEGER Displays values hidden passwords Data type must TEXT The GUI always shows six asterisks regardless actual length Displays values multi line text Data type must TEXT Displays values combo box with selectable options Data type must TEXT"
  },
  {
    "filename": "enum-io-clbs-openhes-models-common-filteroperator.md",
    "title": "Enum: io.clbs.openhes.models.common.FilterOperator",
    "tags0": [
      "IN",
      "EQUAL",
      "NOT_IN",
      "BETWEEN",
      "IS_NULL",
      "CONTAINS",
      "NOT_EQUAL",
      "LESS_THAN",
      "ENDS_WITH",
      "STARTS_WITH",
      "IS_NOT_NULL",
      "GREATER_THAN",
      "NOT_CONTAINS",
      "LESS_THAN_OR_EQUAL",
      "GREATER_THAN_OR_EQUAL",
      "FILTER_OPERATOR_UNSPECIFIED",
      "Enum: io.clbs.openhes.models.common.FilterOperator"
    ],
    "tags1": [
      "CONTAINS",
      "ENDS",
      "EQUAL",
      "FILTER",
      "FilterOperator",
      "GREATER",
      "IN",
      "IS",
      "LESS",
      "NOT",
      "NULL",
      "OPERATOR",
      "OR",
      "STARTS",
      "THAN",
      "UNSPECIFIED",
      "WITH"
    ],
    "tags2": "Defines the operators available for filtering options Unspecified filter operator Single operand operator Matches fields equal the provided value Supported for text integer number boolean date fields Single operand operator Matches fields not equal the provided value Supported for text integer number boolean date fields Single operand operator Matches fields greater than the provided value Supported for integer number date fields Single operand operator Matches fields greater than equal the provided value Supported for integer number date fields Single operand operator Matches fields less than the provided value Supported for integer number date fields Single operand operator Matches fields less than equal the provided value Supported for integer number date fields Single operand operator Matches text fields that contain the provided string Supported for text fields Single operand operator Matches text fields that not contain the provided string Supported for text fields Single operand operator Matches text fields that start with the provided string Supported for text fields Single operand operator Matches text fields that end with the provided substring Supported for text fields Multi operand operator Matches fields whose value within the provided set Supported for text integer number boolean fields Multi operand operator Matches fields whose value not within the provided set Supported for text integer number boolean fields Two operand operator Matches fields with values between the two provided operands inclusive Supported for integer number date fields operand operator Matches fields that are either null empty string operand operator Matches fields that are not null empty string"
  },
  {
    "filename": "enum-io-clbs-openhes-models-common-objecttype.md",
    "title": "Enum: io.clbs.openhes.models.common.ObjectType",
    "tags0": [
      "BULK",
      "DEVICE",
      "DRIVER",
      "BULK_JOB",
      "CRON_JOB",
      "VARIABLE",
      "MODEM_POOL",
      "DEVICE_GROUP",
      "DEVICE_DATA_INFO",
      "COMMUNICATION_BUS",
      "TIME_OF_USE_TABLE",
      "COMMUNICATION_UNIT",
      "OBJECT_TYPE_UNSPECIFIED",
      "COMMUNICATION_UNIT_LOG_RECORD",
      "DEVICE_CONFIGURATION_REGISTER",
      "DEVICE_CONFIGURATION_TEMPLATE",
      "DEVICE_COMMUNICATION_UNIT_CHANGE",
      "Enum: io.clbs.openhes.models.common.ObjectType"
    ],
    "tags1": [
      "BULK",
      "BUS",
      "CHANGE",
      "COMMUNICATION",
      "CONFIGURATION",
      "CRON",
      "DATA",
      "DEVICE",
      "GROUP",
      "INFO",
      "JOB",
      "LOG",
      "MODEM",
      "OBJECT",
      "OF",
      "ObjectType",
      "POOL",
      "RECORD",
      "REGISTER",
      "TABLE",
      "TEMPLATE",
      "TIME",
      "TYPE",
      "UNIT",
      "UNSPECIFIED",
      "USE"
    ],
    "tags2": "Enum representing the object type The bulk The bulk job The communication bus The communication unit The communication unit log record The cron job The device The device communication unit change The register The device template The device data info The device group The driver The modem pool Unspecified object type The time use table The variable"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-createfielddescriptorrequest.md",
    "title": "Model: io.clbs.openhes.models.common.CreateFieldDescriptorRequest",
    "tags0": [
      "spec",
      "io.clbs.openhes.models.common.CreateFieldDescriptorRequest"
    ],
    "tags1": [
      "CreateFieldDescriptorRequest"
    ],
    "tags2": "Defines the specification for creating new field descriptor The specification the field descriptor created"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-fielddescriptor.md",
    "title": "Model: io.clbs.openhes.models.common.FieldDescriptor",
    "tags0": [
      "gid",
      "path",
      "unit",
      "label",
      "jsPath",
      "format",
      "fieldId",
      "groupId",
      "tooltip",
      "visible",
      "secured",
      "dataType",
      "required",
      "editable",
      "sortable",
      "precision",
      "objectType",
      "multiValue",
      "validation",
      "filterable",
      "defaultValue",
      "isUserDefined",
      "io.clbs.openhes.models.common.FieldDescriptor"
    ],
    "tags1": [
      "FieldDescriptor"
    ],
    "tags2": "Defines the field descriptor specification Indicates whether the field descriptor user defined for example custom field added users The resource type for which the field descriptor defined for example BULK DEVICE The unique identifier the field descriptor within the system The unique field descriptor identifier The path the field the TypeScript representation The path the field the gRPC JSON simplified representation The label displayed for the field The group section identifier for the field The data type the field for example text double The display format the field for example 30m The display unit for the field example kWh USD The decimal precision for double values tooltip hint text for tehe field Indicates whether the field mandatory Indicates whether the field editable Indicates whether the field visible Indicates whether the field can contain multiple values Indicates whether the field should handled security fields for example password certificate input area The validation rules for the field The default value the Multi value fields are not supported Indicates whether the field can used for sorting Default true Indicates whether the field can used for filtering Default true"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-fielddescriptoroptions.md",
    "title": "Model: io.clbs.openhes.models.common.FieldDescriptorOptions",
    "tags0": [
      "options",
      "complete",
      "io.clbs.openhes.models.common.FieldDescriptorOptions"
    ],
    "tags1": [
      "FieldDescriptorOptions"
    ],
    "tags2": "Defines field descriptor options map field descriptor options Indicates whether the list options complete set false the options were filtered out Default true"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-fielddescriptorselector.md",
    "title": "Model: io.clbs.openhes.models.common.FieldDescriptorSelector",
    "tags0": [
      "gid",
      "objectType",
      "io.clbs.openhes.models.common.FieldDescriptorSelector"
    ],
    "tags1": [
      "FieldDescriptorSelector"
    ],
    "tags2": "Define the system wide field descriptor selector Defines the resource type for which the field descriptor defined for example BULK DEVICE etc The system wide unique identifier the field descriptor"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-fieldvalidation.md",
    "title": "Model: io.clbs.openhes.models.common.FieldValidation",
    "tags0": [
      "re",
      "options",
      "minLength",
      "maxLength",
      "minNumber",
      "maxNumber",
      "minInteger",
      "maxInteger",
      "optionsSource",
      "io.clbs.openhes.models.common.FieldValidation"
    ],
    "tags1": [
      "FieldValidation"
    ],
    "tags2": "Defines validation rules applied field regular expression describing the allowed input format not set any value the given type can used Used for string integer double fields The minimum length the field Used for string fields The maximum length the field Used for string fields The minimum value the field Used for integer fields The maximum value the field Used for integer fields The minimum value the field Used for number fields The maximum value the field Used for number fields predefined list allowed values set key value pairs The key represents the actual field value the value represents the label displayed The source from which the allowed options are dynamically fetched from the server set"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-fieldvalue.md",
    "title": "Model: io.clbs.openhes.models.common.FieldValue",
    "tags0": [
      "boolValue",
      "dateValue",
      "stringValue",
      "doubleValue",
      "binaryValue",
      "integerValue",
      "durationValue",
      "io.clbs.openhes.models.common.FieldValue"
    ],
    "tags1": [
      "FieldValue"
    ],
    "tags2": "Defines field value string typed value bit integer typed value bit double typed value binary typed value boolean typed value date typed value duration typed value"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-fieldvalues.md",
    "title": "Model: io.clbs.openhes.models.common.FieldValues",
    "tags0": [
      "attributes",
      "io.clbs.openhes.models.common.FieldValues"
    ],
    "tags1": [
      "FieldValues"
    ],
    "tags2": "Defines field values map field values"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-formattedmessage.md",
    "title": "Model: io.clbs.openhes.models.common.FormattedMessage",
    "tags0": [
      "args",
      "params",
      "message",
      "io.clbs.openhes.models.common.FormattedMessage"
    ],
    "tags1": [
      "FormattedMessage"
    ],
    "tags2": "The formatted message structure The message format string The format arguments set then the message used format string The additional named parameters must single level map must not contain nested objects arrays"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-listfielddescriptoroptionsrequest.md",
    "title": "Model: io.clbs.openhes.models.common.ListFieldDescriptorOptionsRequest",
    "tags0": [
      "optionsSource",
      "filterContains",
      "io.clbs.openhes.models.common.ListFieldDescriptorOptionsRequest"
    ],
    "tags1": [
      "ListFieldDescriptorOptionsRequest"
    ],
    "tags2": "Defines list field available field descriptor options The options source Must match the options source field the corresponding FieldDescriptor The filter applied the option values set only options containing this string will returned"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-listoffielddescriptor.md",
    "title": "Model: io.clbs.openhes.models.common.ListOfFieldDescriptor",
    "tags0": [
      "items",
      "totalCount",
      "io.clbs.openhes.models.common.ListOfFieldDescriptor"
    ],
    "tags1": [
      "ListOfFieldDescriptor"
    ],
    "tags2": "Defines list filed descriptors The list field descriptors The total number items the list"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-listofid.md",
    "title": "Model: io.clbs.openhes.models.common.ListOfId",
    "tags0": [
      "id",
      "io.clbs.openhes.models.common.ListOfId"
    ],
    "tags1": [
      "ListOfId"
    ],
    "tags2": "The list UUID items"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-listofstring.md",
    "title": "Model: io.clbs.openhes.models.common.ListOfString",
    "tags0": [
      "items",
      "io.clbs.openhes.models.common.ListOfString"
    ],
    "tags1": [
      "ListOfString"
    ],
    "tags2": "The list common string items"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-listselector.md",
    "title": "Model: io.clbs.openhes.models.common.ListSelector",
    "tags0": [
      "offset",
      "sortBy",
      "fields",
      "pageSize",
      "filterBy",
      "io.clbs.openhes.models.common.ListSelector"
    ],
    "tags1": [
      "ListSelector"
    ],
    "tags2": "Defines the selection criteria for listing objects including pagination sorting filtering and field selection The number items per page The zero based offset the first item the response The sorting criteria The filtering criteria FIXME This needs designed properly Optional list additional fields include the response"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-listselectorfilterby.md",
    "title": "Model: io.clbs.openhes.models.common.ListSelectorFilterBy",
    "tags0": [
      "path",
      "text",
      "date",
      "number",
      "integer",
      "boolean",
      "operator",
      "dataType",
      "io.clbs.openhes.models.common.ListSelectorFilterBy"
    ],
    "tags1": [
      "ListSelectorFilterBy"
    ],
    "tags2": "Defines the filtering criteria for listing objects Depending the operator specific filed type must provided value required for operators NULL NOT NULL Exactly one value must set for single operand operators EQUAL NOT EQUAL GREATER THAN GREATER THAN EQUAL LESS THAN LESS THAN EQUAL CONTAINS NOT CONTAINS STARTS WITH ENDS WITH Exactly two values must set for two operand operators BETWEEN Zero more values can set for generic operators NOT Only the field corresponding declared data type must set Other fields must not set will ignored the system The field path filter This may JSON path path path from FieldDescriptor The operator that defines the filtering condition The data type the field The values for string based filtering The values for integer based filtering The values for numeric filtering The values for boolean based filtering Values for date based filtering"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-listselectorsortby.md",
    "title": "Model: io.clbs.openhes.models.common.ListSelectorSortBy",
    "tags0": [
      "path",
      "desc",
      "io.clbs.openhes.models.common.ListSelectorSortBy"
    ],
    "tags1": [
      "ListSelectorSortBy"
    ],
    "tags2": "Defines the sorting criteria for listing objects The field path sort This may JSON path path path from FieldDescriptor The sorting order the results descending true ascending false"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-metadatafields.md",
    "title": "Model: io.clbs.openhes.models.common.MetadataFields",
    "tags0": [
      "id",
      "name",
      "fields",
      "generation",
      "managedFields",
      "io.clbs.openhes.models.common.MetadataFields"
    ],
    "tags1": [
      "MetadataFields"
    ],
    "tags2": "The metadata fields managed user and system The UUID the resource serves the unique identifier the resource immutable and typically auto generated during Create operations The generation the resource The additional fields managed user The additional fields managed system The name the resource mutable and typically set user Must set"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-setfieldsspec.md",
    "title": "Model: io.clbs.openhes.models.common.SetFieldsSpec",
    "tags0": [
      "fields",
      "objectId",
      "objectType",
      "io.clbs.openhes.models.common.SetFieldsSpec"
    ],
    "tags1": [
      "SetFieldsSpec"
    ],
    "tags2": "The fields set for the resource The type the managed fields update defines the resource type for which the fields are set The UUID the resource serves the unique identifier the resource immutable and typically auto generated during Create operations"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-updatemetadata.md",
    "title": "Model: io.clbs.openhes.models.common.UpdateMetadata",
    "tags0": [
      "metadata",
      "io.clbs.openhes.models.common.UpdateMetadata"
    ],
    "tags1": [
      "UpdateMetadata"
    ],
    "tags2": "The metadata fields the resource"
  },
  {
    "filename": "model-io-clbs-openhes-models-common-updateobjectfieldsrequest.md",
    "title": "Model: io.clbs.openhes.models.common.UpdateObjectFieldsRequest",
    "tags0": [
      "spec",
      "io.clbs.openhes.models.common.UpdateObjectFieldsRequest"
    ],
    "tags1": [
      "UpdateObjectFieldsRequest"
    ],
    "tags2": "The specification the fields set for the resource"
  },
  {
    "filename": "enum-io-clbs-openhes-models-acquisition-timeofuse-relaystate.md",
    "title": "Enum: io.clbs.openhes.models.acquisition.timeofuse.RelayState",
    "tags0": [
      "RELAY_STATE_CONNECT",
      "RELAY_STATE_DISCONNECT",
      "RELAY_STATE_UNSPECIFIED",
      "Enum: io.clbs.openhes.models.acquisition.timeofuse.RelayState"
    ],
    "tags1": [
      "CONNECT",
      "DISCONNECT",
      "RELAY",
      "RelayState",
      "STATE",
      "UNSPECIFIED"
    ],
    "tags2": "Defines the possible relay states Unspecified relay state The relay state ignored action The relay connects The relay disconnects"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-timeofuse-dayprofile.md",
    "title": "Model: io.clbs.openhes.models.acquisition.timeofuse.DayProfile",
    "tags0": [
      "dayId",
      "switching",
      "io.clbs.openhes.models.acquisition.timeofuse.DayProfile"
    ],
    "tags1": [
      "DayProfile"
    ],
    "tags2": "Defines single day profile containing multiple switching times The unique day profile identifier The list switching events Each event specifies the time and relay states"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-timeofuse-relaystaterecord.md",
    "title": "Model: io.clbs.openhes.models.acquisition.timeofuse.RelayStateRecord",
    "tags0": [
      "state",
      "relayId",
      "io.clbs.openhes.models.acquisition.timeofuse.RelayStateRecord"
    ],
    "tags1": [
      "RelayStateRecord"
    ],
    "tags2": "Defines the state relay specific time Each record contains the relay and its associated state CONNECT DISCONNECT The relay must unique within the list relays The unique relay identifier The state the relay CONNECT DISCONNECT"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-timeofuse-season.md",
    "title": "Model: io.clbs.openhes.models.acquisition.timeofuse.Season",
    "tags0": [
      "id",
      "name",
      "weekId",
      "startDay",
      "startYear",
      "startMonth",
      "io.clbs.openhes.models.acquisition.timeofuse.Season"
    ],
    "tags1": [
      "Season"
    ],
    "tags2": "Defines season that starts specific date and linked week profile The unique season identifier The name the season The start year the season The start month the season The start day the season The reference week that applies this season"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-timeofuse-specialday.md",
    "title": "Model: io.clbs.openhes.models.acquisition.timeofuse.SpecialDay",
    "tags0": [
      "day",
      "year",
      "month",
      "dayId",
      "io.clbs.openhes.models.acquisition.timeofuse.SpecialDay"
    ],
    "tags1": [
      "SpecialDay"
    ],
    "tags2": "Defines special days such holidays other exceptions year the special day The month the special day The day the special day The unique special day identifier"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-timeofuse-switching.md",
    "title": "Model: io.clbs.openhes.models.acquisition.timeofuse.Switching",
    "tags0": [
      "hour",
      "minute",
      "tariff",
      "relays",
      "io.clbs.openhes.models.acquisition.timeofuse.Switching"
    ],
    "tags1": [
      "Switching"
    ],
    "tags2": "Defines the switching configuration including tariffs and relay states for specific times The hour the switching event The minute the switching event The tariff map relay IDs their corresponding relay states Duplicate IDs are not allowed"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-timeofuse-timeofusetablespec.md",
    "title": "Model: io.clbs.openhes.models.acquisition.timeofuse.TimeOfUseTableSpec",
    "tags0": [
      "weeks",
      "seasons",
      "expiesAt",
      "hdoGroupId",
      "activateAt",
      "dayProfiles",
      "specialDays",
      "io.clbs.openhes.models.acquisition.timeofuse.TimeOfUseTableSpec"
    ],
    "tags1": [
      "TimeOfUseTableSpec"
    ],
    "tags2": "Defines the main Time Use TOU table that contains all relevant definitions The expiration date the TOU table HDO High Demand Option Group The activation date the TOU table The list seasons defined the TOU table The list week profiles defined the TOU table The list day profiles each defining multiple switching events The list special days such holidays other exceptions"
  },
  {
    "filename": "model-io-clbs-openhes-models-acquisition-timeofuse-week.md",
    "title": "Model: io.clbs.openhes.models.acquisition.timeofuse.Week",
    "tags0": [
      "weekId",
      "dayIds",
      "weekName",
      "io.clbs.openhes.models.acquisition.timeofuse.Week"
    ],
    "tags1": [
      "Week"
    ],
    "tags2": "Defines week the year containing list day IDs and week name The unique week identifier The name the week The list day IDs assigned the week"
  }
]