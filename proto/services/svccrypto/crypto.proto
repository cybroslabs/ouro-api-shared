// Editions version of proto3 file
edition = "2023";
package io.clbs.openhes.services.svccrypto;

option go_package = "github.com/cybroslabs/ouro-api-shared/gen/go/services/svccrypto";

import "google/protobuf/empty.proto";
import "crypto/crypto.proto";
import "crypto/management.proto";

// Defines a specification for the `Deviceregistry` service.
service CryptoService {
    // @group: Cryptography
    // Initializes the crypto service stream-based RPC for DLMS frames.
    rpc Dlms(stream io.clbs.openhes.models.crypto.DlmsIn) returns (stream io.clbs.openhes.models.crypto.DlmsOut);

    // @group: Cryptography
    // Retrieves a cryptographic secret based on the specified request parameters.
    rpc GetCryptoSecret(io.clbs.openhes.models.crypto.GetCryptoSecretRequest) returns (io.clbs.openhes.models.crypto.CryptoSecrets);
    // @group: Cryptography
    // Creates or updates a cryptographic secret. If a secret with the same identifier already exists, it is replaced.
    rpc SetCryptoSecret(io.clbs.openhes.models.crypto.SetCryptoSecretRequest) returns (google.protobuf.Empty);
}
