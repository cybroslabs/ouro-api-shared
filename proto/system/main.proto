// Editions version of proto3 file
edition = "2023";
package io.clbs.openhes.models.system;

option go_package = "github.com/cybroslabs/ouro-api-shared/gen/go/system";

import "common/fields.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

// Defines a specification for application configuration.
message ApplicationConfig {
    repeated ComponentConfig items = 2;  // The default values for the application configuration.
}

// Defines a specification for a single component configuration.
message ComponentConfig {
    string name              = 1;  // The component name.
    common.FieldValues items = 2;  // The component configuration values.
}

// Defines a specification for component configuration descriptors.
message ComponentConfigDescriptor {
    string name                           = 1;  // The component name.
    repeated common.FieldDescriptor items = 2;  // The list of component configuration field descriptors.
}

// Defines a specification for application configuration descriptors.
message ApplicationConfigDescriptor {
    repeated ComponentConfigDescriptor descriptors = 1;  // The list of component configuration descriptors.
    repeated ComponentConfig items                 = 2;  // The list of default configuration values for the application component.
}

// Defines the license information for the application.
message License {
    string token                                 = 1;   // The license token.
    string id                                    = 2;   // The license ID.
    string name                                  = 3;   // The license name.
    string description                           = 4;   // The license description.
    map<string, string> options                  = 5;   // The licensed options.
    int32 version                                = 6;   // The license options structure version.
    google.protobuf.Timestamp token_expiration   = 7;   // The license token expiration date. This does not necessarily reflect the actual license expiry date but the date when the license token is no longer valid. For air-gapped systems at this point the license key must be renewed. The value is taken from the 'exp' claim in the license token.
    google.protobuf.Timestamp license_expiration = 9;   // The actual license expiration date. This can be any date or unset for perpetual licenses.
    google.protobuf.Timestamp service_expiration = 10;  // The service expiration date. This is the date until when the license entitles to free updates and support.
}

// Defines the user information structure.
message UserProfile {
    string id             = 1;  // The UUID of the user.
    string display_name   = 2;  // The display name of the user.
    repeated string roles = 3;  // The list of user roles.
}

// Defines the
message SetScreenConfigRequest {
    string application_id = 1;  // The application or ui-plugin identifier.
    string screen_id      = 2;  // The screen identifier within the application/ui-plugin.
    string settings       = 3;  // Generic data model holding data related for the screen.
}

// Defines the selection criteria for UI screen configuration.
message ScreenConfigSelector {
    string application_id = 1;  // The application or ui-plugin identifier.
    string screen_id      = 2;  // The screen identifier within the application/ui-plugin.
}