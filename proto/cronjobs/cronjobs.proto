// Editions version of proto3 file
edition = "2023";
package io.clbs.openhes.models.cronjobs;

option go_package = "github.com/cybroslabs/ouro-api-shared/gen/go/cronjobs";

import "common/metadata.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";

enum CronJobTypeEnum {
    CRON_JOB_TYPE_UNSPECIFIED      = 0;  // Unspecified cron job type.
    CRON_JOB_TYPE_START_BULK       = 1;  // Cron job to start an acquistion bulk.
    CRON_JOB_TYPE_START_PROXY_BULK = 2;  // Cron job to start a proxy bulk.
}

message CreateCronJobRequest {
    CronJobSpec spec               = 1;
    common.MetadataFields metadata = 2;  // The metadata fields.
}

message CronJob {
    CronJobSpec spec               = 1;
    CronJobStatus status           = 2;
    common.MetadataFields metadata = 3;  // The metadata fields.
}

message CronJobSpec {
    CronJobTypeEnum type        = 1;  // The type of the cron job, e.g., CRON_JOB_TYPE_START_BULK, CRON_JOB_TYPE_START_PROXY_BULK.
    string schedule             = 2;  // The cron job definition, e.g., "0 * * * *" for every hour.
    string timezone             = 3;  // The timezone related to the cron job, e.g. "America/New_York", "Europe/Prague", "CET", "GMT", "Etc/GMT+2".
    bool suspend                = 4;  // Whether the cron job is suspended or not. By default, it is false (i.e., not suspended).
    google.protobuf.Struct data = 5;  // The payload to be sent when the cron job runs.
}

message CronJobStatus {
    google.protobuf.Timestamp last_run_at = 1;  // The timestamp of the last run.
    google.protobuf.Timestamp next_run_at = 2;  // The timestamp of the next run.
    string error                          = 3;  // The error message if the cron job schedule is invalid.
}

message ListOfCronJob {
    repeated CronJob items = 1;  // The list of cron jobs.
    int32 total_count      = 2;  // The total number of items.
}
